{"version":3,"file":"ely.flat.js","sources":["../node_modules/tslib/tslib.es6.js","../ely.core/elyColorUtils.ts","../ely.core/elyMath.ts","../ely.core/elySerializable.ts","../ely.core/elyColor.ts","../ely.core/elyUtils.ts","../ely.core/elyGuard.ts","../ely.core/observable/elyObservable.ts","../ely.core/observable/properties/elyObservableProperty.ts","../ely.core/observable/properties/elyObservableDictionary.ts","../ely.flat.application/controls/elyStylesheet.ts","../ely.flat.application/app/app/efAppColorManager.ts","../ely.core/controls/elyViewCounter.ts","../ely.core/elyObject.ts","../ely.core/elyOneActionEval.ts","../ely.core/controls/elyView.ts","../ely.core/elyDesignable.ts","../ely.core/utils/elyXLogger.ts","../ely.flat.application/controls/action/elyControl.ts","../ely.flat.application/controls/text/efIconView.ts","../ely.flat.application/controls/text/efTextView.ts","../ely.flat.application/enums/elyEnum.ts","../ely.flat.application/enums/Style.ts","../ely.flat.application/controls/view/efPreloaderView.ts","../ely.flat.application/app/app/efAppPreloaderView.ts","../ely.flat.application/enums/textFieldType.ts","../ely.core/elyCookie.ts","../ely.core/elyTimer.ts","../ely.core/observable/properties/elyObservableBoolean.ts","../ely.flat.application/ely.flat.fields/src/elyFieldView.ts","../ely.flat.application/ely.flat.fields/src/elyTextField.ts","../ely.flat.application/controls/text/elyTextViewEditable.ts","../ely.flat.application/enums/elySize.ts","../ely.flat.application/enums/elyWeight.ts","../ely.flat.application/controls/text/elyTextView.ts","../ely.flat.application/app/app/view/elyFooterView.ts","../ely.core/elyLogger.ts","../ely.core/web/url/elyURL.ts","../ely.core/web/request/elyGetRequest.ts","../ely.flat.application/app/config/efAppConfig.ts","../ely.flat.application/controls/input/efField.ts","../ely.flat.application/controls/input/efTextArea.ts","../ely.flat.application/controls/text/efHeaderTextView.ts","../ely.flat.application/app/develop/efAppDevelopConsole.ts","../ely.flat.application/app/document/efAppDocumentBody.ts","../ely.flat.application/app/document/efAppDocumentHead.ts","../ely.flat.application/app/document/efAppDocument.ts","../ely.flat.application/controllers/elyViewController.ts","../ely.flat.application/controls/protocols/elyRebuildableViewProtocol.ts","../ely.core/observable/properties/elyObservableArray.ts","../ely.flat.application/controls/layout/efRowLayoutView.ts","../ely.flat.application/controls/layout/efGridLayoutView.ts","../ely.flat.application/controllers/elyGridViewController.ts","../ely.flat.application/enums/Size.ts","../ely.flat.application/enums/Weight.ts","../ely.flat.application/controllers/elySimplePageViewController.ts","../ely.flat.application/controllers/elyScreenController.ts","../ely.flat.application/controls/list/efListView.ts","../ely.flat.application/controls/navigation/efNavigationView.ts","../ely.flat.application/controls/notification/efNotificationView.ts","../ely.flat.application/canvas/objs/efSize.ts","../ely.core/elyDeviceDetector.ts","../ely.flat.application/app/app/efApplication.ts","../ely.flat.application/controls/text/elyIconView.ts","../ely.flat.application/app/app/elyFileWatcher.ts","../ely.flat.application/canvas/efCanvas.ts","../ely.flat.application/canvas/context/efContextElement.ts","../ely.flat.application/canvas/context/efContextImage.ts","../ely.flat.application/canvas/context/efContextRect.ts","../ely.flat.application/enums/elyAxis.ts","../ely.core/math/ef2DVector.ts","../ely.core/math/ef2DVectorValues.ts","../ely.core/math/ef2DRect.ts","../ely.flat.application/canvas/context/efContextText.ts","../ely.flat.application/canvas/efCanvasLayer.ts","../ely.flat.application/controls/action/efButton.ts","../ely.flat.application/controls/protocols/elyFieldProtocol.ts","../ely.flat.application/controls/action/elyInput.ts","../ely.flat.application/enums/elyStyle.ts","../ely.flat.application/controls/action/elyProgressView.ts","../ely.flat.application/controls/text/efTextViewContainer.ts","../ely.flat.application/controls/content/efPanelView.ts","../ely.flat.application/controls/data/elyDataGridView.ts","../ely.flat.application/controls/elyUIExt.ts","../ely.flat.application/controls/flex/elyGridRowView.ts","../ely.flat.application/controls/flex/elyGridView.ts","../ely.flat.application/controls/flex/elyStaticGridView.ts","../ely.flat.application/controls/input/efSwitchField.ts","../ely.flat.application/controls/layout/efContainerView.ts","../ely.flat.application/controls/input/efTextField.ts","../ely.flat.application/controls/notification/elyProgressNotificationView.ts","../ely.flat.application/controls/text/efLinkTextView.ts","../ely.flat.application/controls/view/efImageView.ts","../ely.flat.application/controls/view/efModalView.ts","../ely.flat.application/protocols/efProtocol.ts","../ely.flat.application/protocols/efErrorDisplayProtocol.ts","../ely.flat.application/protocols/efValidatableProtocol.ts","../ely.flat.application/protocols/efValueProtocol.ts","../ely.flat.application/controls/view/elyFormView.ts","../ely.flat.application/controls/view/elyScrollView.ts","../ely.flat.application/controls/view/elyTableView.ts","../ely.core/elySimpleJSONParser.ts","../ely.core/elyTime.ts","../ely.core/web/request/elyPostRequest.ts","../ely.flat.application/modules/elyColorPicker.elymod/color.picker.ts","../ely.flat.application/modules/elyColorPicker.elymod/elyColorPickerField.ts","../ely.flat.application/enums/elyDirection.ts","../ely.flat.application/ely.flat.fields/src/elyDataPickerField.ts","../ely.flat.application/bin/ely.flat.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyColorUtils.ts                                                     +\n + Файл изменен: 06.01.2019 05:32:41                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n\n/**\n * @interface elyColorRGB\n * @property {number} red\n * @property {number} green\n * @property {number} blue\n */\n\n/**\n * @interface elyColorHSV\n * @property {number} hue\n * @property {number} saturation\n * @property {number} value\n */\n\n/**\n * Цвет RGB\n */\nexport interface elyColorRGB {\n    red: number;\n    green: number;\n    blue: number;\n}\n\n/**\n * Цвет HSV\n */\nexport interface elyColorHSV {\n    hue: number;\n    saturation: number;\n    value: number;\n}\n\n/**\n * Утилиты для работы с цветом\n */\nexport class elyColorUtils {\n\n    /**\n     * Код белого цвета\n     */\n    public static whiteNumber = 16777215;\n\n    /**\n     * Код черного цвета\n     */\n    public static blackNumber = 0;\n\n    /**\n     * Преобразует HSV цвет в RGB\n     * @param color\n     */\n    public static hsv2rgb(color: elyColorHSV): elyColorRGB {\n        let red = 0;\n        let green = 0;\n        let blue = 0;\n        const i = Math.floor(color.hue * 6);\n        const f = color.hue * 6 - i;\n        const p = color.value * (1 - color.saturation);\n        const q = color.value * (1 - f * color.saturation);\n        const t = color.value * (1 - (1 - f) * color.saturation);\n        switch (i % 6) {\n            case 0:\n                red = color.value;\n                green = t;\n                blue = p;\n                break;\n            case 1:\n                red = q;\n                green = color.value;\n                blue = p;\n                break;\n            case 2:\n                red = p;\n                green = color.value;\n                blue = t;\n                break;\n            case 3:\n                red = p;\n                green = q;\n                blue = color.value;\n                break;\n            case 4:\n                red = t;\n                green = p;\n                blue = color.value;\n                break;\n            case 5:\n                red = color.value;\n                green = p;\n                blue = q;\n                break;\n        }\n        return {red, green, blue};\n    }\n\n    /**\n     * Преобразует RGB цвет в HSV\n     * @param color\n     */\n    public static rgb2hsv(color: elyColorRGB): elyColorHSV {\n\n        const max = Math.max(color.red, color.green, color.blue);\n        const min = Math.min(color.red, color.green, color.blue);\n        const d = max - min;\n        let hue = 0;\n        const saturation = (max === 0 ? 0 : d / max);\n        const value = max / 255;\n\n        switch (max) {\n            case min:\n                hue = 0;\n                break;\n            case color.red:\n                hue = (color.green - color.blue) + d * (color.green < color.blue ? 6 : 0);\n                hue /= 6 * d;\n                break;\n            case color.green:\n                hue = (color.blue - color.red) + d * 2;\n                hue /= 6 * d;\n                break;\n            case color.blue:\n                hue = (color.red - color.green) + d * 4;\n                hue /= 6 * d;\n                break;\n        }\n\n        return {hue, saturation, value};\n    }\n\n    /**\n     * Преобразует HSV в __hex\n     * @param color\n     */\n    public static hsv2hex(color: elyColorHSV): string {\n        return elyColorUtils.rgb2hex(elyColorUtils.hsv2rgb(color));\n    }\n\n    /**\n     * Преобразует HEX в RGB\n     * @param hex\n     */\n    public static hex2rgb(hex: string): elyColorRGB {\n        if (hex.length === 3) {\n            hex = hex.replace(/./g, \"$&$&\");\n        }\n        return {\n            blue: parseInt(hex[4] + hex[5], 16),\n            green: parseInt(hex[2] + hex[3], 16),\n            red: parseInt(hex[0] + hex[1], 16),\n        };\n    }\n\n    /**\n     * Преобразует __hex цвет в hsv\n     * @param hex\n     */\n    public static hex2hsv(hex: string): elyColorHSV {\n        return elyColorUtils.rgb2hsv(elyColorUtils.hex2rgb(hex));\n    }\n\n    /**\n     * Преобразует RGB в HEX\n     * @param color\n     */\n    public static rgb2hex(color: elyColorRGB): string {\n        const rgbToHex = (rgb: any) => {\n            let hex = Number(rgb).toString(16);\n            if (hex.length < 2) {\n                hex = \"0\" + hex;\n            }\n            return hex;\n        };\n        return (rgbToHex(color.red) + rgbToHex(color.green) + rgbToHex(color.blue)).toUpperCase();\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyMath.ts                                                           +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Библиотека математики\n */\nexport default class elyMath {\n\n    /**\n     * Преобразовывает значение переменной X из одного диапазона в другой.\n     *\n     * @param x\n     * @param inMin\n     * @param inMax\n     * @param outMin\n     * @param outMax\n     */\n    public static map(x: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n        return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elySerializable.ts                                                   +\n + Файл изменен: 31.01.2019 02:07:39                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n/**\n * Декоратор сериализации\n */\nexport function serializable(): ClassDecorator {\n    return (target: any) => {\n        target.isSerializable = true;\n        if (!(target.prototype.hasOwnProperty(\"serialize\") && target.hasOwnProperty(\"deserialize\"))) {\n            console.log(target);\n            throw Error(`Класс ${target.prototype.constructor.name} ` +\n                `не соответствует протоколу efSerializableProtocol!`);\n        }\n    };\n}\n\n/**\n * Возвращает true, если объект может быть сериализован\n * @param obj\n */\nexport function isSerializable(obj: any): obj is efSerializableProtocol<any> {\n    return Object.getOwnPropertyNames(obj.constructor).indexOf(\"isSerializable\") > -1 &&\n        obj.constructor.isSerializable;\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyColor.ts                                                          +\n + Файл изменен: 31.01.2019 02:40:23                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {elyColorHSV, elyColorRGB, elyColorUtils} from \"@core/elyColorUtils\";\nimport elyMath from \"@core/elyMath\";\nimport {serializable} from \"@core/elySerializable\";\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n@serializable()\n/**\n * Цвет\n * @class elyColor\n */\nexport default class elyColor implements efSerializableProtocol<elyColor> {\n\n    /**\n     * Возвращает черный цвет\n     * @return {elyColor}\n     */\n    public static black(): elyColor {\n        return new elyColor({hex: \"#000000\"});\n    }\n\n    /**\n     * Возвращает белый цвет\n     * @return {elyColor}\n     */\n    public static white(): elyColor {\n        return new elyColor({hex: \"#ffffff\"});\n    }\n\n    /**\n     * Возвращает красный цвет\n     * @return {elyColor}\n     */\n    public static red(): elyColor {\n        return new elyColor({hex: \"#ff0000\"});\n    }\n\n    /**\n     * Возвращает зеленый цвет\n     * @return {elyColor}\n     */\n    public static green(): elyColor {\n        return new elyColor({hex: \"#00ff00\"});\n    }\n\n    /**\n     * Возвращает синий цвет\n     * @return {elyColor}\n     */\n    public static blue(): elyColor {\n        return new elyColor({hex: \"#0000ff\"});\n    }\n\n    /**\n     * Десериализует объект\n     * @param {string} raw - сериализованный объект\n     * @return {elyColor}\n     */\n    public static deserialize(raw: string): elyColor | null {\n        return new elyColor({hex: raw});\n    }\n\n    /**\n     * 16 код цвета\n     * @protected\n     * @type {string}\n     */\n    protected __hex: string = \"000000\";\n\n    /**\n     * Конструктор\n     * @param {{ __hex?: string, rgb?: elyColorRGB, hsv?: elyColorHSV }} props - параметры\n     */\n    public constructor(props: { hex?: string, rgb?: elyColorRGB, hsv?: elyColorHSV } = {}) {\n        if (props.hex)\n            this.__hex = props.hex.startsWith(\"#\") ? props.hex.substr(1) : props.hex;\n        else if (props.rgb)\n            this.__hex = elyColorUtils.rgb2hex(props.rgb);\n        else if (props.hsv)\n            this.__hex = elyColorUtils.hsv2hex(props.hsv);\n        else\n            this.__hex = elyColor.black().getHexString().substr(1);\n    }\n\n    /**\n     * Возвращает число цвета\n     * @return {number}\n     */\n    public getByte(): number {\n        return parseInt(this.__hex, 16);\n    }\n\n    /**\n     * Возвращает true, если цвет темный\n     * @return {boolean}\n     */\n    public isDarker(): boolean {\n        return this.getByte() < (elyColorUtils.whiteNumber / 1.8);\n    }\n\n    /**\n     * Возвращает байты цветов\n     * @return {elyColorRGB}\n     */\n    public getRGBBytes(): elyColorRGB {\n        return {\n            blue: parseInt(this.__hex.substr(4, 2), 16),\n            green: parseInt(this.__hex.substr(2, 2), 16),\n            red: parseInt(this.__hex.substr(0, 2), 16),\n        };\n    }\n\n    /**\n     * Устанавливает RGB цвета\n     *\n     * @param {{elyColorRGB}} props\n     */\n    public setRGBBytes(props: { rgb: elyColorRGB }) {\n\n        if (props.rgb.red > 255) props.rgb.red = 255;\n        if (props.rgb.green > 255) props.rgb.green = 255;\n        if (props.rgb.blue > 255) props.rgb.blue = 255;\n        if (props.rgb.red < 0) props.rgb.red = 0;\n        if (props.rgb.green < 0) props.rgb.green = 0;\n        if (props.rgb.blue < 0) props.rgb.blue = 0;\n\n        this.__hex = props.rgb.red.toString(16) +\n            props.rgb.green.toString(16) +\n            props.rgb.blue.toString(16);\n    }\n\n    /**\n     * Возвращает цвет светлее\n     * @param {number} percentage\n     * @return {elyColor}\n     */\n    public getLighterColor(percentage: number): elyColor {\n        const rgb = this.getRGBBytes();\n        percentage = 1 - percentage;\n        const val = Math.round(255 - (255 * percentage));\n\n        rgb.red = Math.round(elyMath.map(val, 0, 255, rgb.red, 255));\n        rgb.green = Math.round(elyMath.map(val, 0, 255, rgb.green, 255));\n        rgb.blue = Math.round(elyMath.map(val, 0, 255, rgb.blue, 255));\n        return new elyColor({hex: \"#\" + elyColorUtils.rgb2hex(rgb)});\n    }\n\n    /**\n     * Возвращает цвет тмнее\n     * @param {number} percentage\n     * @return {elyColor}\n     */\n    public getDarkerColor(percentage: number): elyColor {\n        const rgb = this.getRGBBytes();\n        percentage = 1 - percentage;\n        const val = Math.round(255 - (255 * percentage));\n\n        rgb.red = Math.round(elyMath.map(val, 0, 255, rgb.red, 0));\n        rgb.green = Math.round(elyMath.map(val, 0, 255, rgb.green, 0));\n        rgb.blue = Math.round(elyMath.map(val, 0, 255, rgb.blue, 0));\n        return new elyColor({hex: \"#\" + elyColorUtils.rgb2hex(rgb)});\n    }\n\n    /**\n     * Возвращает HEX с символом # в начале\n     * @return {string}\n     */\n    public getHexString(): string {\n        return `#${this.__hex}`;\n    }\n\n    /**\n     * Возвращает HEX с символом # в начале\n     * @return {string}\n     */\n    public toString(): string {\n        return this.getHexString();\n    }\n\n    /**\n     * Сериализует объект\n     * @return {string}\n     */\n    public serialize(): string {\n        return this.getHexString();\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyUtils.ts                                                          +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n\ntype elyIterateClosure = (index: any, value: any, iteration: number) => boolean | any | void;\n\n/**\n * Утилиты\n */\nexport default class elyUtils {\n\n    public static BREAK_FLAG: string = \"ely_for_loop_break_312441edq2jhd78q2df67q\";\n\n    /**\n     * Возвращает true, если строка содержит число\n     * @param str\n     */\n    public static isNumber(str: string): boolean {\n        return /^(-?[0-9.]+)$/.test(str.toString());\n    }\n\n    /**\n     * Возвращает первый элемент объекта\n     * @param obj\n     */\n    public static first(obj: any): any {\n        for (const index in obj) {\n            if (obj.hasOwnProperty(index)) {\n                return obj[index];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Возвращает массив значений\n     * @param obj\n     */\n    public static values(obj: any): any[] {\n        const values: any[] = [];\n        elyUtils.forEach(obj, (index, value) => values.push(value));\n        return values;\n    }\n\n    /**\n     * Возвращает количество элементов в объекте\n     * @param obj\n     */\n    public static count(obj: object): number {\n        return Object.keys(obj).length;\n    }\n\n    /**\n     * Цикл по эелментам\n     * @param obj\n     * @param callable\n     */\n    public static forEach(obj: any, callable: elyIterateClosure) {\n        if (!obj) return null;\n        let i = 0;\n        for (const index in obj) {\n            if (!obj.hasOwnProperty(index)) {\n                continue;\n            }\n            const res = callable(index, obj[index], i);\n            if (res === this.BREAK_FLAG) {\n                return 1;\n            }\n            i++;\n        }\n        return 1;\n    }\n\n    /**\n     * Выполняет поиск элемента по объекту с критерием filter\n     * @param {*} obj - объект\n     * @param {elyIterateClosure} filter - фильтр\n     *\n     * Фильтр принемает на вход 2 значения: index, value.\n     * Если фильтр возвращает true, значение будет возвращено методом.\n     *\n     * @return {*}\n     */\n    public static find(obj: any, filter: elyIterateClosure) {\n        let i = 0;\n        for (const index in obj) {\n            if (!obj.hasOwnProperty(index)) continue;\n            if (filter(index, obj[index], i)) return {index, value: obj[index]};\n            i++;\n        }\n        return {index: null, value: null, empty: true};\n    }\n\n    /**\n     * Возвращает новый объект из фильтра\n     * @param obj\n     * @param filter\n     */\n    public static filter(obj: any | any[], filter: elyIterateClosure): {} | any[] | any {\n        if (obj instanceof Array) {\n            const newArray = [];\n            let i = 0;\n            for (const index in obj) {\n                if (obj.hasOwnProperty(index)) {\n                    if (filter(index, obj[index], i)) newArray.push(obj[index]);\n                    i++;\n                }\n            }\n            return newArray;\n        } else {\n            const newObject: any = {};\n\n            let i = 0;\n            for (const index in obj) {\n                if (!obj.hasOwnProperty(index)) continue;\n                if (filter(index, obj[index], i)) newObject[index] = obj[index];\n                i++;\n            }\n            return newObject;\n        }\n    }\n\n    /**\n     * Сортирует объект по алфавиту\n     * @param obj\n     */\n    public static sortAlphabetic(obj: any): any {\n        const ordered: any = {};\n        Object.keys(obj).sort().forEach(function (key) {\n            ordered[key] = obj[key];\n        });\n        return ordered;\n    }\n\n    /**\n     * Подключение скрипта в шапку страницы\n     * @param src\n     * @param callback\n     */\n    public static require(src: string, callback: () => void): void {\n        const script = document.createElement(\"script\") as HTMLScriptElement;\n        script.src = src;\n        script.onload = callback;\n        document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n\n    /**\n     * Удаляет выделение\n     */\n    public static removeSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {  // Chrome\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {  // Firefox\n                window.getSelection().removeAllRanges();\n            }\n        }\n    }\n\n    /**\n     * Возвращает разные значения\n     * @param obj1\n     * @param obj2\n     */\n    public static diffObj(obj1: any, obj2: any): {} {\n        const newItem: any = {};\n        for (const obj1Key in obj1) {\n            if (!obj1.hasOwnProperty(obj1Key)) continue;\n            if (!obj2.hasOwnProperty(obj1Key)) newItem[obj1Key] = obj1[obj1Key];\n        }\n        return newItem;\n    }\n\n    /**\n     * Возвращает true, если в матрице найдено значение\n     * @param matrix\n     * @param value\n     */\n    public static matrixHas(matrix: any[][], value: any): boolean {\n        return elyUtils.indexInMatrix(matrix, value) !== null;\n    }\n\n    /**\n     * Возвращает пару индексов элемента матрицы\n     * @param matrix\n     * @param value\n     */\n    public static indexInMatrix(matrix: any[][], value: any): [number, number] | null {\n        for (let i = 0; i < matrix.length; i++) {\n            for (let j = 0; j < matrix.length; j++) {\n                if (matrix[i][j] === value) return [i, j];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Удаляет элемент из матрицы\n     * @param matrix\n     * @param value\n     */\n    public static removeFromMatrix(matrix: any[][], value: any): boolean {\n        const indexes = elyUtils.indexInMatrix(matrix, value);\n        if (!indexes) return false;\n        matrix[indexes[0]].splice(indexes[1], 1);\n        return true;\n    }\n\n    public static cut(obj: any, len: number): {} {\n        const keys = Object.keys(obj);\n        const o: any = {};\n        keys.sort((a, b) => {\n            return a.length - b.length;\n        });\n        for (let i = 0; i < keys.length && i < len; i++) {\n            o[keys[i]] = obj[keys[i]];\n        }\n        return o;\n    }\n\n    public static applySrc(source: { [name: string]: any }, key: string | string[], o: { [name: string]: any },\n                           prefix: string = \"\", checker?: (s: string) => string) {\n        checker = checker || ((val) => val);\n        if (typeof key === \"string\") {\n            o[prefix + key] = checker(source[key]);\n        } else {\n            key.forEach((value) => {\n                o[prefix + value] = checker!(source[value]);\n            });\n        }\n    }\n\n    /**\n     * Simple object check.\n     * @param item\n     * @returns {boolean}\n     */\n    public static isObject(item: any) {\n        return (item && typeof item === \"object\" && !Array.isArray(item));\n    }\n\n    /**\n     * Deep merge two objects.\n     * @param target\n     * @param sources\n     */\n    public static mergeDeep(target: any, ...sources: any[]): any {\n        if (!sources.length) return target;\n        const source = sources.shift();\n\n        if (elyUtils.isObject(target) && elyUtils.isObject(source)) {\n            for (const key in source) {\n                if (!source.hasOwnProperty(key)) continue;\n                if (elyUtils.isObject(source[key])) {\n                    if (!target[key]) Object.assign(target, {[key]: {}});\n                    elyUtils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(target, {[key]: source[key]});\n                }\n            }\n        }\n\n        return elyUtils.mergeDeep(target, ...sources);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyGuard.ts                                                          +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Безопасность значений\n */\nexport default class elyGuard {\n\n    /**\n     * Функция\n     * @param func\n     * @param args\n     * @param callback\n     * @param context\n     */\n    public static func<T>(func: any, args: any[], callback: (value: T) => void, context?: any): void {\n        const result = func.apply(context, args);\n        if (result !== undefined && result !== null) callback(result);\n    }\n\n    /**\n     * Значение\n     * @param variable\n     * @param callback\n     */\n    public static variable<T>(variable: any, callback: (value: T) => void): void {\n        if (variable !== undefined && variable !== null) callback(variable);\n    }\n\n    /**\n     * Возвращает true, если obj undefined или null.\n     * @param {*} obj\n     * @return {boolean}\n     */\n    public static isNone(obj: any): obj is null {\n        return obj === undefined || obj === null;\n    }\n\n    /**\n     * Возвращает true, если obj не undefined\n     * @param {*} obj\n     * @return {boolean}\n     */\n    public static isSet(obj: any): boolean {\n        return obj !== undefined;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyObservable.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Прослушиваемый протокол\n * @class elyObservable\n */\nexport default class elyObservable {\n\n    /**\n     * @protected\n     */\n    protected observers: { [event: string]: Array<() => void> } = {};\n\n    /**\n     * Добавляет наблюдатель\n     * @param {String} event - событие\n     * @param {Function} observer - наблюдатель\n     */\n    public addObserver(event: string, observer: any): elyObservable {\n        if (!this.observers.hasOwnProperty(event)) this.observers[event] = [];\n        this.observers[event].push(observer);\n        return this;\n    }\n\n    /**\n     * Удаляет обработчик\n     * @param event\n     * @param observer\n     */\n    public removeObserver(event: string, observer: any): elyObservable {\n        if (this.observers.hasOwnProperty(event)) {\n            this.observers[event].splice(this.observers[event].indexOf(observer), 1);\n        }\n        return this;\n    }\n\n    /**\n     * Удаляет все обработчики события или событий\n     * @param {String} [event] - Событие\n     */\n    public removeAllObservers(event?: string): elyObservable {\n        if (event !== undefined) {\n            if (this.observers.hasOwnProperty(event)) {\n                this.observers[event] = [];\n            }\n        } else {\n            this.observers = {};\n        }\n        return this;\n    }\n\n    /**\n     * Сообщает о событие всех наблюдателей\n     * @param {String} event\n     * @param {*} args\n     */\n    protected notificate(event: string, args?: any) {\n        if (this.observers.hasOwnProperty(event)) {\n            for (const observer of this.observers[event]) observer.apply(this, args);\n        }\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyObservableProperty.ts                                             +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservable from \"@core/observable/elyObservable\";\n\n/**\n * Новый обработчик\n */\ntype elyObservablePropChangeHandler<T> = (value: T, oldVal?: T) => void;\n\n/**\n * Обрабатываемое значение\n * @class elyObservableProperty\n * @template T\n * @augments elyObservable\n */\nexport default class elyObservableProperty<T> extends elyObservable {\n\n    /**\n     * Простое автоматизированное свойство\n     * @param context\n     * @param value\n     * @param prop\n     */\n    public static simplePropertyAccess(context: any, value: any, prop: elyObservableProperty<any>): any {\n        if (!elyGuard.isSet(value)) return prop.get(null);\n        prop.set(value);\n        return context;\n    }\n\n    /**\n     * Значение\n     * @protected\n     * @type {T}\n     */\n    protected value: T | null;\n\n    /**\n     * Флаг защиты от перезаписи\n     * @ignore\n     * @protected\n     * @type {boolean}\n     */\n    protected isOverwriteProtected: boolean = false;\n\n    /**\n     * Конструктор\n     * @param {T|null} defaultValue\n     */\n    constructor(defaultValue: T | null = null) {\n        super();\n        /**\n         * @protected\n         * @type {T}\n         */\n        this.value = defaultValue || null;\n    }\n\n    /**\n     * Возвращает значение\n     * @return {T|null}\n     * @deprecated не рекомендовано использовать метод `get()` без\n     * `guard` значения!\n     *\n     * Внимание. Пометка deprecated к данному методу не говорит о его ближайшем\n     * сокращении. Только лишь о безопасности.\n     */\n    public get(): T | null;\n\n    /**\n     * Возвращает значение или guard если значение null\n     * @param {T} guard\n     * @return {T}\n     */\n    public get(guard: T): T;\n\n    /**\n     * Возвращает значение или guard если значение null.\n     *\n     * Данный метод никогда не возвращает значение null. В случае, если значение\n     * прослушиваемого параметра null или undefined, возвращает `guard` значение.\n     *\n     * @param {T} [guard]\n     * @return {T}\n     *\n     *\n     *     // Создаем прослушиваемый параметр\n     *     let prop = new elyObservableProperty<string>();\n     *\n     *     // Отображаем в консоль \"защищенное\" значение (с флагом guard)\n     *     console.log( prop.get( \"test\" ) ); // test\n     *\n     *\n     */\n    public get(guard?: T): T | null {\n        if (this.isNull() && guard !== null) return guard!;\n        else if (this.isNull()) return null;\n\n        return this.value;\n    }\n\n    /**\n     * Устанавливает флаг защиты от перезаписи.\n     *\n     * @param {boolean} flag\n     * @return {this}\n     *\n     *\n     *     // Создаем прослушиваемый параметр\n     *     let prop = new elyObservableProperty<string>();\n     *     prop.set( \"Tom\" );\n     *\n     *     // Запрещаем перезапись\n     *     prop.overwrite(false);\n     *\n     *     prop.set( \"John\" );\n     *\n     *     // Отображаем в консоль \"защищенное\" значение (с флагом guard)\n     *     console.log( prop.get() ); // Tom\n     *\n     *\n     */\n    public overwrite(flag: boolean): elyObservableProperty<T> {\n        this.isOverwriteProtected = flag;\n        return this;\n    }\n\n    /**\n     * Устанавливает значение и вызывает оповещение `change`, прослушиваемое\n     * методом {@link elyObservableProperty.change}.\n     *\n     * @param {T} value\n     * @return {this}\n     *\n     *\n     *     // Создаем прослушиваемый параметр\n     *     let prop = new elyObservableProperty<string>();\n     *     prop.set( \"Tom\" );\n     *\n     *     // Отображаем в консоль \"защищенное\" значение (с флагом guard)\n     *     console.log( prop.get() ); // Tom\n     *\n     *\n     */\n    public set(value: T): elyObservableProperty<T> {\n        if (this.isOverwriteProtected) return this;\n        const old = this.value;\n        /**\n         * @type {T}\n         * @protected\n         */\n        this.value = value;\n        this.notificate(\"change\", [old, value]);\n        return this;\n    }\n\n    /**\n     * Возвращает true, если объект null или undefined.\n     * @return {boolean}\n     */\n    public isNull(): boolean {\n        return elyGuard.isNone(this.value);\n    }\n\n    /**\n     * Добавляет наблюдатель за изменением значения\n     * @param {{function(value:T, oldValue:T?)}} observer - наблюдатель\n     *\n     *\n     *\n     *     // Создание свойства\n     *     let observableString = new elyObservableProperty<string>();\n     *\n     *     observableString.change( value => {\n     *          console.log(\"Set to: \" + value);\n     *     });\n     *\n     *     observableString.set(\"123\");\n     *     observableString.set(\"abc\");\n     *\n     *     // Вывод:\n     *     // Set to: 123\n     *     // Set to: abc\n     *\n     *\n     *\n     */\n    public change(observer: elyObservablePropChangeHandler<T>): elyObservableProperty<T> {\n        this.addObserver(\"change\", (old: T, nw: T) => {\n            observer(nw, old);\n        });\n        return this;\n    }\n\n    /**\n     * Преобразует объект в строку\n     * @return {string}\n     */\n    public toString(): string {\n        return this.get() + \"\";\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyObservableDictionary.ts                                           +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyUtils from \"@core/elyUtils\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyGuard from \"@core/elyGuard\";\n\n/**\n * Элемент свойства словаря\n */\ninterface elyObservableDictionaryItem<T> {\n    [key: string]: T;\n}\n\n/**\n * Свойство словаря\n * @class elyObservableDictionary\n * @template T\n */\nexport default class elyObservableDictionary<T> extends elyObservableProperty<elyObservableDictionaryItem<T>> {\n\n    /**\n     * Конструктор\n     * @param defaultValue\n     */\n    constructor(defaultValue: elyObservableDictionaryItem<T> = {}) {\n        super(defaultValue);\n    }\n\n    /**\n     * Возвращакт словарь, как объекта\n     */\n    public get(): elyObservableDictionaryItem<T> {\n        return super.get()!;\n    }\n\n    /**\n     * Слушатель добавления новго элемента в словаре\n     * @param observer\n     */\n    public addNewItemObserver(observer: (key: string, value: T) => void): elyObservableDictionary<T> {\n        this.addObserver(\"newItem\", observer);\n        return this;\n    }\n\n    public getSorted(handler?: (a: string, b: string) => number): elyObservableDictionary<T> {\n        const ordered = new elyObservableDictionary<T>();\n        Object.keys(this.value!).sort(handler).forEach((key: string) => {\n            ordered.add(key, this.value![key]);\n        });\n        return this;\n    }\n\n    /**\n     * Слушатель удаления элемента в словаре\n     * @param observer\n     */\n    public addRemoveItemObserver(observer: (key: string, value: T) => void): elyObservableDictionary<T> {\n        this.addObserver(\"removeItem\", observer);\n        return this;\n    }\n\n    /**\n     * Возвращает элемент словаря или NULL\n     * @param key\n     */\n    public item(key: string): T | null {\n        const val = (this.value || {})[key];\n        return elyGuard.isNone(val) ? null : val;\n    }\n\n    /**\n     * Возвращает элемент по индексу\n     * @param index\n     */\n    public itemByIndex(index: number): { key: string, value: T } | null {\n        const key = Object.keys(this.value!)[index];\n        return key ? {key, value: this.value![key]} : null;\n    }\n\n    /**\n     * Добавляет значение в словарь\n     * @param key   - ключ\n     * @param value - значение\n     */\n    public add(key: string, value: T): elyObservableDictionary<T> {\n        this.value![key] = value;\n        this.notificate(\"change\", [this.value]);\n        this.notificate(\"newItem\", [key, value]);\n        return this;\n    }\n\n    /**\n     * Удаляет значение из словаря\n     * @param key\n     */\n    public remove(key: string): boolean {\n        if (this.value!.hasOwnProperty(key)) {\n            const copy = this.value![key];\n            delete this.value![key];\n            this.notificate(\"change\", [this.value]);\n            this.notificate(\"removeItem\", [key, copy]);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Очищает словарь\n     */\n    public clear(): elyObservableDictionary<T> {\n        this.set({});\n        return this;\n    }\n\n    /**\n     * Возвращает количество элементов в словаре\n     *\n     *\n     *     // Создаём словарь\n     *     let dictionary = new ely.observable.dictionary();\n     *\n     *     // Заполняем его элементами\n     *     dictionary.add(\"a\", 100);\n     *     dictionary.add(\"b\", 200);\n     *     dictionary.add(\"c\", 300);\n     *\n     *     console.log( dictionary.count() );\n     *\n     *     //3\n     *\n     *\n     */\n    public count() {\n        let count = 0;\n        elyUtils.forEach(this.value, () => count++);\n        return count;\n    }\n\n    /**\n     * Цикл по всем элементам словаря\n     * @param iterator\n     *\n     *\n     *     // Создаём словарь\n     *     let dictionary = new ely.observable.dictionary();\n     *\n     *     // Заполняем его элементами\n     *     dictionary.add(\"a\", 100);\n     *     dictionary.add(\"b\", 200);\n     *     dictionary.add(\"c\", 300);\n     *\n     *     dictionary.forEach( (key, value) => {\n     *        console.log(key + \" \" + value);\n     *     });\n     *\n     *     //a 100\n     *     //b 200\n     *     //c 300\n     *\n     *\n     */\n    public forEach(iterator: (key: string, value: T, iteration?: number) => void): elyObservableDictionary<T> {\n        elyUtils.forEach(this.value, iterator);\n        return this;\n    }\n\n    /**\n     * Возвращает true, если существует ключ\n     * @param key\n     */\n    public contains(key: string): boolean {\n        return this.value!.hasOwnProperty(key);\n    }\n\n    /**\n     * Возвращает первый индекс значения или null, если значение не найдено.\n     *\n     * Данный метод можно использовать для проверки наличия значения.\n     *\n     * @param value\n     */\n    public keyOf(value: T): string | null {\n        let searched = null;\n        elyUtils.forEach(this.value, (index, value1) => {\n            if (value1 === value) {\n                searched = index;\n                return elyUtils.BREAK_FLAG;\n            }\n        });\n        return searched;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyStylesheet.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservableDictionary from \"@core/observable/properties/elyObservableDictionary\";\n\n/*\n *\n *  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n *   ,--. o                   |    o\n *   |   |.,---.,---.,---.    |    .,---.,---.\n *   |   |||---'|   ||   |    |    ||   ||   |\n *   `--' ``---'`---|`---'    `---'``   '`---|\n *              `---'                    `---'\n *\n * Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)\n * Mail: <diegoling33@gmail.com>\n *\n * Это программное обеспечение имеет лицензию, как это сказано в файле\n * COPYING, который Вы должны были получить в рамках распространения ПО.\n *\n * Использование, изменение, копирование, распространение, обмен/продажа\n * могут выполняться исключительно в согласии с условиями файла COPYING.\n *\n * Файл: elyStylesheet.ts\n * Файл создан: 19.11.2018 20:56:39\n * ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n *\n */\n\n/**\n * Типы стиля\n */\nenum elyStylesheetItemType {\n    class, tag, id,\n}\n\n/**\n * Элемент таблицы стиля\n */\ninterface elyStylesheetItem {\n    /**\n     * Тип\n     */\n    type: elyStylesheetItemType;\n\n    /**\n     * Имя\n     */\n    name: string;\n\n    /**\n     * Стили\n     */\n    style: CSSStyleDeclaration | { [name: string]: string | null };\n}\n\n/**\n * Таблица стилей\n *\n */\nexport default class elyStylesheet {\n\n    /**\n     * Глобавльные стили\n     */\n    public static readonly global = new elyStylesheet();\n    /**\n     * Классы\n     */\n    public readonly classes: elyObservableDictionary<elyStylesheetItem>;\n\n    /**\n     * Панель стилей\n     */\n    public stylesheet: StyleSheet;\n\n    /**\n     * Элемент таблицы стилей\n     */\n    protected __view: HTMLStyleElement;\n\n    /**\n     * Конструктор\n     * @param sheet\n     *\n     */\n    public constructor(sheet?: StyleSheet) {\n        this.__view = document.createElement(\"style\");\n        this.stylesheet = sheet || (this.__view.sheet || {} as StyleSheet);\n\n        this.classes = new elyObservableDictionary<elyStylesheetItem>();\n    }\n\n    /**\n     * Возвращает документ\n     */\n    public getDocument(): HTMLStyleElement {\n        return this.__view;\n    }\n\n    public addItem(name: string, type: elyStylesheetItemType, style: CSSStyleDeclaration |\n        { [name: string]: string }): elyStylesheet {\n        if (this.classes.contains(name) && this.classes.item(name)!.type === type) {\n            this.classes.item(name)!.style = {\n                ...(this.classes.item(name)!.style || {}),\n                ...(style as CSSStyleDeclaration),\n            };\n        } else {\n            this.classes.add(name, {name, type, style});\n        }\n        return this.rebuild();\n    }\n\n    /**\n     * Добавляет класс стилей\n     * @param className\n     * @param style\n     */\n    public addClass(className: string, style: CSSStyleDeclaration | { [name: string]: string }): elyStylesheet {\n        return this.addItem(className, elyStylesheetItemType.class, style);\n    }\n\n    /**\n     * Добавляет ID стилей\n     * @param id\n     * @param style\n     */\n    public addID(id: string, style: CSSStyleDeclaration | { [name: string]: string }): elyStylesheet {\n        return this.addItem(id, elyStylesheetItemType.id, style);\n    }\n\n    /**\n     * Добавляет стили\n     * @param name\n     * @param style\n     */\n    public add(name: string, style: CSSStyleDeclaration | { [name: string]: string }): elyStylesheet {\n        return this.addItem(name, elyStylesheetItemType.tag, style);\n    }\n\n    /**\n     * Перестроение таблицы стилей\n     */\n    public rebuild(): elyStylesheet {\n        this.getDocument().innerHTML = \"\";\n        this.classes.forEach((key, value) => {\n            const tempNode = document.createElement(\"div\");\n            for (const name in value.style) if (value.style.hasOwnProperty(name))\n                (tempNode.style as any)[name] = (value.style as any)[name];\n            let name = value.name;\n            switch (value.type) {\n                case elyStylesheetItemType.class:\n                    name = `.${name}`;\n                    break;\n                case elyStylesheetItemType.tag:\n                    name = `${name}`;\n                    break;\n                case elyStylesheetItemType.id:\n                    name = `#${name}`;\n                    break;\n            }\n            this.getDocument().appendChild(\n                document.createTextNode(`${name}{${tempNode.getAttribute(\"style\")!.replace(/;/g, \" !important;\")}}`));\n        });\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppColorManager.ts                                                 +\n + Файл изменен: 30.01.2019 01:44:27                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efApplication from \"@app/app/efApplication\";\nimport elyColor from \"@core/elyColor\";\nimport elyStylesheet from \"@controls/elyStylesheet\";\n\n/**\n * Менеджер цветов приложения\n * @class efAppColorManager\n */\nexport default class efAppColorManager {\n\n    /**\n     * Приложение\n     * @protected\n     * @ignore\n     */\n    protected __app: efApplication;\n\n    /**\n     * Цвет приложения\n     * @protected\n     * @ignore\n     */\n    protected __appColor: elyColor = elyColor.black();\n\n    /**\n     * Цвет навигации\n     * @protected\n     * @ignore\n     */\n    protected __navigationBarColor: elyColor = elyColor.black();\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    public constructor(props: { app: efApplication }) {\n        this.__app = props.app;\n    }\n\n    /**\n     * Изменяет цветовую гамму приложения\n     * @param color\n     */\n    public applyApplicationColor(color: elyColor): void {\n        const darker = color.getDarkerColor(0.1);\n        const lighter = color.getLighterColor(0.18);\n        // elyStylesheet.global.addClass(\"bg-primary\", {\n        //     backgroundColor: color.toString(),\n        //     color: color.isDarker() ? \"white\" : \"black\",\n        // });\n        // elyStylesheet.global.addClass(\"brd-primary\", {\n        //     borderColor: color.toString(),\n        // });\n        //\n        // elyStylesheet.global.addClass(\"text-primary\", {\n        //     color: color.toString(),\n        // });\n        //\n        // elyStylesheet.global.addClass(\"bg-info\", {\n        //     backgroundColor: lighter.toString(),\n        //     color: lighter.isDarker() ? \"white\" : \"black\",\n        // });\n        // elyStylesheet.global.addClass(\"brd-info\", {\n        //     borderColor: lighter.toString(),\n        // });\n        //\n        // elyStylesheet.global.addClass(\"text-info\", {\n        //     color: lighter.toString(),\n        // });\n\n        elyStylesheet.global.add(\"::-webkit-scrollbar-track\", {\n            borderColor: \"#c2c2c2\",\n        });\n\n        elyStylesheet.global.add(\"::-webkit-scrollbar\", {\n            borderColor: \"#c2c2c2\",\n            width: \"5px\",\n        });\n\n        elyStylesheet.global.add(\"::-webkit-scrollbar-thumb\", {\n            backgroundColor: darker.toString(),\n        });\n        this.__appColor = color;\n    }\n\n    /**\n     * Изменяет цвет панели нацигации\n     * @param color\n     */\n    public applyNavigationBarColor(color: elyColor): void {\n        const isDarkerColor = color.isDarker();\n        const borderColor = isDarkerColor ? color.getLighterColor(0.3) : color.getDarkerColor(0.05);\n        const textColor = isDarkerColor ? elyColor.white() : new elyColor({hex: \"#555555\"});\n\n        elyStylesheet.global.addClass(\"ef-navigation\", {\n            backgroundColor: color.toString(),\n            borderBottomColor: borderColor.toString(),\n        });\n\n        elyStylesheet.global.addClass(\"ef-navigation li\", {\n            color: textColor.toString(),\n        });\n        this.__navigationBarColor = color;\n    }\n\n    /**\n     * Возвращает текущий цвет приложения\n     * @return {elyColor}\n     */\n    public getApplicationColor(): elyColor {\n        return this.__appColor;\n    }\n\n    /**\n     * Возвращает текущий цвет панели навигации\n     * @return {elyColor}\n     */\n    public getNavigatonBarColor(): elyColor {\n        return this.__navigationBarColor;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyViewCounter.ts                                                    +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\n\n/**\n * Счетчик элементов\n */\nexport default class elyViewCounter {\n\n    /**\n     * Создает идентификатор для элемента\n     * @param view\n     */\n    public static createIdentifierFor(view: elyView): string {\n        elyViewCounter.__count++;\n        return \"view-\" + elyViewCounter.__count;\n    }\n\n    /**\n     * Счётчик элементов\n     */\n    protected static __count: number = 0;\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyObject.ts                                                         +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservable from \"@core/observable/elyObservable\";\n\n/**\n * Объект\n * @class elyObject\n * @abstract\n */\nexport default abstract class elyObject extends elyObservable {\n    protected constructor() {\n        super();\n    }\n\n    public describe(): string[] {\n        return Object.getOwnPropertyNames(this).filter((value, index) => {\n            return !value.startsWith(\"__\");\n        });\n    }\n\n    /**\n     * Проверяет объект на наличие обозреваемого свойства в стандарте EPS6.\n     * @param propName\n     */\n    public hasObservablePropertyProtocol(propName: string): boolean {\n        if (propName.indexOf(\"Property\") > -1) propName.replace(\"Property\", \"\");\n        const desc = this.describe();\n        if (desc.indexOf(propName + \"Property\") === -1) return false;\n        return typeof (this as any)[propName] === \"function\";\n\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyOneActionEval.ts                                                  +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Выполнение синтаксиса elyOneAction\n */\nexport default class elyOneActionEval {\n\n    /**\n     * Стандартный обработчик\n     */\n    public static readonly default = new elyOneActionEval();\n\n    /**\n     * Правила обработки действий\n     */\n    public actionsRules: { [command: string]: (a: any) => void } = {};\n\n    /**\n     * Исполняет действие\n     * @param action\n     */\n    public go(action: string): void {\n        const args = action.match(/\\#([A-z0-9]+)\\((.+)\\)/);\n        if (args && args.length > 2) {\n            if (this.actionsRules.hasOwnProperty(args[1])) {\n                this.actionsRules[args[1]](args[2]);\n            }\n        }\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyView.ts                                                           +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyViewCounter from \"@core/controls/elyViewCounter\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyObject from \"@core/elyObject\";\nimport elyOneActionEval from \"@core/elyOneActionEval\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Объект отображения\n * @class elyView\n * @abstract\n */\nexport default abstract class elyView extends elyObject {\n\n    /**\n     * Родитель элемента\n     */\n    public superview: elyView | null = null;\n\n    /**\n     * Элемент отображения\n     */\n    protected readonly __view: HTMLElement;\n\n    /**\n     * Идентификатор\n     */\n    protected __id: string | null = null;\n\n    /**\n     * Строка действия\n     */\n    protected __actionString: string = \"\";\n\n    /**\n     * Свойство: скрытие элемента\n     * @ignore\n     */\n    private readonly hiddenProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    protected constructor(options: elyViewOptions = {}) {\n        super();\n        if (options.selector) this.__view = document.querySelector(options.selector);\n        else if (options.element) this.__view = options.element;\n        else this.__view = document.createElement(options.tag || \"div\");\n\n        if (options.action) this.actionString(options.action);\n        if (options.class) this.addClass(...options.class.split(\" \"));\n        this.__view.onclick = (ev: any) => {\n            this.notificate(\"click\", [ev]);\n        };\n        if (options.style) this.css(options.style);\n        this.addObserver(\"click\", () => {\n            if (this.__actionString !== \"\") elyOneActionEval.default.go(this.__actionString);\n        });\n        this.hiddenProperty = new elyObservableProperty<boolean>(false);\n        this.hiddenProperty.change(value => this.__view.hidden = value);\n        this.hidden(options.hidden || false);\n        if (options.opacity) this.opacity(options.opacity);\n        if (options.disabled) this.disabled(options.disabled);\n\n        const wait = setInterval(() => {\n            if (this.getRect().width) {\n                clearInterval(wait);\n                this.notificate(\"viewWillDraw\", [this]);\n            }\n        }, 10);\n    }\n\n    /**\n     * Возвращает HTML элемент\n     */\n    public getDocument(): HTMLElement {\n        return this.__view;\n    }\n\n    /**\n     * Возвращает внутренний идентификатор элемента\n     */\n    public identifier(): string {\n        if (!this.__id) {\n            this.__id = elyViewCounter.createIdentifierFor(this);\n            this.attribute(\"id\", this.__id);\n        }\n        return this.__id;\n    }\n\n    /**\n     * Возвращает действие\n     */\n    public actionString(): string;\n\n    /**\n     * Устанавливает действие\n     * @param action\n     */\n    public actionString(action: string): elyView;\n\n    /**\n     * Устанавливает или возвращает действие\n     * @param action\n     */\n    public actionString(action?: string): elyView | string {\n        if (action === undefined) return this.__actionString;\n        this.__actionString = action;\n        return this;\n    }\n\n    /**\n     * Возвращает атррибут\n     * @param name\n     */\n    public attribute(name: string): string | null;\n\n    /**\n     * Устанавливает или удаляет аттрибут\n     * @param name\n     * @param value\n     */\n    public attribute(name: string, value: string | null): elyView;\n\n    /**\n     * Устанавливает или возвращает атрибут.\n     *\n     * Для удаления атрибута, установите значение value как null.\n     *\n     * @param name\n     * @param value\n     */\n    public attribute(name: string, value?: string | null): string | null | elyView {\n        if (value === null) {\n            this.getDocument().removeAttribute(name);\n            return this;\n        }\n        if (value === undefined) {\n            return this.getDocument().getAttribute(name);\n        }\n        this.getDocument().setAttribute(name, value);\n        return this;\n    }\n\n    /**\n     * Добавляет класс\n     * @param className - имя класса стилей или кортеж имен\n     *\n     *\n     *     let obj = new elyControl();\n     *     obj.addClass(\"animate\");\n     *     obj.addClass(\"go\");\n     *\n     *     // Или\n     *\n     *     obj.addClass(\"animate\", \"go\");\n     *\n     *\n     */\n    public addClass(...className: string[]): elyView {\n        this.getDocument().classList.add(...className);\n        return this;\n    }\n\n    /**\n     * Возвращает true, если содержит класс\n     * @param className - имя класса стилей\n     */\n    public hasClass(className: string): boolean {\n        return this.getDocument().classList.contains(className);\n    }\n\n    /**\n     * Удаляет класс\n     * @param className - имя класса стилей\n     */\n    public removeClass(className: string): elyView {\n        this.getDocument().classList.remove(className);\n        return this;\n    }\n\n    /**\n     * Удаляет или добавляет класс\n     * @param {string} className\n     * @return {this}\n     */\n    public toggleClass(className: string): elyView {\n        if (this.hasClass(className)) this.removeClass(className);\n        else this.addClass(className);\n        return this;\n    }\n\n    /**\n     * Возвращает скрытие элемента\n     */\n    public hidden(): boolean;\n\n    /**\n     * Устанавливает скрытие элемента\n     */\n    public hidden(value: boolean): elyView;\n\n    /**\n     * Возвращает и устанавливает скрытие элемента\n     */\n    public hidden(value?: boolean): boolean | null | elyView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.hiddenProperty);\n    }\n\n    /**\n     * Устанавливает css значение\n     * @param style\n     */\n    public css(style: { [key: string]: any }): elyView {\n        elyUtils.forEach(style, (k, v) => {\n            const pattern = /([+-]=)?(.+)(px|%|rem)/;\n            const res = pattern.exec(v.toString());\n            if (res && res[1]) {\n                if (res[1] === \"+=\") {\n                    v = parseFloat(/(.+)(px|%)/.exec(this.getDocument().style[k] || \"0\")![1])\n                        + parseFloat(res[2]) + res[3];\n                } else if (res[1] === \"-=\") {\n                    v = parseFloat(/(.+)(px|%)/.exec(this.getDocument().style[k] || \"0\")![1])\n                        - parseFloat(res[2]) + res[3];\n                }\n            }\n            this.getDocument().style[k] = v;\n        });\n        return this;\n    }\n\n    /**\n     * Возвращает стили элемента\n     */\n    public getStyle(): CSSStyleDeclaration;\n\n    /**\n     * Возвращает параметр стиля элемента\n     * @param name - имя параметра\n     */\n    public getStyle(name: string): string | null;\n\n    /**\n     * Возвращает параметр стиля или все стили элемента,\n     * если значение  name не установлено.\n     * @param name\n     */\n    public getStyle(name?: string): CSSStyleDeclaration | string | null {\n        if (name === undefined) return this.getDocument().style;\n        return this.getStyle()[name as any];\n    }\n\n    /**\n     * Возвращает данные положения и размера объекта\n     */\n    public getRect(): DOMRect | ClientRect {\n        return this.getDocument().getBoundingClientRect();\n    }\n\n    /**\n     * Устанавливает или возвращает высоту\n     * @param value\n     */\n    public height(value?: number | string): number | elyView {\n        if (value === undefined) {\n            return this.getDocument().getBoundingClientRect().height;\n        }\n        if (typeof value === \"number\") value = `${value}px`;\n        this.css({height: value});\n        return this;\n    }\n\n    /**\n     * Устанавливает или возвращает ширину\n     * @param value\n     */\n    public width(value?: number | string): number | elyView {\n        if (value === undefined) {\n            return this.getDocument().getBoundingClientRect().width;\n        }\n        if (typeof value === \"number\") value = `${value}px`;\n        this.css({width: value});\n        return this;\n    }\n\n    /**\n     * Возвращает прозрачность элемента\n     */\n    public opacity(): number;\n\n    /**\n     * Устанавливает прозрачность элемента\n     * @param value\n     */\n    public opacity(value: number): elyView;\n\n    /**\n     * Устанавливает или возвращает прозрачность\n     * @param value\n     */\n    public opacity(value?: number): number | null | elyView {\n        if (value === undefined) return parseFloat(this.getStyle(\"opacity\") || \"1\");\n        return this.css({opacity: value.toString()});\n    }\n\n    /**\n     * Устанавливает фокус на объект\n     */\n    public makeFirstResponder(): elyView {\n        this.getDocument().focus();\n        return this;\n    }\n\n    /**\n     * Размывает объект\n     */\n    public blur(): elyView {\n        this.getDocument().blur();\n        return this;\n    }\n\n    /**\n     * Запускает анимацию css\n     * @param animationName\n     * @param completion\n     */\n    public animateCss(animationName: string, completion?: () => void) {\n        const animationEnd = ((el) => {\n            const animations = {\n                MozAnimation: \"mozAnimationEnd\",\n                OAnimation: \"oAnimationEnd\",\n                WebkitAnimation: \"webkitAnimationEnd\",\n                animation: \"animationend\",\n            };\n\n            for (const t in animations) {\n                if (el.style[t as any] !== undefined) {\n                    // @ts-ignore\n                    return animations[t];\n                }\n            }\n        })(document.createElement(\"div\"));\n\n        this.addClass(\"animated\", animationName);\n        const animationCallback = () => { // This is the fix\n            this.removeClass(\"animated\");\n            this.removeClass(animationName);\n\n            // this is the main part of the fix\n            this.getDocument().removeEventListener(animationEnd, animationCallback);\n            if (completion) completion();\n            this.notificate(\"animate-css-\" + animationName);\n        }; // End fix\n        this.getDocument().addEventListener(animationEnd, animationCallback);\n\n        return this;\n    }\n\n    /**\n     * Анимация повяления\n     * @param completion - обработчик завершения анимации\n     */\n    public fadeIn(completion?: () => void): elyView {\n        this.hidden(false);\n        this.animateCss(\"fadeIn\", () => {\n            if (completion) completion();\n            this.notificate(\"fadedIn\", [this]);\n        });\n        return this;\n    }\n\n    /**\n     * Анимация исчезания\n     * @param completion - обработчик завершения анимации\n     */\n    public fadeOut(completion?: () => void): elyView {\n        this.animateCss(\"fadeOut\", () => {\n            this.hidden(true);\n            if (completion) completion();\n            this.notificate(\"fadedOut\", [this]);\n        });\n        return this;\n    }\n\n    /**\n     * Возвращает абсолютные размеры (без отступов)\n     * @return {{width: number, height: number}}\n     *\n     * @deprecated\n     */\n    public offSize() {\n        return {width: this.getDocument().offsetWidth, height: this.getDocument().offsetHeight};\n    }\n\n    /**\n     * Удаляет содержимое view\n     */\n    public removeViewContent(): elyView {\n        this.getDocument().innerHTML = \"\";\n        return this;\n    }\n\n    /**\n     * Удаляет все применененные стили\n     */\n    public removeStyles(): elyView {\n        return this.attribute(\"style\", null) as elyView;\n    }\n\n    /**\n     * Удаляет все аттрибуты элемента\n     */\n    public removeAttributes(): elyView {\n        for (const attr in this.getDocument().attributes) {\n            if (this.getDocument().getAttribute(attr))\n                this.getDocument().removeAttribute(attr);\n        }\n        return this;\n    }\n\n    /**\n     * Полностью очищает элемент view\n     *\n     * - {@link elyView.removeViewContent}\n     * - {@link elyView.removeStyles}\n     * - {@link elyView.removeAttributes}\n     */\n    public clearView(): elyView {\n        this.removeViewContent();\n        this.removeStyles();\n        this.removeAttributes();\n        return this;\n    }\n\n    /**\n     * Утанавливает подсказку\n     * @param {String} hint - подсказка\n     * @return {elyView}\n     */\n    public hint(hint?: string): elyView | string {\n        const selector = this.getDocument().querySelector(\".ef-hint\");\n        if (typeof hint === \"string\") {\n            if (selector) {\n                selector.innerHTML = hint;\n            } else {\n                const hintView = document.createElement(\"div\");\n                hintView.classList.add(\"ef-hint\");\n                hintView.innerText = hint;\n                this.getDocument().appendChild(hintView);\n            }\n            return this;\n        } else {\n            if (selector) return selector.innerHTML;\n            return \"\";\n        }\n    }\n\n    /**\n     * Возвращает доступность элемента\n     */\n    public disabled(): boolean;\n\n    /**\n     * Устанавливает доступность элемента\n     * @param bool\n     */\n    public disabled(bool: boolean): elyView;\n\n    /**\n     * Устанавливает или возвращает доступность элемента\n     * @param bool\n     */\n    public disabled(bool?: boolean): elyView | boolean {\n        if (bool === undefined) return (this.attribute(\"disabled\") || null) === \"disabled\";\n        return this.attribute(\"disabled\", bool ? \"disabled\" : null) as elyView;\n    }\n\n    /**\n     * Удаляет элемент\n     */\n    public removeFromSuperview(): elyView {\n        if (this.getDocument().parentNode !== null) {\n            this.getDocument().parentNode!.removeChild(this.getDocument());\n        }\n        return this;\n    }\n\n    /**\n     * Добавляет слушатель изменения\n     * @param closure\n     */\n    public resize(closure: (view: elyView, maxWidth: number, maxHeight: number) => void): elyView {\n        const bd = window.document.body;\n        window.addEventListener(\"resize\", () => {\n            closure(this, bd.clientWidth, bd.clientHeight);\n        });\n        closure(this, bd.clientWidth, bd.clientHeight);\n        return this;\n    }\n\n    protected elyViewWillDraw(o: (view: elyView) => void): void {\n        this.addObserver(\"viewWillDraw\", o);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyDesignable.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyView from \"@core/controls/elyView\";\nimport elyUtils from \"@core/elyUtils\";\n\nexport const elyDesignableAutoFieldsData: { [className: string]: elyDesignableAutoFields } = {};\n\n/**\n * Состояния авто полян\n */\n\nexport enum elyDesignableFieldState {\n    VIEW = 4,\n    GETSET = 3,\n    GET = 1,\n    SET = 2,\n    DENY = 0,\n}\n\n/**\n * Дескриптор класса elyDesignableAutoFields\n */\nexport interface elyDesignableAutoFields {\n    fields: { [name: string]: elyDesignableAutoFieldItem };\n}\n\n/**\n * Элемент автоматического поля\n */\nexport interface elyDesignableAutoFieldItem {\n    name: string;\n    state: elyDesignableFieldState;\n    type: string;\n    values: any;\n}\n\nfunction createAutoFieldBase(target: any) {\n    if (!elyDesignableAutoFieldsData.hasOwnProperty(target.name)) elyDesignableAutoFieldsData[target.name] = {\n        fields: {},\n    };\n}\n\n/**\n * Ядро Designable функционала\n */\nexport class elyDesignableCore {\n\n    /**\n     * Замораживает элемент\n     * @param view\n     */\n    public static freeze(view: elyView | any): any {\n        const obj: any = {};\n        const name = view.constructor.name;\n        if (name && elyDesignableAutoFieldsData.hasOwnProperty(name)) {\n            const fields = elyDesignableAutoFieldsData[name].fields;\n            obj.item = name;\n            for (const fieldName in fields) {\n                if (!fields.hasOwnProperty(fieldName)) continue;\n                const field = fields[fieldName] as elyDesignableAutoFieldItem;\n                if (field.state === elyDesignableFieldState.GET || field.state === elyDesignableFieldState.GETSET) {\n                    obj[field.name] = view[field.name]();\n                    if (field.values) {\n                        if (obj[field.name] && obj[field.name].value) {\n                            obj[field.name] = obj[field.name].value;\n                        }\n                    }\n                }\n                if (field.state === elyDesignableFieldState.VIEW) {\n                    const afv = (view as any)[field.name] as elyControl;\n                    if (afv && afv instanceof elyControl) {\n                        obj[field.name] = [];\n                        for (const o of afv.getSubViews())\n                            obj[field.name].push(elyDesignableCore.freeze(o));\n                    }\n                }\n            }\n        }\n        return obj;\n    }\n\n}\n\n/**\n * Декоратор автоматического поля для UI Builder\n * @param name\n * @param state\n * @param type\n * @param values\n */\nexport function designable(name: string, state: elyDesignableFieldState, type = \"string\", values: any = null):\n    ClassDecorator {\n    return (target: any) => {\n        if (state === elyDesignableFieldState.DENY) {\n            if (elyDesignableAutoFieldsData[target.name]) {\n                delete elyDesignableAutoFieldsData[target.name].fields[name];\n            }\n        }\n        createAutoFieldBase(target);\n        const superName = Object.getPrototypeOf(target).name;\n        if (superName && elyDesignableAutoFieldsData[superName])\n            elyUtils.forEach(elyDesignableAutoFieldsData[superName].fields,\n                (index, value) => elyDesignableAutoFieldsData[target.name].fields[index] = value);\n        elyDesignableAutoFieldsData[target.name].fields[name] = {\n            name,\n            state,\n            type,\n            values,\n        } as elyDesignableAutoFieldItem;\n    };\n}\n","/*\n *\n *  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n *   ,--. o                   |    o\n *   |   |.,---.,---.,---.    |    .,---.,---.\n *   |   |||---'|   ||   |    |    ||   ||   |\n *   `--' ``---'`---|`---'    `---'``   '`---|\n *              `---'                    `---'\n *\n * Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)\n * Mail: <diegoling33@gmail.com>\n *\n * Это программное обеспечение имеет лицензию, как это сказано в файле\n * COPYING, который Вы должны были получить в рамках распространения ПО.\n *\n * Использование, изменение, копирование, распространение, обмен/продажа\n * могут выполняться исключительно в согласии с условиями файла COPYING.\n *\n * Файл: elyXLogger* Файл создан: 04.12.2018 07:03:21\n * ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n */\n\n/**\n * elyXLogger - логгер уровня X\n */\nexport default class elyXLogger {\n\n    /**\n     * Стандартный логгер\n     */\n    public static default = new elyXLogger({mainPrefix: \"Default\"});\n\n    /**\n     * Уровни логирования\n     */\n    public static loggerLevels = {\n        DEBUG: 2,\n        LOG: 1,\n        NONE: 0,\n    };\n\n    /**\n     * Текущий уровень логирования\n     */\n    public static loggerLevel = elyXLogger.loggerLevels.DEBUG;\n\n    /**\n     * Стили\n     */\n    public static styles = {\n\n        /**\n         * Сбрасывает любой примененный эффект\n         * @type {string}\n         */\n        reset: \"\\x1b[0m\",\n\n        /**\n         * Делает цвет ярче\n         * @type {string}\n         */\n        bright: \"\\x1b[1m\",\n\n        dim: \"\\x1b[2m\",\n\n        /**\n         * Подчернутый текст\n         * @type {string}\n         */\n        underscore: \"\\x1b[4m\",\n\n        /**\n         * Мигающий текст\n         * @type {string}\n         */\n        blink: \"\\x1b[5m\",\n\n        /**\n         * Скрытый текст\n         */\n        hidden: \"\\x1b[8m\",\n\n        /**\n         * Развернутый текст\n         */\n        reverse: \"\\x1b[7m\",\n\n        /**\n         * Font color: Black\n         * @type {string}\n         */\n        fgBlack: \"\\x1b[30m\",\n\n        /**\n         * Font color: Red\n         * @type {string}\n         */\n        fgRed: \"\\x1b[31m\",\n\n        /**\n         * Font color: Green\n         * @type {string}\n         */\n        fgGreen: \"\\x1b[32m\",\n\n        /**\n         * Font color: Yellow\n         * @type {string}\n         */\n        fgYellow: \"\\x1b[33m\",\n\n        /**\n         * Font color: Blue\n         * @type {string}\n         */\n        fgBlue: \"\\x1b[34m\",\n\n        /**\n         * Font color: Magenta\n         * @type {string}\n         */\n        fgMagenta: \"\\x1b[35m\",\n\n        /**\n         * Font color: Cyan\n         * @type {string}\n         */\n        fgCyan: \"\\x1b[36m\",\n\n        /**\n         * Font color: White\n         * @type {string}\n         */\n        fgWhite: \"\\x1b[37m\",\n\n        /**\n         * Font color: Grey\n         * @type {string}\n         */\n        fgGrey: \"\\x1b[37m\",\n\n        /**\n         * Background color: Black\n         * @type {string}\n         */\n        bgBlack: \"\\x1b[40m\",\n\n        /**\n         * Background color: Red\n         * @type {string}\n         */\n        bgRed: \"\\x1b[41m\",\n\n        /**\n         * Background color: Green\n         * @type {string}\n         */\n        bgGreen: \"\\x1b[42m\",\n\n        /**\n         * Background color: Yellow\n         * @type {string}\n         */\n        bgYellow: \"\\x1b[43m\",\n\n        /**\n         * Background color: Blue\n         * @type {string}\n         */\n        bgBlue: \"\\x1b[44m\",\n\n        /**\n         * Background color: Magenta\n         * @type {string}\n         */\n        bgMagenta: \"\\x1b[45m\",\n\n        /**\n         * Background color: Cyan\n         * @type {string}\n         */\n        bgCyan: \"\\x1b[46m\",\n\n        /**\n         * Background color: White\n         * @type {string}\n         */\n        bgWhite: \"\\x1b[47m\",\n    };\n\n    /**\n     * Формирует строку `[ OK ]` или `[ NO ]` в зависимости от условия\n     * @param {boolean} condition\n     * @return {string}\n     */\n    public static getOkNoString(condition: boolean): string {\n        if (condition) {\n            return \"[ OK ]\";\n        } else {\n            return \"[ NO ]\";\n        }\n    }\n\n    /**\n     * Filters the logger message\n     *\n     * @param {string} msg - the message\n     * @param {boolean} [clearfix = false] - if true: color tags will remove\n     *                                       else it will be evaluated\n     *\n     * @return {string} - evaluated of cleared message\n     * @private\n     */\n    protected static __loggerFilter(msg: string, clearfix = false) {\n        msg = msg.replace(/&rst/g, clearfix ? \"\" : elyXLogger.styles.reset);\n        msg = msg.replace(/&red/g, clearfix ? \"\" : elyXLogger.styles.fgRed);\n        msg = msg.replace(/&grn/g, clearfix ? \"\" : elyXLogger.styles.fgGreen);\n        msg = msg.replace(/&cyn/g, clearfix ? \"\" : elyXLogger.styles.fgCyan);\n        msg = msg.replace(/&gre/g, clearfix ? \"\" : elyXLogger.styles.fgGrey);\n        msg = msg.replace(/&blu/g, clearfix ? \"\" : elyXLogger.styles.fgBlue);\n        msg = msg.replace(/&ywl/g, clearfix ? \"\" : elyXLogger.styles.fgYellow);\n        msg = msg.replace(/&mgn/g, clearfix ? \"\" : elyXLogger.styles.fgMagenta);\n\n        msg = msg.replace(/&uns/g, clearfix ? \"\" : elyXLogger.styles.underscore);\n\n        return msg;\n    }\n\n    protected static __log(...obj: any[]): void {\n        if (window && window.elyflatobjects && window.elyflatobjects.efAppDevelopConsole\n            && window.elyflatobjects.efAppDevelopConsole.shared) {\n            window.elyflatobjects.efAppDevelopConsole.shared.print(...obj);\n        } else {\n            console.log(...obj);\n        }\n    }\n\n    protected static __error(...obj: any[]): void {\n        if (window && window.elyflatobjects && window.elyflatobjects.efAppDevelopConsole\n            && window.elyflatobjects.efAppDevelopConsole.shared) {\n            window.elyflatobjects.efAppDevelopConsole.shared.error(...obj);\n        } else {\n            console.error(...obj);\n        }\n    }\n\n    /**\n     * Запись логов в файл\n     */\n    public writeLogs: boolean = false;\n\n    /**\n     * Чистый лог\n     */\n    public clear: boolean;\n\n    /**\n     * Главный префикс\n     */\n    protected mainPrefix: string = \"\";\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    public constructor(props: { mainPrefix?: string, writeLogs?: boolean, clear?: boolean } = {}) {\n        this.mainPrefix = props.mainPrefix || \"ely\";\n        this.writeLogs = props.writeLogs || false;\n        this.clear = props.clear || false;\n    }\n\n    /**\n     * Отображает сообщение в консоль\n     * @param {String} msg\n     */\n    public log(msg: string) {\n        if (elyXLogger.loggerLevel >= elyXLogger.loggerLevels.LOG)\n            this._sendToConsole(msg, [\"Log\"]);\n    }\n\n    /**\n     * Отображает сообщение в консоль от имени модуля module\n     *\n     * @param {String} module - модуль\n     * @param {String} msg - сообщение\n     */\n    public mod(module: string, msg: string) {\n        if (elyXLogger.loggerLevel >= elyXLogger.loggerLevels.LOG)\n            this._sendToConsole(msg, [\"Module\", [elyXLogger.styles.fgMagenta, module]]);\n    }\n\n    /**\n     * Отображает сообщение об ошибке\n     * @param {String} msg\n     */\n    public error(msg: string) {\n        if (elyXLogger.loggerLevel >= elyXLogger.loggerLevels.DEBUG)\n            this._sendToConsole(msg, [[elyXLogger.styles.fgRed, \"Error\"]], true);\n    }\n\n    /**\n     * Отображает предупреждение\n     * @param {String} msg\n     */\n    public warning(msg: string) {\n        if (elyXLogger.loggerLevel >= elyXLogger.loggerLevels.DEBUG)\n            this._sendToConsole(msg, [[elyXLogger.styles.fgMagenta, \"Warning\"]]);\n    }\n\n    /**\n     * Выводит LOG информацию\n     *\n     * @param {string} message  - the message\n     * @param {Array} prefixes - the array with the prefixes\n     * @param {boolean} error - the error flag\n     *\n     * \"prefixes\" could be like:\n     *\n     *  1. [ \"Log\" ]                                - Simple\n     *  2. [ \"Module\", \"Test\" ]                     - Tree\n     *  3. [ \"Module\", [ \"\\x1b[32m\", \"Test\" ] ]     - Tree with the color\n     *\n     *  @private\n     */\n    protected _sendToConsole(message: string, prefixes: any, error: boolean = false) {\n        if (this.mainPrefix !== \"\") {\n            const _temp = [[elyXLogger.styles.fgCyan, this.mainPrefix]];\n            for (const _prefix of prefixes) _temp.push(_prefix);\n            prefixes = _temp;\n        }\n\n        const dateString = new Date().toISOString().replace(/T/, \" \").// replace T with a space\n        replace(/\\..+/, \"\");\n\n        let _prefixToDisplay = \"\";\n        let _clearPrefix = \"\";\n\n        for (let _prefix of prefixes) {\n            let _color = this.clear ? \"\" : elyXLogger.styles.fgGreen;\n            if (_prefix instanceof Array) {\n                _color = _prefix[0];\n                _prefix = _prefix[1];\n            }\n\n            _prefixToDisplay += \"[\" + (!this.clear ? _color : \"\") + _prefix +\n                (!this.clear ? elyXLogger.styles.reset : \"\") + \"]\";\n            _clearPrefix += \"[\" + _prefix + \"]\";\n        }\n\n        const str = \"[\" + dateString + \"]\" + _clearPrefix + \": \" + elyXLogger.__loggerFilter(message, true);\n        const strToDisplay = \"[\"\n            + (!this.clear ? elyXLogger.styles.fgGrey : \"\")\n            + dateString\n            + (!this.clear ? elyXLogger.styles.reset : \"\")\n            + \"]\"\n            + _prefixToDisplay\n            + (!this.clear ? elyXLogger.styles.reset : \"\")\n            + \": \" + elyXLogger.__loggerFilter(message) + (this.clear ? \"\" : elyXLogger.styles.reset);\n\n        this._saveLogString(str);\n        if (this.clear) {\n            if (!error) elyXLogger.__log(elyXLogger.__loggerFilter(strToDisplay, true));\n            else elyXLogger.__error(elyXLogger.__loggerFilter(strToDisplay, true));\n        } else\n            if(!error) elyXLogger.__log(strToDisplay);\n            else elyXLogger.__error(strToDisplay);\n    }\n\n    /**\n     * Записывает данные в файл\n     *\n     * @param {string} str\n     * @private\n     */\n    protected _saveLogString(str: string) {\n        // if (this.writeLogs)\n        //     require(\"fs\").appendFile(\"./logs/logger0.log\", str + \"\\n\", () => { /* Nothing is done. */\n        //     });\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyControl.ts                                                        +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyViewEntityProtocol from \"@controls/protocols/elyViewEntityProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport {designable, elyDesignableAutoFieldsData, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyXLogger from \"@core/utils/elyXLogger\";\nimport elyControlOptions from \"@options/elyControlOptions\";\n\n/**\n * Основная единица графического элемента\n * @class elyControl\n * @augments elyView\n */\n@designable(\"actionString\", elyDesignableFieldState.GETSET, \"string\")\n@designable(\"hidden\", elyDesignableFieldState.GETSET, \"boolean\")\n@designable(\"opacity\", elyDesignableFieldState.GETSET, \"number\")\nexport default class elyControl extends elyView {\n\n    /**\n     * Горизонтальная линяя\n     */\n    public static line = () => new elyControl({tag: \"hr\"});\n\n    /**\n     * Пустой объект elyControl\n     */\n    public static empty = () => new elyControl();\n\n    /**\n     * Создает elyControl или объект elyControlObjectProtocol\n     * @param obj\n     */\n    public static fromObject(obj: elyViewEntityProtocol): elyView {\n        if (obj.line) return elyControl.line();\n        const item = obj.item;\n        if (item && window.elyflatobjects.hasOwnProperty(item)) {\n            const opts = elyUtils.filter(obj, (k) => {\n                return [\"item\"].indexOf(k) === -1;\n            });\n            const inst = new (window.elyflatobjects as any)[item](opts);\n            if (elyDesignableAutoFieldsData.hasOwnProperty(item)) {\n                for (const afvName in elyDesignableAutoFieldsData[item].fields) {\n                    if (!elyDesignableAutoFieldsData[item].fields.hasOwnProperty(afvName)) continue;\n                    if (elyDesignableAutoFieldsData[item].fields[afvName].state === elyDesignableFieldState.VIEW\n                        && opts.hasOwnProperty(afvName)) {\n                        for (const afvv of opts[afvName]) {\n                            (inst[afvName] as elyControl).addSubView(elyControl.fromObject(afvv));\n                        }\n                    }\n\n                }\n            }\n            if (inst instanceof elyView || typeof inst.getView === \"function\")\n                return inst;\n        }\n        return elyControl.empty();\n    }\n\n    /**\n     * Создает elyControl или объект elyControlObjectProtocol из JSON строки\n     * @param json\n     */\n    public static fromJSON(json: string): elyView {\n        return elyControl.fromObject(JSON.parse(json));\n    }\n\n    /**\n     * Выполняет попытку мутировать obj в объект elyView.\n     * Иначе возвращает пустой элемент.\n     *\n     *\n     *     let obj = \"Тест\";\n     *     let view = elyControl.tryMutateToView(obj);\n     *\n     *     typeOf view; // elyTextView\n     *     view.text(); // \"Тест\"\n     *\n     *\n     *\n     * @param obj\n     */\n    public static tryMutateToView(obj: any): elyView {\n        try {\n            if (obj instanceof elyView) return obj;\n            return String(obj).textView();\n        } catch (e) {\n            return elyControl.empty();\n        }\n    }\n\n    /**\n     * Дочерние элементы\n     */\n    private readonly __subviews: elyView[];\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyControlOptions = {}) {\n        super(options);\n\n        this.__subviews = [];\n        if (options.subviews) this.addSubView(...options.subviews);\n    }\n\n    /**\n     * Возвращает дочерние элементы\n     */\n    public getSubViews(): elyView[] {\n        return this.__subviews;\n    }\n\n    /**\n     * Добавляет элемент в элемент\n     * @param views\n     */\n    public addSubView(...views: elyView[]): elyControl {\n        views.forEach((view) => {\n            if (view instanceof elyView) {\n                this.__subviews.push(view);\n                view.superview = this;\n                this.notificate(\"addview\", [view]);\n                this.getDocument().appendChild(view.getDocument());\n            } else {\n                elyXLogger.default.error(\"В объект elyControl может быть добавлен только элемент \" +\n                    \"реализующий протокол elyContentProtocol!\");\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Удаляет дочений элемент\n     * @param view\n     */\n    public removeSubView(view: elyView): elyControl {\n        const index = this.__subviews.indexOf(view);\n        if (index > -1) {\n            const sub = this.__subviews[index];\n            this.getDocument().removeChild(sub.getDocument());\n            this.__subviews.splice(this.__subviews.indexOf(view), 1);\n        }\n        return this;\n    }\n\n    /**\n     * Полностью очищает графический элемент\n     */\n    public clearView(): elyControl {\n        this.__subviews.splice(0, this.__subviews.length);\n        this.__view.innerHTML = \"\";\n        return this;\n    }\n\n    public removeViewContent(): elyView {\n        this.__subviews.splice(0, this.__subviews.length);\n        return super.removeViewContent();\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efIconView.ts                                                        +\n + Файл изменен: 08.02.2019 00:19:40                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Size from \"@enums/Size\";\nimport Style from \"@enums/Style\";\nimport Weight from \"@enums/Weight\";\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n/**\n * Опции отображения иконки {@link efIconView}\n */\nexport interface efIconViewOptions extends elyViewOptions {\n    iconName?: string;\n    iconStyle?: Style;\n    iconSize?: Size;\n    iconWeight?: Weight;\n    spinning?: boolean;\n}\n\n/**\n * Элемент отображения иконки\n * @class efIconView\n * @augments {elyView}\n */\nexport class efIconView extends elyView implements efSerializableProtocol<efIconView> {\n\n    /**\n     * Десериализует объект\n     * @param {string} raw - сериализованный объект\n     * @return {efIconView}\n     */\n    public static deserialize<T>(raw: string): efIconView | null {\n        return new efIconView(JSON.parse(raw));\n    }\n\n    /**\n     * Свойство: размер иконки\n     * @ignore\n     * @protected\n     */\n    protected readonly __iconSizeProperty: elyObservableProperty<Size>\n        = new elyObservableProperty<Size>().change((value, oldVal) => {\n        this.getStyle().fontSize = null;\n        if (oldVal && !oldVal.custom) this.removeClass(`--${oldVal.value}`);\n        if (value.custom) {\n            this.getStyle().fontSize = value.value;\n        } else {\n            this.addClass(`--${value.value}`);\n        }\n    });\n\n    /**\n     * Свойство: толщина иконки\n     * @ignore\n     * @protected\n     */\n    protected readonly __iconWeightProperty: elyObservableProperty<Weight>\n        = new elyObservableProperty<Weight>().change((value, oldVal) => {\n        this.getStyle().fontWeight = null;\n        if (oldVal && !oldVal.custom) this.removeClass(`--${oldVal.value}`);\n        if (value.custom) {\n            this.getStyle().fontSize = value.value;\n        } else {\n            this.addClass(`--${value.value}`);\n        }\n    });\n\n    /**\n     * Свойство: стиль иконки\n     * @ignore\n     * @protected\n     */\n    protected readonly __iconStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>().change((value, oldVal) => {\n        if (oldVal) this.removeClass(`--${oldVal.value}`);\n        this.addClass(`--${value.value}`);\n    });\n\n    /**\n     * Свойство: имя иконки\n     * @ignore\n     * @protected\n     */\n    protected readonly __iconNameProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>().change((value, oldVal) => {\n        if (oldVal) this.removeClass(`fa-${oldVal}`);\n        this.addClass(`fa-${value}`);\n    });\n\n    /**\n     * Конструткор\n     * @param {efIconViewOptions} options\n     */\n    public constructor(options: efIconViewOptions) {\n        super({tag: \"span\", ...options});\n        this.addClass(\"ef-icon\");\n        this.addClass(\"fa\");\n        this.iconName(options.iconName || \"refresh\");\n        if (elyGuard.isSet(options.iconSize)) this.iconSize(options.iconSize!);\n        if (elyGuard.isSet(options.iconStyle)) this.iconStyle(options.iconStyle!);\n        if (elyGuard.isSet(options.iconWeight)) this.iconWeight(options.iconWeight!);\n        if (elyGuard.isSet(options.spinning)) this.spinning(options.spinning!);\n    }\n\n    /**\n     * Возвращает свойство: имя иконки\n     * @return {elyObservableProperty<string>}\n     */\n    public getIconNameProperty(): elyObservableProperty<string> {\n        return this.__iconNameProperty;\n    }\n\n    /**\n     * Возвращает имя иконки\n     * @returns {string}\n     */\n    public iconName(): string;\n\n    /**\n     * Устанавливает имя иконки\n     * @param {string} value - значение\n     * @returns {this}\n     */\n    public iconName(value: string): efIconView;\n\n    /**\n     * Возвращает и устанавливает имя иконки\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public iconName(value?: string): string | null | efIconView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__iconNameProperty);\n    }\n\n    /**\n     * Возвращает свойство: размер иконки\n     * @return {elyObservableProperty<Size>}\n     */\n    public getIconSizeProperty(): elyObservableProperty<Size> {\n        return this.__iconSizeProperty;\n    }\n\n    /**\n     * Возвращает размер иконки\n     * @returns {Size}\n     */\n    public iconSize(): Size;\n\n    /**\n     * Устанавливает размер иконки\n     * @param {Size} value - значение\n     * @returns {this}\n     */\n    public iconSize(value: Size): efIconView;\n\n    /**\n     * Возвращает и устанавливает размер иконки\n     * @param {Size} [value] - значение\n     * @returns {Size|this|null}\n     */\n    public iconSize(value?: Size): Size | null | efIconView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__iconSizeProperty);\n    }\n\n    /**\n     * Возвращает свойство: толщина иконки\n     * @return {elyObservableProperty<Weight>}\n     */\n    public getIconWeightProperty(): elyObservableProperty<Weight> {\n        return this.__iconWeightProperty;\n    }\n\n    /**\n     * Возвращает толщину иконки\n     * @returns {Weight}\n     */\n    public iconWeight(): Weight;\n\n    /**\n     * Устанавливает толщину иконки\n     * @param {Weight} value - значение\n     * @returns {this}\n     */\n    public iconWeight(value: Weight): efIconView;\n\n    /**\n     * Возвращает и устанавливает толщина иконки\n     * @param {Weight} [value] - значение\n     * @returns {Weight|this|null}\n     */\n    public iconWeight(value?: Weight): Weight | null | efIconView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__iconWeightProperty);\n    }\n\n    /**\n     * Возвращает свойство: стиль иконки\n     * @return {elyObservableProperty<Style>}\n     */\n    public geticonStyleProperty(): elyObservableProperty<Style> {\n        return this.__iconStyleProperty;\n    }\n\n    /**\n     * Возвращает стиль иконки\n     * @returns {Style}\n     */\n    public iconStyle(): Style;\n\n    /**\n     * Устанавливает стиль иконки\n     * @param {Style} value - значение\n     * @returns {this}\n     */\n    public iconStyle(value: Style): efIconView;\n\n    /**\n     * Возвращает и устанавливает стиль иконки\n     * @param {Style} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public iconStyle(value?: Style): Style | null | efIconView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__iconStyleProperty);\n    }\n\n    /**\n     * Возвращает флаг анимации вращения элемента\n     * @return {boolean}\n     */\n    public spinning(): boolean;\n\n    /**\n     * Устанавливает флаг анимации вращения элемента\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public spinning(value: boolean): efIconView;\n\n    /**\n     * Возвращает и устанавливает флаг анимации вращения элемента\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public spinning(value?: boolean): boolean | null | efIconView {\n        if (value === undefined) return this.hasClass(\"fa-spin\");\n        if (value) this.addClass(\"fa-spin\");\n        this.removeClass(\"fa-spin\");\n        return this;\n    }\n\n    /**\n     * Сериализует объект\n     */\n    public serialize(): string {\n        return JSON.stringify({\n            iconName: this.iconName(),\n            iconSize: this.iconSize().value,\n            iconStyle: this.iconStyle().value,\n            iconWeight: this.iconWeight().value,\n        });\n    }\n}\n\n/**\n * @typedef {Object} efIconViewOptions\n * @property {string} [iconName]\n * @property {Size|string|number} [iconSize]\n * @property {Weight|string|number} [iconWeight]\n * @property {Style|string|number} [iconStyle]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efTextView.ts                                                        +\n + Файл изменен: 08.02.2019 00:09:09                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Size from \"@enums/Size\";\nimport Style from \"@enums/Style\";\nimport Weight from \"@enums/Weight\";\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n/**\n * Опции {@link efTextView}\n */\nexport interface efTextViewOptions extends elyViewOptions {\n    text?: string;\n    textStyle?: Style;\n    textSize?: Size;\n    textWeight?: Weight;\n    textCenter?: boolean;\n}\n\n/**\n * Элемент отображения текста\n * @class efTextView\n * @augments {elyView}\n *\n * Мета коды строк:\n *\n * - \\*Text\\* - Толстый текст.\n * - (link: http://dlgs.ru){Some text} - Добавляет контекстную ссылку.\n * - (action: content(index)){Some text} - Добавляет контекстный elyOneAction.\n * - {nl} - Перенос строки\n */\nexport class efTextView extends elyView implements efSerializableProtocol<efTextView> {\n\n    /**\n     * Десериализует объект\n     * @param {string} raw - сериализованный объект\n     * @return {efTextView}\n     */\n    public static deserialize<T>(raw: string): efTextView | null {\n        return new efTextView(JSON.parse(raw));\n    }\n\n    /**\n     * Фильтрует строку\n     * @param {string} str\n     * @return {string}\n     */\n    public static filterString(str: string): string {\n        return str.replace(/\\*([^*]+)\\*/g, \"<b>$1</b>\")\n            .replace(/\\(link:([^)]+)\\){([^}]+)}/g, \"<a href='$1'>$2</a>\")\n            .replace(/\\(action:([^{]+)\\){([^}]+)}/g, \"<a href='#' onclick='ely.oneAction.go(\\\"$1\\\")'>$2</a>\")\n            .replace(/{nl}/g, \"<br>\");\n    }\n\n    /**\n     * Свойство: стиль текста\n     * @ignore\n     * @protected\n     */\n    protected readonly __textStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>().change((value, oldVal) => {\n        if (oldVal) this.removeClass(`--${oldVal.value}`);\n        this.addClass(`--${value.value}`);\n    });\n\n    /**\n     * Свойство: размер текста\n     * @ignore\n     * @protected\n     */\n    protected readonly __textSizeProperty: elyObservableProperty<Size>\n        = new elyObservableProperty<Size>().change((value, oldVal) => {\n        this.getStyle().fontSize = null;\n        if (oldVal && !oldVal.custom) this.removeClass(`--${oldVal.value}`);\n        if (value.custom) {\n            this.getStyle().fontSize = value.value;\n        } else {\n            this.addClass(`--${value.value}`);\n        }\n    });\n\n    /**\n     * Свойство: толщина текста\n     * @ignore\n     * @protected\n     */\n    protected readonly __textWeightProperty: elyObservableProperty<Weight>\n        = new elyObservableProperty<Weight>().change((value, oldVal) => {\n        this.getStyle().fontWeight = null;\n        if (oldVal && !oldVal.custom) this.removeClass(`--${oldVal.value}`);\n        if (value.custom) {\n            this.getStyle().fontSize = value.value;\n        } else {\n            this.addClass(`--${value.value}`);\n        }\n    });\n\n    /**\n     * Свойство: текст элемента\n     * @ignore\n     * @protected\n     */\n    protected readonly __textProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>().change(value => {\n        this.getDocument().innerHTML = efTextView.filterString(value);\n    });\n\n    /**\n     * Конструктор\n     * @param {efTextViewOptions} options - опции\n     */\n    public constructor(options: efTextViewOptions = {}) {\n        super({tag: \"span\", ...options});\n        this.addClass(\"ef-text\");\n        this.text(options.text || \"\");\n        elyGuard.variable<Size>(options.textSize, value => this.textSize(value));\n        elyGuard.variable<Style>(options.textStyle, value => this.textStyle(value));\n        elyGuard.variable<Weight>(options.textWeight, value => this.textWeight(value));\n        elyGuard.variable<boolean>(options.textCenter, value => this.textCenter(value));\n    }\n\n    /**\n     * Возвращает свойство: стиль текста\n     * @return {elyObservableProperty<Style>}\n     */\n    public getTextStyleProperty(): elyObservableProperty<Style> {\n        return this.__textStyleProperty;\n    }\n\n    /**\n     * Возвращает стиль текста\n     * @returns {Style}\n     */\n    public textStyle(): Style;\n\n    /**\n     * Устанавливает стиль текста\n     * @param {Style} value - значение\n     * @returns {this}\n     */\n    public textStyle(value: Style): efTextView;\n\n    /**\n     * Возвращает и устанавливает стиль текста\n     * @param {Style} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public textStyle(value?: Style): Style | null | efTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__textStyleProperty);\n    }\n\n    /**\n     * Возвращает свойство: размер текста\n     * @return {elyObservableProperty<Size>}\n     */\n    public getTextSizeProperty(): elyObservableProperty<Size> {\n        return this.__textSizeProperty;\n    }\n\n    /**\n     * Возвращает размер текста\n     * @returns {Size}\n     */\n    public textSize(): Size;\n\n    /**\n     * Устанавливает размер текста\n     * @param {Size} value - значение\n     * @returns {this}\n     */\n    public textSize(value: Size): efTextView;\n\n    /**\n     * Возвращает и устанавливает размер текста\n     * @param {Size} [value] - значение\n     * @returns {Size|this|null}\n     */\n    public textSize(value?: Size): Size | null | efTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__textSizeProperty);\n    }\n\n    /**\n     * Возвращает свойство: текст элемента\n     * @return {elyObservableProperty<string>}\n     */\n    public getTextProperty(): elyObservableProperty<string> {\n        return this.__textProperty;\n    }\n\n    /**\n     * Возвращает текст элемента\n     * @returns {string}\n     */\n    public text(): string;\n\n    /**\n     * Устанавливает текст элемента\n     * @param {string} value - значение\n     * @returns {this}\n     */\n    public text(value: string): efTextView;\n\n    /**\n     * Возвращает и устанавливает текст элемента\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public text(value?: string): string | null | efTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__textProperty);\n    }\n\n    /**\n     * Возвращает флаг выравнивания текста по центру\n     * @return {boolean}\n     */\n    public textCenter(): boolean;\n\n    /**\n     * Устанавливает флаг выравнивания текста по центру\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public textCenter(value: boolean): efTextView;\n\n    /**\n     * Возвращает и устанавливает флаг выравнивания текста по центру\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public textCenter(value?: boolean): boolean | null | efTextView {\n        if (value === undefined) return this.hasClass(\"--centered\");\n        if (value) this.addClass(\"--centered\");\n        else this.removeClass(\"--centered\");\n        return this;\n    }\n\n    /**\n     * Возвращает свойство: толщина текста\n     * @return {elyObservableProperty<Weight>}\n     */\n    public getTextWeightProperty(): elyObservableProperty<Weight> {\n        return this.__textWeightProperty;\n    }\n\n    /**\n     * Возвращает толщина текста\n     * @returns {Weight}\n     */\n    public textWeight(): Weight;\n\n    /**\n     * Устанавливает толщина текста\n     * @param {Weight} value - значение\n     * @returns {this}\n     */\n    public textWeight(value: Weight): efTextView;\n\n    /**\n     * Возвращает и устанавливает толщина текста\n     * @param {Weight} [value] - значение\n     * @returns {Weight|this|null}\n     */\n    public textWeight(value?: Weight): Weight | null | efTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__textWeightProperty);\n    }\n\n    /**\n     * Выравнивает текст по середине.\n     * Можно считать алиасом выражения `efTextView.textCenter(true)`.\n     * @return {this}\n     */\n    public centered(): efTextView {\n        this.textCenter(true);\n        return this;\n    }\n\n    /**\n     * Сериализует объект\n     * @return {string}\n     */\n    public serialize(): string {\n        return JSON.stringify({\n            text: this.text(),\n            textCenter: this.textCenter(),\n            textSize: this.textSize().value,\n            textStyle: this.textStyle().value,\n            textWeight: this.textWeight().value,\n        });\n    }\n\n}\n\n/**\n * @typedef {Object} efTextViewOptions\n * @property {string} [text = \"\"]\n * @property {boolean} [textCenter = false]\n * @property {Style|string} [textStyle]\n * @property {Size} [textSize]\n * @property {Weight} [textWeight]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyEnum.ts                                                           +\n + Файл изменен: 06.01.2019 04:55:09                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Перечисление\n * @class elyEnum\n * @template T\n * @abstract\n */\nexport default abstract class elyEnum<T> {\n\n    /**\n     * Значение\n     * @type {T}\n     */\n    public value: T;\n\n    /**\n     * Конструктор\n     * @param {T} value\n     */\n    protected constructor(value: T) {\n        this.value = value;\n    }\n\n    /**\n     * Преобразование в строку\n     * @return {string}\n     */\n    public toString(): string {\n        return String(this.value);\n    }\n\n    /**\n     * Возвращает true, если объекты одинаковые\n     * @param {elyEnum} obj\n     * @return {boolean}\n     */\n    public equals(obj: elyEnum<T>): boolean {\n        return this.value === obj.value;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: Style.ts                                                             +\n + Файл изменен: 08.02.2019 01:22:49                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Стили ely.flat.application\n * @class Style\n * @augments {elyEnum}\n */\nexport default class Style extends elyEnum<string> {\n\n    /**\n     * Стандартный стиль\n     *\n     * Элементарный сброс стиля\n     */\n    public static readonly default = new Style(\"default\");\n\n    /**\n     * Главный стиль\n     *\n     * Основной стиль подходит для важных элементов.\n     */\n    public static readonly primary = new Style(\"primary\");\n\n    /**\n     * Информативный стиль\n     *\n     * Основной стиль подходит для отображения информации, которая должна выделяться.\n     */\n    public static readonly info = new Style(\"info\");\n\n    /**\n     * Стиль предупреждения\n     *\n     * Стиль, особо концентрирующий внимание пользователя.\n     */\n    public static readonly warning = new Style(\"warning\");\n\n    /**\n     * Успешный стиль\n     *\n     * Стиль, говорящий об успешном завершении действия.\n     */\n    public static readonly success = new Style(\"success\");\n\n    /**\n     * Опасный стиль\n     *\n     * Стиль, ярко бросающийся в глаза. Подойдет для отметки ошибок.\n     */\n    public static readonly danger = new Style(\"danger\");\n\n    /**\n     * Список\n     */\n    public static rawList() {\n        return {\n            danger: Style.danger.value,\n            default: Style.default.value,\n            info: Style.info.value,\n            primary: Style.primary.value,\n            success: Style.success.value,\n            warning: Style.warning.value,\n        };\n    }\n\n    /**\n     * Свой стиль\n     * @param name\n     */\n    public static custom(name: string): Style {\n        return new Style(name);\n    }\n\n    /**\n     * Возвраща стиль по имени\n     * @param name\n     */\n    public static byName(name: string): Style {\n        return new Style(name);\n    }\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     */\n    protected constructor(val: string) {\n        super(val);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efPreloaderView.ts                                                   +\n + Файл изменен: 15.02.2019 01:13:20                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Style from \"@enums/Style\";\n\n/**\n * Опции {@link efPreloaderView}\n */\nexport interface efPreloaderViewOptions extends elyViewOptions {\n    fixedPosition?: boolean;\n    title?: string;\n    preloaderStyle?: Style;\n}\n\n/**\n * Элемент отображения\n * @class efPreloaderView\n * @augments {elyView}\n */\nexport class efPreloaderView extends elyView {\n\n    /**\n     * Панель объединения\n     * @protected\n     * @ignore\n     */\n    protected readonly __wrapperView: elyControl = new elyControl({class: \"--wrapper\"});\n\n    /**\n     * Иконка\n     * @protected\n     * @ignore\n     */\n    protected __iconView: efIconView = new efIconView({iconName: \"refresh\", spinning: true});\n\n    /**\n     * Элемент отображения текста\n     * @protected\n     * @ignore\n     */\n    protected __titleTextView: efTextView = new efTextView({class: \"--title\"});\n\n    /**\n     * Свойство: стиль загрузчика\n     * @ignore\n     * @protected\n     */\n    protected readonly __preloaderStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>(Style.primary).change((value, oldVal) => {\n        if (oldVal) this.removeClass(`--${oldVal.value}`);\n        this.addClass(`--${value.value}`);\n    });\n\n    /**\n     * Конструктор\n     * @param {efPreloaderViewOptions} options - опции\n     */\n    public constructor(options: efPreloaderViewOptions = {}) {\n        super(options);\n        if (!options.selector) {\n            this.addClass(\"ef-loading\");\n            this.getDocument().append(this.getWrapperView().getDocument());\n            this.getWrapperView()\n                .addSubView(this.getIconView())\n                .addSubView(this.getTitleTextView());\n            this.title(options.title || \"Пожалуйста, подождите...\");\n\n            elyGuard.variable<boolean>(options.fixedPosition, value => this.fixedPosition(value));\n            elyGuard.variable<Style>(options.preloaderStyle, value => this.preloaderStyle(value));\n        }\n    }\n\n    /**\n     * Возвращает элемент объекдинения\n     * @return {elyControl}\n     */\n    public getWrapperView(): elyControl {\n        return this.__wrapperView;\n    }\n\n    /**\n     * Возвращает элемент отображения иконки\n     * @return {efIconView}\n     */\n    public getIconView(): efIconView {\n        return this.__iconView;\n    }\n\n    /**\n     * Возвращает элемент отображения заголовка\n     * @return {efTextView}\n     */\n    public getTitleTextView(): efTextView {\n        return this.__titleTextView;\n    }\n\n    /**\n     * Возвращает текст загрузки\n     * @return {string}\n     */\n    public title(): string;\n\n    /**\n     * Устанавливает текст загрузки\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public title(value: string): efPreloaderView;\n\n    /**\n     * Возвращает и устанавливает текст загрузки\n     * @param {string} [value] - значение\n     * @returns {string|this}\n     */\n    public title(value?: string): string | efPreloaderView {\n        if (value === undefined) return this.getTitleTextView().text();\n        this.getTitleTextView().text(value);\n        return this;\n    }\n\n    /**\n     * Возвращает стиль загрузчика\n     * @returns {Style}\n     */\n    public preloaderStyle(): Style;\n\n    /**\n     * Устанавливает стиль загрузчика\n     * @param {Style} value - значение\n     * @returns {this}\n     */\n    public preloaderStyle(value: Style): efPreloaderView;\n\n    /**\n     * Возвращает и устанавливает стиль загрузчика\n     * @param {Style} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public preloaderStyle(value?: Style): Style | null | efPreloaderView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__preloaderStyleProperty);\n    }\n\n    /**\n     * Возвращает флаг фиксированной позиции\n     * @return {boolean}\n     */\n    public fixedPosition(): boolean;\n\n    /**\n     * Устанавливает флаг фиксированной позиции\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public fixedPosition(value: boolean): efPreloaderView;\n\n    /**\n     * Возвращает и устанавливает флаг фиксированной позиции\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public fixedPosition(value?: boolean): boolean | null | efPreloaderView {\n        if (value === undefined) return this.hasClass(\"--fixed\");\n        if (value) this.addClass(\"--fixed\");\n        else this.removeClass(\"--fixed\");\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efPreloaderViewOptions\n * @property {boolean} [fixedPosition = false]\n * @property {string} [title = false]\n * @property {Style} [preloaderStyle]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppPreloaderView.ts                                                +\n + Файл изменен: 15.02.2019 01:31:19                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport {efPreloaderView} from \"@controls/view/efPreloaderView\";\n\n/**\n * Элемент отображения - экран загрузки приложения\n * @class efAppPreloaderView\n * @augments {efPreloaderView}\n */\nexport class efAppPreloaderView extends efPreloaderView {\n\n    /**\n     * Панель объединения\n     * @protected\n     * @ignore\n     */\n    protected readonly __wrapperView: elyControl = new elyControl({\n        element: document.getElementById(\"preloader\")!\n            .getElementsByClassName(\"--wrapper\")[0]!,\n    });\n\n    /**\n     * Иконка\n     * @protected\n     * @ignore\n     */\n    protected __iconView: efIconView = new efIconView({\n        element: document.getElementById(\"preloader\")!\n            .getElementsByClassName(\"--wrapper\")[0]!\n            .getElementsByClassName(\"ef-icon\")[0]!,\n    });\n\n    /**\n     * Элемент отображения текста\n     * @protected\n     * @ignore\n     */\n    protected __titleTextView: efTextView = new efTextView({\n        element: document.getElementById(\"preloader\")!\n            .getElementsByClassName(\"--wrapper\")[0]!\n            .getElementsByClassName(\"--title\")[0]!,\n    });\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super({selector: \"#preloader\"});\n        this.title(\"Пожалуйста, подождите...\");\n        this.fixedPosition(true);\n        this.getIconView().iconName(\"refresh\");\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: fieldType.tss                                                      +\n + Файл изменен: 05.12.2018 23:47:11                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Типы ввода данных\n * @class TextFieldType\n * @augments {elyEnum<string>}\n */\nexport default class TextFieldType extends elyEnum<string> {\n\n    /**\n     * Текст\n     */\n    public static readonly text = new TextFieldType(\"text\");\n\n    /**\n     * Пароль\n     */\n    public static readonly password = new TextFieldType(\"password\");\n\n    /**\n     * Число\n     */\n    public static readonly number = new TextFieldType(\"number\");\n\n    /**\n     * Почта\n     */\n    public static readonly mail = new TextFieldType(\"mail\");\n\n    /**\n     * Тип по имени\n     * @param value\n     */\n    public static byName(value: string | number): TextFieldType {\n        if (typeof value === \"number\") value = value.toString() + \"px\";\n        return new TextFieldType(value);\n    }\n\n    /**\n     * Список\n     */\n    public static rawList() {\n        return {\n            mail: TextFieldType.mail.value,\n            number: TextFieldType.number.value,\n            password: TextFieldType.password.value,\n            text: TextFieldType.text.value,\n        };\n    }\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     */\n    protected constructor(val: string) {\n        super(val);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyCookie.ts                                                         +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Печеньки\n */\nexport default class elyCookie {\n\n    /**\n     * Возвращает данные cookie\n     * @param name\n     */\n    public static get(name: string): string | null {\n        const matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + \"=([^;]*)\",\n        ));\n        const val = matches ? decodeURIComponent(matches[1]) : null;\n        if (val && (val === \"undefined\" || val === \"null\")) return null;\n        return val;\n    }\n\n    /**\n     * Устанавливает cookie\n     * @param name\n     * @param value\n     * @param options\n     */\n    public static set(name: string, value: any, options?: { expires?: string | number | Date } & any) {\n        options = options || {};\n        let expires = options.expires;\n        if (typeof expires === \"number\" && expires) {\n            const d = new Date();\n            d.setTime(d.getTime() + expires * 1000);\n            expires = options.expires = d;\n        }\n        if (expires && (expires as Date).toUTCString) {\n            options.expires = (expires as Date).toUTCString();\n        }\n\n        value = encodeURIComponent(value);\n\n        let updatedCookie = name + \"=\" + value;\n\n        for (const propName in options) {\n            if (!options.hasOwnProperty(propName)) continue;\n            updatedCookie += \"; \" + propName;\n            const propValue = options[propName];\n            if (propValue !== true) {\n                updatedCookie += \"=\" + propValue;\n            }\n        }\n        document.cookie = updatedCookie;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyTimer.ts                                                          +\n + Файл изменен: 08.01.2019 01:11:46                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservable from \"@core/observable/elyObservable\";\n\n/**\n * Таймер\n * @class {elyTimer}\n */\nexport default class elyTimer extends elyObservable {\n\n    /**\n     * Время таймера\n     * @type {number}\n     * @protected\n     */\n    protected __duration: number;\n\n    /**\n     * Циклический таймер\n     * @type {boolean}\n     * @protected\n     */\n    protected readonly __loop: boolean = false;\n\n    /**\n     * Поток\n     * @protected\n     */\n    protected __thread: any;\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    public constructor(props: { duration: number, loop?: boolean }) {\n        super();\n        /**\n         * @protected\n         */\n        this.__duration = props.duration;\n        /**\n         * @protected\n         */\n        this.__loop = props.loop || false;\n    }\n\n    /**\n     * Добавляет наблюдатель: окончание таймера\n     *\n     * Если таймер циклический, данный метод будет вызван каждый цикл\n     *\n     * Имя обсервера: addEndObserver\n     *\n     * @param o - наблюдатель\n     */\n    public addEndObserver(o: () => void): elyTimer {\n        this.addObserver(\"endTimer\", o);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: запускт таймера\n     *\n     * Имя обсервера: startTimer\n     *\n     * @param o - наблюдатель\n     */\n    public addStartObserver(o: () => void): elyTimer {\n        this.addObserver(\"startTimer\", o);\n        return this;\n    }\n\n    /**\n     * Запускает таймер\n     */\n    public start(): void {\n        if (this.__thread !== null) return;\n        this.notificate(\"startTimer\");\n        if (this.__loop) this.__thread = setInterval(() => {\n            this.stop(true);\n        }, this.__duration);\n        else {\n            this.__thread = setTimeout(() => {\n                this.stop(true);\n            }, this.__duration);\n        }\n    }\n\n    /**\n     * Перезапускает таймер\n     */\n    public restart(): void {\n        this.stop(false);\n        this.start();\n    }\n\n    /**\n     * Останавливает таймер\n     * @param {boolean} [notificate = true] - если установлено значение true,\n     * после выполнения метода, будет вызвано событие `endTimer` {@link elyTimer.addEndObserver}\n     */\n    public stop(notificate: boolean = true): void {\n        if (this.__loop) clearInterval(this.__thread);\n        else clearTimeout(this.__thread);\n        if (notificate) this.notificate(\"endTimer\");\n        this.__thread = null;\n    }\n}","/*\n *\n *  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n *   ,--. o                   |    o\n *   |   |.,---.,---.,---.    |    .,---.,---.\n *   |   |||---'|   ||   |    |    ||   ||   |\n *   `--' ``---'`---|`---'    `---'``   '`---|\n *              `---'                    `---'\n *\n * Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)\n * Mail: <diegoling33@gmail.com>\n *\n * Это программное обеспечение имеет лицензию, как это сказано в файле\n * COPYING, который Вы должны были получить в рамках распространения ПО.\n *\n * Использование, изменение, копирование, распространение, обмен/продажа\n * могут выполняться исключительно в согласии с условиями файла COPYING.\n *\n * Файл: elyObservableBoolean.ts\n * Файл создан: 28.11.2018 01:03:35\n * ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *\n */\n\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Прослушиваемый булевый тип\n */\nexport default class elyObservableBoolean extends elyObservableProperty<boolean> {\n\n    /**\n     * Конструктор\n     * @param defaultValue\n     */\n    public constructor(defaultValue: boolean = false) {\n        super(defaultValue);\n    }\n\n    /**\n     * Переключает значение\n     */\n    public toggle(): elyObservableBoolean {\n        this.set(!this.value);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyFieldView.ts                                                      +\n + Файл изменен: 08.01.2019 02:43:40                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyView from \"@core/controls/elyView\";\nimport elyCookie from \"@core/elyCookie\";\nimport elyGuard from \"@core/elyGuard\";\nimport {isSerializable} from \"@core/elySerializable\";\nimport elyTimer from \"@core/elyTimer\";\nimport elyObservableBoolean from \"@core/observable/properties/elyObservableBoolean\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport {efEditableProtocol} from \"@protocols/efEditableProtocol\";\nimport {efErrorDisplayProtocol} from \"@protocols/efErrorDisplayProtocol\";\nimport {efValidatableProtocol} from \"@protocols/efValidatableProtocol\";\nimport {efValueProtocol} from \"@protocols/efValueProtocol\";\n\n/**\n * Опции {@link elyFieldView}\n * @class elyFieldViewOptions\n * @template T\n */\nexport interface elyFieldViewOptions<T> {\n    /**\n     * Значение\n     */\n    value?: T;\n\n    /**\n     * Плейсхолдер для ввода\n     */\n    placeholder?: string;\n\n    /**\n     * Подсказка\n     */\n    hint?: string;\n}\n\n/**\n * Поле ввоода\n * @class elyFieldView\n * @template T\n * @augments {efEditableProtocol}\n * @augments {efValueProtocol<T>}\n * @augments {efErrorDisplayProtocol}\n * @augments {efValidatableProtocol}\n */\nexport abstract class elyFieldView<T> extends elyView implements efEditableProtocol, efValueProtocol<T>,\n    efValidatableProtocol, efErrorDisplayProtocol {\n\n    /**\n     * Свойство: значение поля ввода\n     * @type {elyObservableProperty<T>}\n     */\n    public readonly valueProperty: elyObservableProperty<T> = new elyObservableProperty<T>();\n\n    /**\n     * Свойство: флаг возможности редактирования\n     * @type {elyObservableBoolean}\n     */\n    public readonly editableProperty: elyObservableBoolean\n        = new elyObservableBoolean(true);\n\n    /**\n     * Элемент управления\n     */\n    public readonly accessoryView: elyView;\n\n    /**\n     * Свойство: делегает валидации\n     * @ignore\n     * @protected\n     */\n    protected __isValidDelegate?: (data: T | null) => boolean;\n\n    /**\n     * Таймер\n     * @protected\n     * @type {elyTimer}\n     */\n    protected __errorDisplayTimer: elyTimer = new elyTimer({duration: 1500});\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    protected constructor(props: elyFieldViewOptions<T> & { accessory: elyView }) {\n        super(props);\n        this.addClass(\"ef-field\");\n        this.__errorDisplayTimer.addEndObserver(() => {\n            this.removeClass(\"error\");\n        });\n        this.__errorDisplayTimer.addStartObserver(() => {\n            this.addClass(\"error\");\n        });\n        this.accessoryView = props.accessory;\n        this.getDocument().append(this.accessoryView.getDocument());\n        if (props.hint) this.hint(props.hint);\n    }\n\n    /**\n     * Возвращает значение поля ввода\n     * @returns {T}\n     */\n    public value(): T | null;\n\n    /**\n     * Устанавливает значение поля ввода\n     * @param {T} value - значение\n     * @returns {this}\n     */\n    public value(value: T | null): elyFieldView<T>;\n\n    /**\n     * Возвращает и устанавливает значение поля ввода\n     * @param {T|null} [value] - значение\n     * @returns {T|this|null}\n     */\n    public value(value?: T | null): T | null | elyFieldView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.valueProperty);\n    }\n\n    /**\n     * Очищает значение\n     * @return {this}\n     */\n    public clearValue(): efValueProtocol<T> {\n        this.value(null);\n        return this;\n    }\n\n    /**\n     * Возвращает флаг возможности редактирования\n     * @returns {boolean}\n     */\n    public editable(): boolean;\n\n    /**\n     * Устанавливает флаг возможности редактирования\n     * @param {boolean} value - значение\n     * @returns {this}\n     */\n    public editable(value: boolean): elyFieldView<T>;\n\n    /**\n     * Возвращает и устанавливает флаг возможности редактирования\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this}\n     */\n    public editable(value?: boolean): boolean | elyFieldView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.editableProperty);\n    }\n\n    /**\n     * Возвращает true, если данные валидны\n     * @return {boolean}\n     */\n    public isValid(): boolean {\n        if (this.__isValidDelegate) return this.__isValidDelegate(this.value());\n        return true;\n    }\n\n    /**\n     * Возвращает true, если данные пусты\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return this.valueProperty.isNull();\n    }\n\n    /**\n     * Помечает объект как неисправный\n     * @param {boolean} flag\n     * @return {this}\n     */\n    public error(flag: boolean): efErrorDisplayProtocol {\n        if (flag) this.__errorDisplayTimer.restart();\n        else this.__errorDisplayTimer.stop();\n        return this;\n    }\n\n    /**\n     * Возвращает и устанавливает делегает валидации\n     * @param {(data: T | null) => boolean} [value] - значение\n     * @returns {this}\n     */\n    public setIsValidDelegate(value: (data: T | null) => boolean): elyFieldView<T> {\n        this.__isValidDelegate = value;\n        return this;\n    }\n\n    /**\n     * Возвращает плейслхолдер для ввода\n     * @return {string}\n     */\n    public placeholder(): string;\n\n    /**\n     * Устанавливает плейслхолдер для ввода\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public placeholder(value: string): elyFieldView<T>;\n\n    /**\n     * Возвращает и устанавливает плейслхолдер для ввода\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public placeholder(value?: string): string | null | elyFieldView<T> {\n        throw Error(`Method placeholder is not implemented in class ${this}!`);\n    }\n\n    /**\n     * Добавляет слушатель изменения значения поля\n     *\n     * @param {function(value: T, oldVal: T | null)} o\n     * @param {boolean} clearanceSafe - защита от сброса\n     * @return {this}\n     */\n    public change(o: (value: T, oldVal?: T) => void, clearanceSafe: boolean = false): elyFieldView<T> {\n        if (!clearanceSafe) this.valueProperty.change(o);\n        else this.valueProperty.change((nv, ov) => {\n            o(nv, ov);\n        });\n        return this;\n    }\n\n    /**\n     * Утанавливает подсказку\n     * @param {String} hint - подсказка\n     * @return {elyView}\n     */\n    public hint(hint?: string): elyFieldView<T> | string {\n        if (hint === undefined) return \"\";\n        const hintView = new elyControl({class: \"ef-hint\"});\n        hintView.getDocument().innerHTML = hint;\n        this.elyViewWillDraw(() => {\n            this.getDocument().after(hintView.getDocument());\n        });\n        return this;\n    }\n\n    /**\n     * Experimental\n     *\n     * @param name\n     */\n    public tempData(name: string): void {\n        this.change(value => {\n            let v: any = value;\n            if (isSerializable(value))\n                v = value.serialize();\n            elyCookie.set(`tfd-${name}`, `${value.constructor.name},${v}`, {expires: 5 * 60 * 60});\n        });\n        this.elyViewWillDraw(() => {\n            let val = elyCookie.get(`tfd-${name}`) as any;\n            if (elyGuard.isNone(val)) return;\n            const arr = val.split(\",\");\n            const cns = arr.shift();\n            if (cns) {\n                if (cns === \"String\") {\n                    val = arr.join(\",\");\n                } else if (cns === \"Number\") {\n                    val = parseInt(arr.join(\",\"), 10);\n                } else {\n                    if (window.elyflatobjects.hasOwnProperty(cns) && window.elyflatobjects[cns].isSerializable)\n                        val = window.elyflatobjects[cns].deserialize(arr.join(\",\"));\n                    else\n                        val = arr.join(\",\");\n                }\n            }\n            if (val !== undefined && val !== null) this.value(val);\n        });\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyTextField.ts                                                      +\n + Файл изменен: 08.01.2019 02:54:20                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport TextFieldType from \"@enums/textFieldType\";\nimport {elyFieldView, elyFieldViewOptions} from \"@fields/elyFieldView\";\n\n/**\n * Опции\n * @class elyTextFieldOptions\n */\nexport interface elyTextFieldOptions extends elyFieldViewOptions<string> {\n    /**\n     * @type {TextFieldType}\n     */\n    fieldType?: TextFieldType;\n\n    /**\n     * @type {boolean}\n     */\n    encrypted?: boolean;\n}\n\n/**\n * Поле: Ввод текста\n * @version 1.0\n * @class elyTextField\n * @augments {elyField<string>}\n */\n@designable(\"value\", elyDesignableFieldState.GETSET, \"string\")\n@designable(\"fieldType\", elyDesignableFieldState.GET, \"string\", TextFieldType.rawList())\nexport class elyTextField extends elyFieldView<string> {\n\n    /**\n     * Флаг шифрования данных\n     *\n     * Данный флаг необходим для elyFormBuilder, при получении\n     * и отрпавки значений, поле шифруется ключем.\n     *\n     * @type {boolean}\n     */\n    public encrypted: boolean = false;\n\n    /**\n     * Свойство: тип поля ввода\n     * @ignore\n     * @protected\n     */\n    protected readonly __fieldType: TextFieldType;\n\n    /**\n     * Конструктор\n     * @param {elyTextFieldOptions} props\n     */\n    public constructor(props: elyTextFieldOptions = {fieldType: TextFieldType.text, encrypted: false}) {\n        super({accessory: new elyControl({tag: \"input\", class: \"ef-input\"})});\n        this.__fieldType = props.fieldType || TextFieldType.text;\n\n        const accessory = this.accessoryView.getDocument() as HTMLInputElement;\n        accessory.onchange = () => {\n            this.value(accessory.value);\n        };\n        this.valueProperty.change((newValue) => accessory.value = newValue);\n\n        if (props.placeholder) accessory.placeholder = props.placeholder;\n        if (props.value) this.value(props.value);\n        accessory.type = this.fieldType().value;\n    }\n\n    /**\n     * Возвращает тип поля ввода\n     * @return {TextFieldType}\n     */\n    public fieldType(): TextFieldType {\n        return this.__fieldType;\n    }\n\n    /**\n     * Возвращает true, если поле пустое\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return super.isEmpty() || this.value() === \"\";\n    }\n\n    /**\n     * Добавляет слушатель изменения поля\n     * @param {{function(value: string)}} observer\n     * @return {this}\n     */\n    public addInputObserver(observer: (value: string) => void): elyTextField {\n        this.addObserver(\"input\", observer);\n        return this;\n    }\n\n    /**\n     * Возвращает true, если данные введены правильно\n     * @return {boolean}\n     */\n    public isValid(): boolean {\n        let result = false;\n        if (this.fieldType().value === TextFieldType.mail.value) {\n            result = /^([^ {}\\]\\[,]+)@(.+)\\.(.+)/.test(this.valueProperty.get(\"\"));\n        } else {\n            result = true;\n        }\n        return result && super.isValid();\n    }\n\n    /**\n     * Возвращает плейслхолдер для ввода\n     * @return {string}\n     */\n    public placeholder(): string;\n\n    /**\n     * Устанавливает плейслхолдер для ввода\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public placeholder(value: string): elyTextField;\n\n    /**\n     * Возвращает и устанавливает плейслхолдер для ввода\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public placeholder(value?: string): string | null | elyTextField {\n        if (value === undefined) return (this.accessoryView.getDocument() as HTMLInputElement).placeholder;\n        (this.accessoryView.getDocument() as HTMLInputElement).placeholder = value;\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elyTextViewEditable.ts                                               +\n + Файл изменен: 27.11.2018 23:47:26                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport {elyTextField} from \"@fields/elyTextField\";\n\n/**\n * Делегат вызывается для проверки возможности сохранить значение\n */\ntype elyTextViewEditableShouldSaveValueDelegate = (value: string, result: (res: boolean) => void) => void;\n\n/**\n * Состояния объекта\n * @enum elyTextViewEditableState\n */\nenum elyTextViewEditableState {\n    /**\n     * Отображение значения\n     */\n    PRESENT,\n\n    /**\n     * Редактирование\n     */\n    EDIT,\n}\n\n/**\n * Элемент отображения: Мутация elyTextView в редактируемый по клику элемент\n * @class elyTextViewEditable\n * @augments elyView\n */\nexport default class elyTextViewEditable extends elyView {\n\n    /**\n     * Свойство: флаг режима редактирования\n     * @ignore\n     */\n    public readonly editmodeProperty: elyObservableProperty<boolean>\n        = new elyObservableProperty<boolean>(false);\n\n    /**\n     * Свойство: флаг - разрешение редактирования\n     * @ignore\n     */\n    public readonly editableProperty: elyObservableProperty<boolean>\n        = new elyObservableProperty<boolean>(true);\n\n    /**\n     * Свойство: значение\n     * @ignore\n     */\n    public readonly valueProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>(\"\");\n\n    /**\n     * Элемент отображения текста\n     */\n    protected readonly textView: elyTextView;\n\n    /**\n     * Поле редактирования текста\n     */\n    protected readonly textEditField: elyTextField = new elyTextField(/*{actionIcon: \"check\"}*/);\n\n    /**\n     * Делегат: проверка возможности сохранить значение\n     */\n    protected shouldSaveValueDelegate: elyTextViewEditableShouldSaveValueDelegate = ((val, res) => {\n        res(true);\n    });\n\n    /**\n     * Флаг того, что еще идет проверка\n     * @ignore\n     */\n    private __isChecking: boolean = false;\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    constructor(props: elyViewOptions & { textView?: elyTextView, editmode?: boolean }) {\n        super(props);\n        this.textView = props.textView || new elyTextView({text: \"\"});\n        this.textView.addClass(\"clickable\");\n        this.textEditField.hidden(true);\n\n        // Изменение значения\n        this.valueProperty.change((value, oldVal) => {\n            this.textView.text(value);\n            this.textEditField.value(value).placeholder(value);\n            this.notificate(\"value\", [value, oldVal]);\n        });\n\n        // Режим редактирования\n        this.editmodeProperty.change(editMode => {\n            if (!this.editable() || this.__isChecking) return;\n            this.__isChecking = true;\n\n            // Изменяет состояния иконки\n            // this.textEditField.actionIconView.iconName(\"refresh\");\n            // this.textEditField.actionIconView.iconSpinning(true);\n\n            /**\n             * Выполняет попытку сохранить результаты,\n             * проходя все необходимые проверки и делигаты.\n             */\n            const tryToSaveResults = (callback: (res: boolean) => void) => {\n                if (this.textView.text() === this.textEditField.value()) {\n                    // this.value(this.textEditField.value());\n                    callback(true);\n                    this.setEditorViewState(elyTextViewEditableState.PRESENT);\n                } else {\n                    /*\n                    this.shouldSaveValueDelegate(this.textEditField.value(), res => {\n                        if (res) {\n                            this.value(this.textEditField.value());\n                            callback(res);\n                            this.setEditorViewState(elyTextViewEditableState.PRESENT);\n                        } else {\n                            this.value(this.textView.text());\n                            this.textEditField.error(true);\n                            callback(false);\n                            this.setEditorViewState(elyTextViewEditableState.EDIT);\n                        }\n                    });*/\n                }\n            };\n\n            /**\n             * Выполняет попытку войти в режим редактирования\n             * @param callback\n             */\n            const tryToEnterEditMode = (callback: (res: boolean) => void) => {\n                this.setEditorViewState(elyTextViewEditableState.EDIT);\n                callback(true);\n            };\n\n            if (editMode) tryToEnterEditMode(() => this.__isChecking = false);\n            else tryToSaveResults(() => this.__isChecking = false);\n            if (props.editmode) this.editemode(props.editmode);\n        });\n\n        this.textEditField.addObserver(\"actionClick\", () => this.editemode(false));\n        this.textView.addObserver(\"click\", () => this.editemode(true));\n        this.value(this.textView.text());\n\n        this.getDocument().append(this.textView.getDocument());\n        this.getDocument().append(this.textEditField.getDocument());\n    }\n\n    /**\n     * Устанавливает делигат проверки возможности сохранения значения\n     * @param delegate\n     */\n    public textViewEditableShouldSaveValue(delegate: elyTextViewEditableShouldSaveValueDelegate): elyTextViewEditable {\n        this.shouldSaveValueDelegate = delegate;\n        return this;\n    }\n\n    /**\n     * Возвращает значение\n     */\n    public value(): string;\n\n    /**\n     * Устанавливает значение\n     */\n    public value(value: string): elyTextViewEditable;\n\n    /**\n     * Возвращает и устанавливает значение\n     */\n    public value(value?: string): string | null | elyTextViewEditable {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.valueProperty);\n    }\n\n    /**\n     * Добавляет наблюдатель: изменение значения\n     *\n     * Имя обсервера: value\n     *\n     * @param o - наблюдатель\n     */\n    public addChangeValueObserver(o: (value: string, oldValue?: string) => void): elyTextViewEditable {\n        this.addObserver(\"value\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает флаг - разрешение редактирования\n     */\n    public editable(): boolean;\n\n    /**\n     * Устанавливает флаг - разрешение редактирования\n     */\n    public editable(value: boolean): elyTextViewEditable;\n\n    /**\n     * Возвращает и устанавливает флаг - разрешение редактирования\n     */\n    public editable(value?: boolean): boolean | null | elyTextViewEditable {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.editableProperty);\n    }\n\n    /**\n     * Возвращает флаг редактирования\n     */\n    public editemode(): boolean;\n\n    /**\n     * Устанавливает флаг редактирования\n     */\n    public editemode(value: boolean): elyTextViewEditable;\n\n    /**\n     * Возвращает и устанавливает флаг редактирования\n     */\n    public editemode(value?: boolean): boolean | null | elyTextViewEditable {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.editmodeProperty);\n    }\n\n    /**\n     * Модифицирует элемент отображения в зависимости от состояния\n     * @param state\n     */\n    protected setEditorViewState(state: elyTextViewEditableState): elyTextViewEditable {\n        this.textEditField.hidden(state === elyTextViewEditableState.PRESENT);\n        this.textView.hidden(state === elyTextViewEditableState.EDIT);\n        // this.textEditField.actionIconView.iconName(\"check\");\n        // this.textEditField.actionIconView.iconSpinning(false);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elySize.ts                                                           +\n + Файл изменен: 05.12.2018 23:47:11                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport ISize from \"@controls/interfaces/ISize\";\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Размеры ely.flat\n * @class elySize\n * @augments {elyEnum<string>}\n */\nexport default class elySize extends elyEnum<string> {\n\n    /**\n     * Стандартный размер\n     * @return elySize\n     */\n    public static readonly default = new elySize(\"default\");\n\n    /**\n     * Основной размер, используемый в ely.flat\n     */\n    public static readonly regular = new elySize(\"regular\");\n\n    /**\n     * Размер во весь блок\n     */\n    public static readonly fill = new elySize(\"fill\");\n\n    /**\n     * Маленький размер\n     */\n    public static readonly small = new elySize(\"small\");\n\n    /**\n     * Средний размер\n     */\n    public static readonly middle = new elySize(\"middle\");\n\n    /**\n     * Большой размер\n     */\n    public static readonly large = new elySize(\"large\");\n\n    /**\n     * Очень большой размер\n     */\n    public static readonly extraLarge = new elySize(\"extraLarge\");\n\n    /**\n     * Очень маленький размер\n     */\n    public static readonly extraSmall = new elySize(\"extraSmall\");\n\n    /**\n     * Свой размер\n     * @param value\n     */\n    public static custom(value: string | number): elySize {\n        if (typeof value === \"number\") value = value.toString() + \"px\";\n        return new elySize(value, true);\n    }\n\n    /**\n     * Возвращает размер по его названию\n     * @param name\n     */\n    public static byName(name: string): elySize {\n        return new elySize(name);\n    }\n\n    /**\n     * Список\n     */\n    public static rawList(): ISize {\n        return {\n            default:    elySize.default.value,\n            extraLarge: elySize.extraLarge.value,\n            extraSmall: elySize.extraSmall.value,\n            fill:       elySize.fill.value,\n            large:      elySize.large.value,\n            middle:     elySize.middle.value,\n            regular:    elySize.regular.value,\n            small:      elySize.small.value,\n        };\n    }\n\n    /**\n     * Кастомный размер\n     * @ignore\n     */\n    public custom: boolean;\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     * @param custom\n     */\n    protected constructor(val: string, custom: boolean = false) {\n        super(val);\n        this.custom = custom;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyWeight.ts                                                         +\n + Файл изменен: 05.12.2018 23:47:11                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport IWeight from \"@controls/interfaces/IWeight\";\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Толщина ely.flat\n * @class elyWeight\n * @augments {elyEnum<number>}\n * @deprecated\n */\nexport default class elyWeight extends elyEnum<number> {\n\n    /**\n     * Стандартная толщина\n     */\n    public static readonly default = new elyWeight(300);\n\n    /**\n     * Основная толщина, используемый в ely.flat\n     */\n    public static readonly regular = new elyWeight(300);\n\n    /**\n     * Толщина, используемая общими стандартами\n     */\n    public static readonly normal = new elyWeight(400);\n\n    /**\n     * Толщина выше нормальной\n     */\n    public static readonly bold = new elyWeight(700);\n\n    /**\n     * Предельная толщина\n     */\n    public static readonly fat = new elyWeight(900);\n\n    /**\n     * Толщина меньше стандартной\n     */\n    public static readonly light = new elyWeight(200);\n\n    /**\n     * Предельно низкая толщина\n     */\n    public static readonly thin = new elyWeight(100);\n\n    /**\n     * Свой размер\n     * @param value\n     */\n    public static custom(value: number): elyWeight {\n        return new elyWeight(value);\n    }\n\n    /**\n     * Список\n     */\n    public static rawList(): IWeight {\n        return {\n            bold: elyWeight.bold.value,\n            fat: elyWeight.fat.value,\n            light: elyWeight.light.value,\n            normal: elyWeight.normal.value,\n            regular: elyWeight.regular.value,\n            thin: elyWeight.thin.value,\n        };\n    }\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     */\n    protected constructor(val: number) {\n        super(val);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyTextView.ts                                                       +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyTextViewEditable from \"@controls/text/elyTextViewEditable\";\nimport elyView from \"@core/controls/elyView\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elySize from \"@enums/elySize\";\nimport elyWeight from \"@enums/elyWeight\";\nimport elyTextViewOptions from \"@options/elyTextViewOptions\";\n\n/**\n * Элемент отображения: Текст\n *\n * Объект соответствует стандарту: EPS4\n * @class elyTextView\n */\n@designable(\"text\", elyDesignableFieldState.GETSET, \"text\")\n@designable(\"textCenter\", elyDesignableFieldState.GETSET, \"boolean\")\n@designable(\"textSize\", elyDesignableFieldState.GETSET, \"number|string\", elySize.rawList())\n@designable(\"textWeight\", elyDesignableFieldState.GETSET, \"number|string\", elyWeight.rawList())\n@designable(\"iconName\", elyDesignableFieldState.GETSET)\n@designable(\"setIconPosition\", elyDesignableFieldState.SET, \"string\", {\n    left:  elyTextView.iconLeft,\n    right: elyTextView.iconRight,\n})\nexport default class elyTextView extends elyControl {\n\n    /**\n     * Константа положения иконки: лево\n     */\n    public static readonly iconLeft: string = \"left\";\n\n    /**\n     * Константа положения иконки: право\n     */\n    public static readonly iconRight: string = \"right\";\n\n    /**\n     * Возвращает интерактивный элемент\n     * @param textView\n     */\n    public static editable(textView: elyTextView): elyTextViewEditable {\n        return new elyTextViewEditable({textView});\n    }\n\n    // /**\n    //  * Выполняет попытку мутировать obj в объект elyTextView.\n    //  * Иначе возвращает пустой элемент.\n    //  *\n    //  *\n    //  *     let obj = \"Тест\";\n    //  *     let view = elyTextView.tryMutate(obj);\n    //  *\n    //  *     typeOf view; // elyTextView\n    //  *     view.text(); // \"Тест\"\n    //  *\n    //  *\n    //  *\n    //  * @param obj\n    //  */\n    // public static tryMutate(obj: any): elyTextView {\n    //     try {\n    //         if (obj instanceof elyView) {\n    //             if (obj instanceof elyTextView) return obj;\n    //             return obj.getDocument().innerText.textView();\n    //         } else return String(obj).textView();\n    //     } catch (e) {\n    //         return new elyTextView();\n    //     }\n    // }\n\n    /**\n     * Фильтрует строку\n     * @param str\n     */\n    public static filterString(str: string): string {\n        return str.replace(/\\*([^*]+)\\*/g, \"<b>$1</b>\")\n            .replace(/\\(link:([^)]+)\\){([^}]+)}/g, \"<a href='$1'>$2</a>\")\n            .replace(/\\(action:([^{]+)\\){([^}]+)}/g, \"<a href='#' onclick='ely.oneAction.go(\\\"$1\\\")'>$2</a>\")\n            .replace(/{nl}/g, \"<br>\");\n    }\n\n    /**\n     * Свойство: Текст\n     */\n    public readonly textProperty: elyObservableProperty<string>;\n\n    /**\n     * Свойство: Иконка\n     */\n    public readonly iconNameProperty: elyObservableProperty<string>;\n\n    /**\n     * Отображение текста\n     * @ignore\n     */\n    protected readonly textContentView: elyControl;\n\n    /**\n     * Отображение иконки\n     * @ignore\n     */\n    protected readonly iconView: elyControl;\n\n    /**\n     * Свойство: размер текста\n     * @ignore\n     */\n    protected readonly textSizeProperty: elyObservableProperty<elySize>;\n\n    /**\n     * Свойство: толщина текста\n     * @ignore\n     */\n    protected readonly textWeightProperty: elyObservableProperty<number>;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyTextViewOptions = {}) {\n        super(options);\n        this.addClass(\"ef-text\");\n\n        /**\n         * @protected\n         * @readonly\n         */\n        this.textContentView = new elyControl({tag: \"span\", class: \"content\"});\n\n        /**\n         * @protected\n         * @readonly\n         */\n        this.iconView        = new elyControl({tag: \"span\"});\n\n        this.addSubView(this.iconView);\n        this.addSubView(this.textContentView);\n        this.iconView.hidden(true);\n\n        /**\n         * Свойство текста\n         * @readonly\n         * @type {elyObservableProperty}\n         */\n        this.textProperty = new elyObservableProperty<string>(\"\").change((value) =>\n            this.textContentView.getDocument().innerHTML = elyTextView.filterString(value));\n\n        /**\n         * @protected\n         * @readonly\n         */\n        this.textSizeProperty = new elyObservableProperty<elySize>().change((newValue, oldValue) => {\n            if (oldValue && !oldValue.custom) this.removeClass(`ts-${oldValue.value}`);\n            if (oldValue && oldValue.custom) this.css({\"font-size\": null});\n            if (newValue.custom) {\n                this.css({\"font-size\": newValue.value});\n            } else {\n                this.addClass(`ts-${newValue.value}`);\n            }\n        });\n\n        /**\n         * @protected\n         */\n        this.textWeightProperty = new elyObservableProperty<number>(elyWeight.default.value)\n            .change(value => {\n                return this.css({\"font-weight\": value});\n            });\n\n        /**\n         * Иконка\n         * @readonly\n         * @type {elyObservableProperty}\n         */\n        this.iconNameProperty = new elyObservableProperty<string>(\"\")\n            .change((value) => {\n                if (value) {\n                    this.iconView.attribute(\"class\", `fa fa-${value}`);\n                    this.iconView.hidden(false);\n                } else this.iconView.hidden(true);\n            });\n\n        if (options.text) this.text(options.text);\n        if (options.iconName) this.iconName(options.iconName);\n        if (options.textSize) this.textSize(options.textSize);\n        if (options.textWeight) this.textWeight(options.textWeight);\n        if (options.textCenter) this.textCenter(options.textCenter);\n    }\n\n    /**\n     * Возвращает true, если текст выравнен по центру\n     */\n    public textCenter(): boolean;\n\n    /**\n     * Устанавливает выравнивание текста по центру\n     * @param bool\n     */\n    public textCenter(bool: boolean): elyTextView;\n\n    /**\n     * Устанавливает выравнивание текста по середине\n     * @param {boolean} [bool] - значение\n     * @return {boolean|elyTextView}\n     */\n    public textCenter(bool?: boolean): boolean | elyTextView {\n        if (bool === undefined) return this.getStyle().textAlign === \"center\";\n        this.getStyle().textAlign = bool === true ? \"center\" : null;\n        return this;\n    }\n\n    /**\n     * Возвращает размер текста\n     */\n    public textSize(): elySize;\n\n    /**\n     * Устанавливает размер текста\n     */\n    public textSize(value: elySize | string | number): elyTextView;\n\n    /**\n     * Возвращает и устанавливает размер текста\n     * @param {elySize|string|number} [value]\n     * @return {elyTextView|elySize}\n     */\n    public textSize(value?: elySize | string | number): elySize | null | elyTextView {\n        if (value !== undefined) {\n            if (typeof value === \"string\") {\n                if (/^([A-z]+)$/.test(value)) value = elySize.byName(value);\n                else {\n                    value = elySize.custom(value);\n                }\n            } else if (typeof value === \"number\") value = elySize.custom(value + \"px\");\n        }\n        return elyObservableProperty.simplePropertyAccess(this, value, this.textSizeProperty);\n    }\n\n    /**\n     * Устанавливает толщину текста\n     * @param {elyWeight|number} weight\n     * @return {elyTextView|number}\n     *\n     * Используемые константы: {@link elyWeight}\n     */\n    public textWeight(weight?: elyWeight | number): elyTextView | number {\n        if (weight) {\n            // @ts-ignore\n            weight = weight.toString();\n        }\n        return elyObservableProperty.simplePropertyAccess(this, weight, this.textWeightProperty);\n    }\n\n    /**\n     * Устанавливает или возвращает текст\n     * @param {String} [value] - текст\n     * @return {String|elyTextView}\n     */\n    public text(value?: string): string | elyTextView | any {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.textProperty);\n    }\n\n    /**\n     * Название иконки\n     * @param {String} [value] - имя иконки\n     * @return {string|elyTextView}\n     */\n    public iconName(value?: string): string | elyTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.iconNameProperty);\n    }\n\n    /**\n     * Устанавливает положение икноки\n     * - {@link elyTextView.iconLeft}\n     * - {@link elyTextView.iconRight}\n     *\n     * @param position\n     */\n    public setIconPosition(position: string): elyTextView {\n        this.removeSubView(this.textContentView);\n        this.removeSubView(this.iconView);\n\n        if (position === elyTextView.iconRight) {\n            this.addSubView(this.textContentView);\n            this.addSubView(this.iconView);\n        } else if (position === elyTextView.iconLeft) {\n            this.addSubView(this.iconView);\n            this.addSubView(this.textContentView);\n        } else {\n            this.addSubView(this.iconView);\n            this.addSubView(this.textContentView);\n        }\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyFooterView.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyTextView from \"@controls/text/elyTextView\";\n\n/**\n * Подвал приложения\n */\nexport default class elyFooterView extends elyControl {\n\n    /**\n     * Основной текст\n     */\n    public readonly titleView: elyTextView;\n\n    /**\n     * Дополнительный текст\n     */\n    public readonly subtitleView: elyTextView;\n\n    /**s\n     * Констуктор\n     */\n    constructor() {\n        super({class: \"ef-footer\"});\n\n        this.titleView = new elyTextView({class: \"--title\"});\n        this.subtitleView = new elyTextView({class: \"--sub-title\"});\n        this.addSubView(this.titleView);\n        this.addSubView(this.subtitleView);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyLogger.ts                                                         +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n// import figlet from \"figlet\";\n\n/**\n * Logger\n * @deprecated\n */\nexport default class elyLogger {\n\n    /**\n     * Уровни логирования\n     */\n    public static logLevels: { no: number, debug: number, warning: number, error: number } = {\n        debug: 10,\n        error: 3,\n        no: 0,\n        warning: 2,\n    };\n\n    /**\n     * Уровень логирования\n     */\n    public static logLevel = elyLogger.logLevels.debug;\n\n    /**\n     * Логирование отладки\n     * @param message\n     */\n    public static debug(message: any) {\n        if (elyLogger.logLevel >= elyLogger.logLevels.debug)\n            if (console) console.log(\"[{ \" + \"Debug\" + \" }]: \" + message.toString());\n    }\n\n    /**\n     * Логирование предупрждений\n     * @param message\n     */\n    public static warning(message: any) {\n        if (elyLogger.logLevel >= elyLogger.logLevels.warning)\n            if (console) console.trace(\"@- [{ \" + \"Warning\" + \" }]: \" + message.toString());\n    }\n\n    /**\n     * Логирование ошибок\n     * @param message\n     */\n    public static error(message: any) {\n        if (elyLogger.logLevel >= elyLogger.logLevels.error)\n            if (console) console.trace(\"!- [{ \" + \"ERROR\" + \" }]: \" +\n                message.toString());\n    }\n\n    /**\n     * Логирование отладки -- вывод объекта\n     * @param obj\n     */\n    public static debugObject(obj: any) {\n        if (elyLogger.logLevel >= elyLogger.logLevels.debug)\n            if (console) console.log(obj);\n    }\n\n    /**\n     * Выводит сообщение\n     * @param message\n     */\n    public static print(message: any) {\n        if (console) console.log(\"[{ \" + \"Log\" + \" }]: \" + message.toString());\n    }\n\n    /**\n     * Выводит текстовое лого желтого цвета\n     * @param text\n     * @deprecated\n     */\n    public static logoTextYellow(text: string): void {\n        console!.log(\n            // figlet.textSync(text, {horizontalLayout: \"full\"}),\n        );\n    }\n\n    /**\n     * Выводит текстовое лого цианового цвета\n     * @param text\n     * @deprecated\n     */\n    public static logoTextCyan(text: string): void {\n        console!.log(\n            // figlet.textSync(text, {horizontalLayout: \"full\"}),\n        );\n    }\n\n    /**\n     * Очищает консоль\n     */\n    public static clear(): void {\n        console!.clear();\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyURL.ts                                                            +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Класс ely.URL\n *\n * Класс, содержащий набор методов для работы с URL\n */\nexport default class elyURL {\n\n    /**\n     * Возвращает текущий URL\n     */\n    public static current(): elyURL {\n        return new elyURL(window.location.href);\n    }\n\n    /**\n     * Абсолютный URL\n     */\n    public readonly absoluteString: string;\n\n    /**\n     * Ответ обрабатывается как JSON\n     */\n    public jsonResponse: boolean = true;\n\n    /**\n     * Конструктор\n     *\n     * @param {string} url - URL строка\n     * @param {*} props - опции\n     */\n    public constructor(url: string, props: any = []) {\n        this.absoluteString = url;\n    }\n\n    /**\n     * Возвращает очищенный URL\n     */\n    public getClearURL(): string {\n        return new RegExp(\"(http[s]?:\\\\/\\\\/.+)\\\\/\").exec(this.absoluteString)![1]!;\n    }\n\n    /**\n     * Возвращает очищенный URL от GET запроса\n     */\n    public getClearOfRequestURL(): string {\n        return new RegExp(\"(http[s]?:\\\\/\\\\/.+)\\\\?\").exec(this.absoluteString)![1]!;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyGetRequest.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyLogger from \"@core/elyLogger\";\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyURL from \"@core/web/url/elyURL\";\n\ntype elyWebRequestSendObserver = (response: any, status: number) => void;\ntype elyWebRequestProgressChangedObserver = (loadedBytes: number, totalBytes: number) => void;\ntype elyWebRequestErrorObserver = (error: any) => void;\ntype elyWebRequestAbortObserver = () => void;\n\n/**\n * Выполняет GET запрос\n */\nexport default class elyGetRequest extends elyObservable {\n\n    /**\n     * URL адрес\n     */\n    public readonly url: elyURL;\n\n    /**\n     * Запрос\n     */\n    public readonly xhr: XMLHttpRequest;\n\n    /**\n     * Парсинг запроса\n     */\n    public useJson: boolean = true;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: { url: elyURL | string } | string) {\n        super();\n        if (typeof options === \"string\") options = {url: options};\n        if (typeof options.url === \"string\") options.url = new elyURL(options.url);\n        this.url = options.url;\n        this.xhr = new XMLHttpRequest();\n        this.applyListeners(this.xhr);\n    }\n\n    /**\n     * Отправляет запрос\n     * @param data\n     * @param callback\n     */\n    public send(data: { [name: string]: any } | string, callback?: elyWebRequestSendObserver): void {\n        const params = typeof data === \"string\" ? data : Object.keys(data).map(k => encodeURIComponent(k) + \"=\"\n            + encodeURIComponent(data[k])).join(\"&\");\n        this.xhr.open(\"GET\", this.url.absoluteString + \"?\" + params);\n        this.xhr.onreadystatechange = () => {\n            if (this.xhr.readyState === XMLHttpRequest.DONE) {\n                let resp = this.xhr.response;\n                try {\n                    if (this.useJson)\n                        resp = JSON.parse(resp);\n                } catch (e) {\n                    elyLogger.warning(\"Ошибка возникла при обработке JSON в elyGetRequest! \" + this.url.absoluteString);\n                    elyLogger.debugObject(this);\n                    resp = null;\n                }\n                if (callback) callback(resp, this.xhr.status);\n            }\n        };\n        this.xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        this.xhr.send();\n    }\n\n    /**\n     * Добавляет слушатель изменения прогресса\n     * @param observer\n     */\n    public addProgressChangedObserver(observer: elyWebRequestProgressChangedObserver): elyGetRequest {\n        this.addObserver(\"progressChanged\", observer);\n        return this;\n    }\n\n    /**\n     * Добавляет слушатель ошибки\n     * @param observer\n     */\n    public addErrorObserver(observer: elyWebRequestErrorObserver): elyGetRequest {\n        this.addObserver(\"error\", observer);\n        return this;\n    }\n\n    /**\n     * Добавляет слушатель прерывания запроса\n     * @param observer\n     */\n    public addAbortObserver(observer: elyWebRequestAbortObserver): elyGetRequest {\n        this.addObserver(\"abort\", observer);\n        return this;\n    }\n\n    /**\n     * Добавляет слушатели\n     * @ignore\n     */\n    protected applyListeners(xhr: XMLHttpRequest): void {\n        xhr.onerror = ev => this.notificate(\"error\", [ev]);\n        xhr.onprogress = ev => this.notificate(\"progressChanged\", [ev.loaded, ev.total]);\n        xhr.onabort = () => this.notificate(\"abort\", []);\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppConfig.ts                                                       +\n + Файл изменен: 30.01.2019 00:57:41                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {\n    efAppConfigInterface,\n    efConfigSection_app,\n    efConfigSection_contentController,\n    efConfigSection_manifest,\n    efConfigSection_meta,\n    efConfigSection_navigationBar,\n    efConfigSection_sideNavigationBar,\n    efConfigSection_template,\n} from \"@app/config/efAppConfigSections\";\nimport elyColor from \"@core/elyColor\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyGetRequest from \"@core/web/request/elyGetRequest\";\n\n/**\n * Конфигурация приложения\n * @class efAppConfig\n * @augments {elyObservable}\n * @augments {efAppConfigInterface}\n */\nexport default class efAppConfig extends elyObservable implements efAppConfigInterface {\n\n    /**\n     * Путь до файла конфигурации\n     * @type {string}\n     */\n    public static appConfigPath = \"app.config.json\";\n\n    /**\n     * Стандратная конфигурация\n     * @type {efAppConfig}\n     */\n    public static default: efAppConfig = new efAppConfig();\n\n    /**\n     * Секция: приложение\n     * {@link efConfigSection_app}\n     */\n    public app: efConfigSection_app = {\n        author: null,\n        title: \"my.App\",\n    };\n\n    /**\n     * Секция: манифест\n     * {@link efConfigSection_manifest}\n     */\n    public manifest: efConfigSection_manifest = {\n        allowStandaloneMode: true,\n        useApplicationIcon: true,\n        useContentController: true,\n        useContentRouter: true,\n        useDevelopMode: false,\n        useIPhoneXStandaloneFix: true,\n        useMeta: true,\n        useNavigationBar: true,\n        useViewPort: true,\n    };\n\n    /**\n     * Секция: контроллер контента\n     * {@link efConfigSection_contentController}\n     */\n    public contentController: efConfigSection_contentController = {\n        defaultContentId: \"index\",\n        errorContentId: \"error\",\n    };\n\n    /**\n     * Секция: панель навигации\n     * {@link efConfigSection_navigationBar}\n     */\n    public navigationBar: efConfigSection_navigationBar = {\n        color: null,\n        extendedStyle: false,\n        imageUrl: null,\n        items: [],\n        subtitle: null,\n        title: \"my.App{ }\",\n    };\n\n    /**\n     * Секция: боковая панель навигации\n     * {@link efConfigSection_sideNavigationBar}\n     */\n    public sideNavigationBar: efConfigSection_sideNavigationBar = {\n        allowMouseEvents: true,\n        items: [],\n    };\n\n    /**\n     * Секция: шаблон\n     * {@link efConfigSection_template}\n     */\n    public template: efConfigSection_template = {\n        color: \"#194d6d\",\n        footer: {\n            subtitle: \"My application\",\n            title: \"Works with *ely.Flat* Application Engine\",\n        },\n        maxContainerWidth: 700,\n    };\n\n    /**\n     * Секция: мета данные\n     * {@link efConfigSection_meta}\n     */\n    public meta: efConfigSection_meta = {\n        appleMobile: {\n            statusBarStyle: \"black-translucent\",\n        },\n        charset: \"UTF-8\",\n        iconPath: \"resources/icon\",\n        viewport: {\n            fit: \"cover\",\n            initialScale: 1.0,\n            maximumScale: 1.0,\n            userScale: \"no\",\n            width: \"device-width\",\n        },\n\n    };\n\n    public constructor() {\n        super();\n    }\n\n    /**\n     * Загружает конфигурацию\n     * @param props\n     */\n    public load(props: { file: string }): void {\n        new elyGetRequest({url: props.file}).send({}, (response, status) => {\n            if (response) {\n                elyUtils.mergeDeep(this, response);\n                this.notificate(\"loaded\", [true, this]);\n            } else {\n                this.notificate(\"loaded\", [false, this]);\n            }\n        });\n    }\n\n    /**\n     * Добавляет наблюдатель: загрузка конфигурации завершена\n     *\n     * Имя обсервера: loaded\n     *\n     * @param {function(result: boolean, cfg: efAppConfig)} o - наблюдатель\n     */\n    public addLoadedObserver(o: (result: boolean, cfg: efAppConfig) => void): efAppConfig {\n        this.addObserver(\"loaded\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает заголовок приложения\n     * @return {string}\n     */\n    public getAppTitle(): string {\n        return this.app.title;\n    }\n\n    /**\n     * Возвращает строку цвета приложения\n     * @return {string}\n     */\n    public getAppColorString(): string {\n        return this.template.color;\n    }\n\n    /**\n     * Возвращает цвет панели навигации\n     * @return {string}\n     */\n    public getNavigationBarColorString(): string {\n        return this.navigationBar.color || this.template.color;\n    }\n\n    /**\n     * Возвращает цвет панели навигации\n     */\n    public getNavigationBarColor(): elyColor {\n        return new elyColor({hex: this.getNavigationBarColorString()});\n    }\n\n    /**\n     * Возвращает основной цвет приложения\n     * @return {elyColor}\n     */\n    public getAppColor(): elyColor {\n        return new elyColor({hex: this.getAppColorString()});\n    }\n\n    /**\n     * Возвращает true, если используется панель навигации\n     */\n    public isNavigationBarUsed(): boolean {\n        return this.manifest.useNavigationBar;\n    }\n\n    /**\n     * Возвращает true, если используется боковая панель навигации\n     */\n    public isSideNavigationBarUsed(): boolean {\n        return this.manifest.useSideNavigationBar;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efField.ts                                                           +\n + Файл изменен: 09.02.2019 14:42:04                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableBoolean from \"@core/observable/properties/elyObservableBoolean\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport {efEditableProtocol} from \"@protocols/efEditableProtocol\";\nimport {efErrorDisplayProtocol} from \"@protocols/efErrorDisplayProtocol\";\nimport {efValidatableProtocol} from \"@protocols/efValidatableProtocol\";\nimport {efValueProtocol} from \"@protocols/efValueProtocol\";\n\n/**\n * Опции {@link efField}\n */\nexport interface efFieldOptions<T> extends elyViewOptions {\n    value?: T;\n    editable?: boolean;\n    placeholder?: string;\n}\n\n/**\n * Поле ввода\n * @class efField\n * @template T\n * @augments elyView\n */\nexport class efField<T> extends elyView implements efValueProtocol<T>, efEditableProtocol, efErrorDisplayProtocol,\n    efValidatableProtocol {\n    /**\n     * Свойство: значение поля ввода\n     * @type {elyObservableProperty<T>}\n     */\n    public readonly valueProperty: elyObservableProperty<T> = new elyObservableProperty<T>();\n\n    /**\n     * Свойство: флаг возможности редактирования\n     * @type {elyObservableBoolean}\n     */\n    public readonly editableProperty: elyObservableBoolean = new elyObservableBoolean(true);\n\n    /**\n     * Элемент доступа\n     * @protected\n     * @ignore\n     * @readonly\n     */\n    protected readonly __accessoryView: HTMLInputElement = this.__createAccessory();\n\n    /**\n     * Таймер выделения\n     * @protected\n     * @ignore\n     */\n    private __markTimer: any | null = null;\n\n    /**\n     * Конструктор\n     * @param {efTextFieldOptions} options\n     */\n    public constructor(options: efFieldOptions<T> = {}) {\n        super(options);\n        this.getDocument().append(this.getAccessory());\n\n        this.editableProperty.change(value => {\n            if (value) {\n                this.removeClass(\"--disabled\");\n            } else {\n                this.addClass(\"--disabled\");\n            }\n            this.getAccessory().disabled = !value;\n        });\n\n        if (elyGuard.isSet(options.editable)) this.editable(options.editable!);\n        if (elyGuard.isSet(options.placeholder)) this.placeholder(options.placeholder!);\n    }\n\n    /**\n     * Возвращает элемент доступа\n     * @return {HTMLInputElement}\n     */\n    public getAccessory(): HTMLInputElement {\n        return this.__accessoryView;\n    }\n\n    /**\n     * Возвращает значение поля ввода\n     * @returns {T}\n     */\n    public value(): T | null;\n\n    /**\n     * Устанавливает значение поля ввода\n     * @param {T} value - значение\n     * @returns {this}\n     */\n    public value(value: T | null): efField<T>;\n\n    /**\n     * Возвращает и устанавливает значение поля ввода\n     * @param {string|null} [value] - значение\n     * @returns {string|this|null}\n     */\n    public value(value?: T | null): T | null | efField<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.valueProperty);\n    }\n\n    /**\n     * Очищает значение\n     * @return {this}\n     */\n    public clearValue(): efField<T> {\n        this.value(null);\n        return this;\n    }\n\n    /**\n     * Возвращает флаг возможности редактирования\n     * @returns {boolean}\n     */\n    public editable(): boolean;\n\n    /**\n     * Устанавливает флаг возможности редактирования\n     * @param {boolean} value - значение\n     * @returns {this}\n     */\n    public editable(value: boolean): efEditableProtocol;\n\n    /**\n     * Возвращает и устанавливает флаг возможности редактирования\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this}\n     */\n    public editable(value?: boolean): boolean | efEditableProtocol {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.editableProperty);\n    }\n\n    /**\n     * Возвращает текст подсказки ввода\n     * @return {string}\n     */\n    public placeholder(): string;\n\n    /**\n     * Устанавливает текст подсказки ввода\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public placeholder(value: string): efField<T>;\n\n    /**\n     * Возвращает и устанавливает текст подсказки ввода\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public placeholder(value?: string): string | null | efField<T> {\n        if (value === undefined) return this.getAccessory().placeholder;\n        this.getAccessory().placeholder = value;\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: изменения значения\n     *\n     * Имя обсервера: change\n     *\n     * @param {function(value: T, oldVal: T)} o - наблюдатель\n     */\n    public change(o: (value: T, oldVal?: T) => void): efField<T> {\n        this.valueProperty.change(o);\n        return this;\n    }\n\n    /**\n     * Помечает объект как неисправный\n     * @param {boolean} flag\n     * @return {this}\n     */\n    public error(flag: boolean): efErrorDisplayProtocol {\n        if (this.__markTimer) {\n            clearTimeout(this.__markTimer);\n        }\n        if (flag) {\n            this.addClass(\"error\");\n            this.__markTimer = setTimeout(() => {\n                this.error(false);\n                this.__markTimer = null;\n            }, 1500);\n        } else {\n            this.removeClass(\"error\");\n        }\n        return this;\n    }\n\n    /**\n     * Возвращает true, если данные валидны\n     * @return {boolean}\n     */\n    public isValid(): boolean {\n        return this.isEmpty() === false;\n    }\n\n    /**\n     * Возвращает true, если данные пусты\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return this.value() === null;\n    }\n\n    /**\n     * Фабрикует элемент доступа\n     * @private\n     * @ignore\n     */\n    protected __createAccessory(): HTMLInputElement {\n        return new elyControl({tag: \"input\"}).getDocument() as HTMLInputElement;\n    }\n}\n\n/**\n * @typedef {Object} efFieldOptions\n * @template T\n * @property {T} [value]\n * @property {boolean} [editable = true]\n * @property {string} [placeholder = \"\"]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efTextArea.ts                                                        +\n + Файл изменен: 09.02.2019 21:45:17                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efField, efFieldOptions} from \"@controls/input/efField\";\nimport elyGuard from \"@core/elyGuard\";\n\n/**\n * Опции {@link efTextArea}\n */\nexport interface efTextAreaOptions extends efFieldOptions<string> {\n    rowsCount?: number;\n    readonly?: boolean;\n}\n\n/**\n * Поле воода многострочного текста\n * @class efTextArea\n * @augments {efTextField}\n */\nexport class efTextArea extends efField<string> {\n\n    /**\n     * Конструктор\n     * @param {efTextAreaOptions} options - опции\n     */\n    public constructor(options: efTextAreaOptions = {}) {\n        super(options);\n        this.addClass(\"ef-textarea\");\n        this.getAccessory().onchange = () => this.value(this.getAccessory().value);\n        this.getAccessory().oninput = (e: any) => this.notificate(\"input\", [this.getAccessory().value, e]);\n\n        this.valueProperty.change((value) => this.getAccessory().value = value);\n\n        this.rowsCount(5);\n        elyGuard.variable<string>(options.value, (v) => this.value(v));\n        elyGuard.variable<number>(options.rowsCount, (v) => this.rowsCount(v));\n        elyGuard.variable<boolean>(options.readonly, (v) => this.readonly(v));\n    }\n\n    /**\n     * Возвращает элемент доступа\n     */\n    public getAccessory(): HTMLTextAreaElement | any {\n        return this.__accessoryView;\n    }\n\n    /**\n     * Возвращает количество строк\n     * @return {number}\n     */\n    public rowsCount(): number;\n\n    /**\n     * Устанавливает количество строк\n     * @param {number} value - значение\n     * @return {this}\n     */\n    public rowsCount(value: number): efTextArea;\n\n    /**\n     * Возвращает и устанавливает количество строк\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public rowsCount(value?: number): number | null | efTextArea {\n        if (value === undefined) return this.getAccessory().rows;\n        this.getAccessory().rows = value;\n        return this;\n    }\n\n    /**\n     * Возвращает флаг разрешающий только чтение\n     * @return {boolean}\n     */\n    public readonly(): boolean;\n\n    /**\n     * Устанавливает флаг разрешающий только чтение\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public readonly(value: boolean): efTextArea;\n\n    /**\n     * Возвращает и устанавливает флаг разрешающий только чтение\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public readonly(value?: boolean): boolean | null | efTextArea {\n        if (value === undefined) return this.getAccessory().readOnly;\n        this.getAccessory().readOnly = value;\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: ввод текста\n     *\n     * Имя обсервера: input\n     *\n     * @param {function(value: string, e: Event)} o - наблюдатель\n     */\n    public addInputObserver(o: (value: string, e: Event) => void): efTextArea {\n        this.addObserver(\"input\", o);\n        return this;\n    }\n\n    /**\n     * Пролистывает поле ввода многострочного текста до конца\n     * @return {this}\n     */\n    public scrollToBottom(): efTextArea {\n        this.getAccessory().scrollTop = this.getAccessory().scrollHeight;\n        return this;\n    }\n\n    /**\n     * Фабрикует элемент доступа\n     * @private\n     * @ignore\n     */\n    protected __createAccessory(): HTMLInputElement {\n        return new elyControl({tag: \"textarea\"}).getDocument() as HTMLInputElement;\n    }\n}\n\n/**\n * @typedef {efTextFieldOptions} efTextAreaOptions\n * @property {number} [rowsCount = 5]\n * @property {string} [value]\n * @property {boolean} [editable = true]\n * @property {string} [placeholder = \"\"]\n * @property {boolean} [readonly = false]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efHeaderTextView.ts                                                  +\n + Файл изменен: 09.02.2019 15:19:08                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efTextView, efTextViewOptions} from \"@controls/text/efTextView\";\n\n/**\n * Опции {@link efHeaderTextViewOptions}\n */\nexport interface efHeaderTextViewOptions extends efTextViewOptions {\n    headerLevel?: number;\n}\n\n/**\n * Элемент отображения заголовка\n */\nexport class efHeaderTextView extends efTextView {\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: efHeaderTextViewOptions = {headerLevel: 1}) {\n        super({tag: `h${options.headerLevel}`, ...options});\n    }\n}\n\n/**\n * @typedef {efTextViewOptions} efHeaderTextViewOptions\n * @property {number} [headerLevel = 1]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppDevelopConsole.ts                                               +\n + Файл изменен: 10.02.2019 18:49:26                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efTextArea} from \"@controls/input/efTextArea\";\nimport {efHeaderTextView} from \"@controls/text/efHeaderTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Элемент отображения - консоль\n * @class efAppDevelopConsole\n * @augments {elyView}\n */\nexport class efAppDevelopConsole extends elyView {\n\n    /**\n     * Общий объект консоли\n     * @type {efAppDevelopConsole}\n     */\n    public static readonly shared: efAppDevelopConsole = new efAppDevelopConsole();\n\n    /**\n     * Кол-во строк\n     */\n    public saveRowsLimit: number = 100;\n\n    /**\n     * Строки\n     */\n    protected __rows: string[] = [];\n\n    /**\n     * Текст\n     */\n    protected __textArea = new efTextArea({readonly: true});\n\n    /**\n     * Перекрывает консоль\n     */\n    protected __lockConsole: boolean = false;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyViewOptions = {}) {\n        super(options);\n        this.addClass(\"ef-app-develop-console\");\n        this.getDocument().append(\n            new efHeaderTextView({headerLevel: 3, text: \"ely.flat Application Develop Console\"}).getDocument());\n        this.getDocument().append(this.__textArea.getDocument());\n    }\n\n    /**\n     * Отображает данные в консоли\n     * @param data\n     */\n    public print(...data: any[]): efAppDevelopConsole {\n        if (this.__lockConsole) return this;\n        const strs = data.map(value => String(value));\n        this.__rows.push(strs.join(\" \"));\n        if (this.__rows.length > this.saveRowsLimit) {\n            this.__rows.splice(0, Math.abs(this.__rows.length - this.saveRowsLimit));\n        }\n        this.__textArea.value(this.__rows.join(\"\\n\"));\n        this.__textArea.scrollToBottom();\n        return this;\n    }\n\n    /**\n     * Отображает ошибку в консоли\n     * @param data\n     */\n    public error(...data: any[]): efAppDevelopConsole {\n        if (this.hidden()) this.hidden(false);\n        const arr = [\"<b>\"];\n        data.forEach(value => arr.push(value));\n        arr.push(\"</b>\");\n        this.print(...arr);\n        this.__lockConsole = true;\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppDocumentBody.ts                                                 +\n + Файл изменен: 30.01.2019 01:55:32                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\n\n/**\n * Документ: Тело\n * @class efAppDocumentHead\n * @augments {elyView}\n */\nexport default class efAppDocumentBody extends elyControl {\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super({element: document.body});\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppDocumentHead.ts                                                 +\n + Файл изменен: 30.01.2019 01:54:59                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyStylesheet from \"@controls/elyStylesheet\";\nimport elyView from \"@core/controls/elyView\";\n\n/**\n * Документ: Заголовок\n * @class efAppDocumentHead\n * @augments {elyView}\n */\nexport default class efAppDocumentHead extends elyView {\n\n    /**\n     * Свойство: заголовок\n     * @ignore\n     * @protected\n     */\n    protected readonly __titleElement: HTMLTitleElement;\n\n    /**\n     * Мета значения\n     * @ignore\n     * @protected\n     */\n    protected readonly __metaValues: Array<{ name: string, content: string }> = [];\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super({element: document.head});\n        this.__titleElement = document.getElementsByTagName(\"title\")[0];\n        this.getDocument().append(this.__titleElement);\n        this.getDocument().append(elyStylesheet.global.getDocument());\n    }\n\n    /**\n     * Возвращает заголовок\n     * @return {string}\n     */\n    public title(): string;\n\n    /**\n     * Устанавливает заголовок\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public title(value: string): efAppDocumentHead;\n\n    /**\n     * Возвращает и устанавливает заголовок\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public title(value?: string): string | null | efAppDocumentHead {\n        if (value === undefined) return this.__titleElement.innerText;\n        this.__titleElement.innerText = value;\n        document.title = value;\n        return this;\n    }\n\n    /**\n     * Возвращает мета значения\n     * @return {*}\n     */\n    public getMetaValues(): Array<{ name: string, content: string }> {\n        return this.__metaValues;\n    }\n\n    /**\n     * Добавляет мета значение\n     * @param {{ name: string, content: string }} props\n     * @return {efAppDocumentHead}\n     */\n    public addMetaValue(props: { name: string, content: string }): efAppDocumentHead {\n        const metaElement: HTMLMetaElement = document.createElement(\"meta\");\n        metaElement.content = props.content;\n        metaElement.name = props.name;\n        this.getDocument().append(metaElement);\n        return this;\n    }\n\n    /**\n     * Добавляет viewport\n     * @param {{fit?: string, initialScale?: number, maximumScale?: number,\n     * userScalable?: string, width?: string}} props\n     * @return {efAppDocumentHead}\n     */\n    public addViewPort(props: {\n        fit?: string, initialScale?: number, maximumScale?: number, userScalable?: string, width?: string,\n    }): efAppDocumentHead {\n        const a = [];\n        if (props.fit) a.push(`viewport-fit=${props.fit}`);\n        if (props.width) a.push(`width=${props.width}`);\n        if (props.initialScale) a.push(`initial-scale=${props.initialScale}`);\n        if (props.maximumScale) a.push(`maximum-scale=${props.maximumScale}`);\n        if (props.userScalable) a.push(`user-scalable=${props.userScalable}`);\n        return this.addMetaValue({name: \"viewport\", content: a.join(\", \")});\n    }\n\n    /**\n     * Устанавливает кодировку\n     * @param {string} charset\n     * @return {efAppDocumentHead}\n     */\n    public setCharset(charset: string): efAppDocumentHead {\n        const metaElement = document.createElement(\"meta\");\n        metaElement.setAttribute(\"charset\", charset);\n        this.getDocument().append(metaElement);\n        return this;\n    }\n\n    /**\n     * Добавляет ссылку\n     * @param {{ rel: string, href: string}|*} props\n     * @return {efAppDocumentHead}\n     */\n    public addLink(props: { rel: string, href: string, [key: string]: string }): efAppDocumentHead {\n        const lnk = document.createElement(\"link\");\n        for (const key in props)\n            if (props.hasOwnProperty(key))\n                lnk.setAttribute(key, props[key]);\n        this.getDocument().append(lnk);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efAppDocument.ts                                                     +\n + Файл изменен: 30.01.2019 01:54:33                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efAppDocumentBody from \"@app/document/efAppDocumentBody\";\nimport efAppDocumentHead from \"@app/document/efAppDocumentHead\";\n\n/**\n * Документ приложения\n * @class efAppDocument\n */\nexport default class efAppDocument {\n\n    /**\n     * Заголовок\n     */\n    protected readonly __head: efAppDocumentHead = new efAppDocumentHead();\n\n    /**\n     * Тело документа\n     */\n    protected readonly __body: efAppDocumentBody = new efAppDocumentBody();\n\n    /**\n     * Возвращает тело документа\n     * @return {efAppDocumentBody}\n     */\n    public getBody(): efAppDocumentBody {\n        return this.__body;\n    }\n\n    /**\n     * Возвращает заголовок документа\n     * @return {efAppDocumentHead}\n     */\n    public getHead(): efAppDocumentHead {\n        return this.__head;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elyViewController.ts                                                 +\n + Файл изменен: 30.11.2018 00:25:05                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyScreenController from \"@controllers/elyScreenController\";\nimport elyControl from \"@controls/action/elyControl\";\nimport elyView from \"@core/controls/elyView\";\nimport elyObservable from \"@core/observable/elyObservable\";\n\n/**\n * Контроллер элемента отображения\n * @class elyViewController\n * @augments elyObservable\n */\nexport default class elyViewController extends elyObservable {\n\n    /**\n     * Текущий контроллер\n     * @ignore\n     */\n    public static __thisControllers: string[] = [];\n\n    /**\n     * Элемент отображения\n     * @type {elyControl}\n     */\n    public readonly view: elyControl | elyView = elyControl.empty();\n\n    /**\n     * Конструктор\n     */\n    protected constructor() {\n        super();\n    }\n\n    /**\n     * Делегат окончания инициилизации объекта\n     * @param screen - экран\n     */\n    public viewWillAppear(screen: elyScreenController): void {\n        // Nothing is done\n    }\n\n    /**\n     * Делегат окончания загрузки элемента\n     */\n    public viewDidLoad(): void {\n        // Nothing is done\n    }\n\n    /**\n     * Делегат окончания отображения элемента\n     */\n    public viewDidAppear(): void {\n        // Nothing is done\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyRebuildableViewProtocol.ts                                        +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Элемент, который может быть перестроен\n * @class elyRebuildableViewProtocol\n * @augments {elyView}\n */\nexport default abstract class elyRebuildableViewProtocol extends elyView {\n\n    /**\n     * Флаг перестроения\n     * @ignore\n     */\n    protected __denyRebuild: boolean;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    protected constructor(options: elyViewOptions) {\n        super(options);\n        this.__denyRebuild = false;\n    }\n\n    /**\n     * Запрещает или отменяет запрет перестроения\n     * @param deny\n     */\n    public denyRebuild(deny: boolean): elyRebuildableViewProtocol | any {\n        this.__denyRebuild = deny;\n        return this;\n    }\n\n    /**\n     * Выполняет перестроени элемента\n     */\n    public rebuild(): elyRebuildableViewProtocol | any {\n        if (!this.__denyRebuild) this.__rebuild();\n        this.notificate(\"rebuilt\");\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: элемент был перестроен\n     *\n     * Имя обсервера: rebuilt\n     *\n     * @param o - наблюдатель\n     */\n    public addRebuiltObserver(o: () => void): elyRebuildableViewProtocol | any {\n        this.addObserver(\"rebuilt\", o);\n        return this;\n    }\n\n    /**\n     * Выполняет перестроение элемента\n     *\n     * Метод для переопределения реализации престроения\n     * @private\n     * @ignore\n     */\n    protected abstract __rebuild(): elyRebuildableViewProtocol | any;\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyObservableArray.ts                                                +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\ntype elyObservableArrayAddHandler<T> = (newItem: T, index: number) => void;\ntype elyObservableArrayRemoveHandler<T> = (remove: T) => void;\ntype elyObservableArrayClearHandler<T> = () => void;\n\n/**\n * Массив\n * @template T\n * @class elyObservableArray\n * @augments elyObservableProperty.<T[]>\n */\nexport default class elyObservableArray<T> extends elyObservableProperty<T[]> {\n\n    /**\n     * Конструктор\n     */\n    constructor() {\n        super([]);\n    }\n\n    /**\n     * Возвращает массив\n     * @return {T[]}\n     */\n    public get(): T[] {\n        return this.value || [];\n    }\n\n    /**\n     * Регистрирует слушатель добавления нового элемента в массив\n     * @param {function(newItem: {T}, index: number)} observer - слушатель\n     */\n    public addNewItemObserver(observer: elyObservableArrayAddHandler<T>): elyObservableArray<T> {\n        return this.addObserver(\"add\", observer) as elyObservableArray<T>;\n    }\n\n    /**\n     * Регистрирует слушатель изменения элементов массива\n     * @param observer - слушатель\n     */\n    public addChangeItemsObserver(observer: () => void): elyObservableArray<T> {\n        return this.addObserver(\"change\", observer) as elyObservableArray<T>;\n    }\n\n    /**\n     * Регистрирует слушатель очищения массива\n     * @param observer - слушатель\n     */\n    public addClearObserver(observer: elyObservableArrayClearHandler<T>): elyObservableArray<T> {\n        return this.addObserver(\"clear\", observer) as elyObservableArray<T>;\n    }\n\n    /**\n     * Регистрирует слушатель удаления элемента массива\n     * @param observer - слушатель\n     */\n    public addRemoveObserver(observer: elyObservableArrayRemoveHandler<T>): elyObservableArray<T> {\n        return this.addObserver(\"remove\", observer) as elyObservableArray<T>;\n    }\n\n    /**\n     * Добавляет элемент в массив\n     * @param item\n     */\n    public push(item: T): elyObservableArray<T> {\n        this.value!.push(item);\n        this.notificate(\"change\", [this.get()]);\n        this.notificate(\"add\", [item, this.value!.length - 1]);\n        return this;\n    }\n\n    /**\n     * Добавляет элемент в массив по индексу\n     * @param {number} index\n     * @param {...T} items\n     */\n    public insert(index: number, ...items: T[]) {\n        this.value!.splice(index, 0, ...items);\n        this.notificate(\"change\", [this.get()]);\n        this.notificate(\"add\", [index, ...items]);\n        return this;\n    }\n\n    /**\n     * Добавляет элемент в массив\n     * @param {number} index\n     * @return {this}\n     */\n    public remove(index: number): elyObservableArray<T> {\n        const item = this.item(index);\n        this.value = this.value!.splice(index, 1);\n        this.notificate(\"change\", [this.get()]);\n        this.notificate(\"remove\", [item]);\n        return this;\n    }\n\n    /**\n     * Удаляет элемент из массива\n     * @param {T} item - элемент массива\n     * @return {this}\n     */\n    public removeItem(item: T): elyObservableArray<T> {\n        const index = this.indexOf(item);\n        this.remove(index);\n        return this;\n    }\n\n    /**\n     * Возвращает элемент массива\n     * @param {number} index\n     */\n    public item(index: number): T {\n        return this.value![index];\n    }\n\n    /**\n     * Возвращает последний элемент\n     * @return {T}\n     */\n    public last(): T {\n        return this.value![this.value!.length - 1];\n    }\n\n    /**\n     * Возвращает последний элемент и удаляет его из массива\n     * @return {T}\n     */\n    public pop(): T | null {\n        const val = this.items().pop();\n        return val === undefined ? null : val;\n    }\n\n    /**\n     * Возвращает длину массива\n     * @return {number}\n     */\n    public length(): number {\n        return this.value!.length;\n    }\n\n    /**\n     * Возвращает true, если существует индекс\n     * @param {number} index\n     */\n    public hasIndex(index: number): boolean {\n        return !!this.value![index];\n    }\n\n    /**\n     * Возвращает индекс элемента в массиве или -1, если\n     * элемент не найден\n     * @param {T} item\n     */\n    public indexOf(item: T): number {\n        return this.value!.indexOf(item);\n    }\n\n    /**\n     * Возвращает true, если массив содержит item\n     * @param {T} item\n     */\n    public hasItem(item: T): boolean {\n        return this.indexOf(item) > -1;\n    }\n\n    /**\n     * Очищает массив\n     * @return {this}\n     */\n    public clear(): elyObservableArray<T> {\n        this.value = [];\n        this.notificate(\"change\", [this.get()]);\n        this.notificate(\"clear\", []);\n        return this;\n    }\n\n    /**\n     * Возвращает true, если массив пустой\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return this.length() === 0;\n    }\n\n    /**\n     * Элементы\n     * @return {T[]}\n     */\n    public items(): T[] {\n        return this.value!;\n    }\n\n    /**\n     * Цикл по элементам массива\n     * @param {function(item: T, index: number, items: T[])} callbackfn - обработчик\n     */\n    public forEach(callbackfn: (item: T, index: number, items: T[]) => void): elyObservableArray<T> {\n        this.items().forEach((value, index, array) => callbackfn(value, index, array));\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efRowLayoutView.ts                                                   +\n + Файл изменен: 09.02.2019 16:35:37                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Опции {@link efRowLayoutView}\n */\nexport interface efRowLayoutViewOptions extends elyViewOptions {\n    rowLength?: number;\n    rowItemsStaticSize?: boolean;\n    items?: elyView[];\n}\n\n/**\n * Элемент отображение строка {@link efGridLayoutView}\n * @class efGridLayoutRowView\n * @augments {elyView}\n */\nexport class efRowLayoutView extends elyRebuildableViewProtocol {\n\n    /**\n     * Элементы отображения\n     * @ignore\n     * @protected\n     */\n    protected __views: elyObservableArray<elyView> = new elyObservableArray<elyView>();\n\n    /**\n     * Свойство: количество элементов в динамической строке\n     * @ignore\n     * @protected\n     */\n    protected readonly __rowLengthProperty: elyObservableProperty<number>\n        = new elyObservableProperty<number>(24);\n\n    /**\n     * Свойство: использование статичного размера элементов в строке\n     * @ignore\n     * @protected\n     */\n    protected readonly __rowItemsStaticSizeProperty: elyObservableProperty<boolean> =\n        new elyObservableProperty<boolean>(false);\n\n    /**\n     * Контейнеры\n     * @protected\n     * @ignore\n     */\n    protected __containers: elyView[] = [];\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: efRowLayoutViewOptions = {}) {\n        super(options);\n        this.addClass(\"ef-row\");\n\n        this.__views.change(() => this.rebuild());\n        this.__rowLengthProperty.change(() => this.rebuild());\n        this.__rowItemsStaticSizeProperty.change(() => this.rebuild());\n\n        this.denyRebuild(true);\n\n        this.rowLength(24);\n        this.rowItemsStaticSize(false);\n\n        elyGuard.variable<number>(options.rowLength, () =>\n            this.rowLength(options.rowLength!));\n        elyGuard.variable<number>(options.rowItemsStaticSize, () =>\n            this.rowItemsStaticSize(options.rowItemsStaticSize!));\n        elyGuard.variable<elyView[]>(options.items, () =>\n            this.add(...options.items!));\n\n        this.denyRebuild(false);\n        this.rebuild();\n    }\n\n    /**\n     * Возвращает количество элементов в динамической строке\n     * @returns {number}\n     */\n    public rowLength(): number;\n\n    /**\n     * Устанавливает количество элементов в динамической строке\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public rowLength(value: number): efRowLayoutView;\n\n    /**\n     * Возвращает и устанавливает количество элементов в динамической строке\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public rowLength(value?: number): number | null | efRowLayoutView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__rowLengthProperty);\n    }\n\n    /**\n     * Возвращает использование статичного размера элементов в строке\n     * @returns {boolean}\n     */\n    public rowItemsStaticSize(): boolean;\n\n    /**\n     * Устанавливает использование статичного размера элементов в строке\n     * @param {boolean} value - значение\n     * @returns {this}\n     */\n    public rowItemsStaticSize(value: boolean): efRowLayoutView;\n\n    /**\n     * Возвращает и устанавливает использование статичного размера элементов в строке\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public rowItemsStaticSize(value?: boolean): boolean | null | efRowLayoutView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__rowItemsStaticSizeProperty);\n    }\n\n    /**\n     * Возвращает массив элементов отображения\n     * @return {elyObservableArray<elyView>}\n     */\n    public getViews(): elyObservableArray<elyView> {\n        return this.__views;\n    }\n\n    /**\n     * Добавляет элемент[ы] в строку\n     * @param {...elyView} view\n     */\n    public add(...view: elyView[]): efRowLayoutView {\n        view.forEach(value => this.getViews().push(value));\n        return this;\n    }\n\n    /**\n     * Вставляет элементы в нужную позицию\n     * @param index\n     * @param view\n     */\n    public insert(index: number, ...view: elyView[]): efRowLayoutView {\n        this.getViews().insert(index, ...view);\n        return this;\n    }\n\n    /**\n     * Возвращает индекс элемента в строке\n     * @param {elyView} view\n     * @return {number}\n     */\n    public indexOf(view: elyView): number {\n        return this.getViews().indexOf(view);\n    }\n\n    /**\n     * Возвращает true, если в строке существует элемент\n     * @param {elyView} view\n     * @return {boolean}\n     */\n    public contains(view: elyView): boolean {\n        return this.indexOf(view) > -1;\n    }\n\n    /**\n     * Удаляет элемент\n     * @param {elyView} view\n     * @return {this}\n     */\n    public remove(view: elyView): efRowLayoutView {\n        return this.removeIndex(this.indexOf(view));\n    }\n\n    /**\n     * Удаляет элемент по индексу\n     * @param {number} index - индекс элемента в строке\n     * @return {this}\n     */\n    public removeIndex(index: number): efRowLayoutView {\n        this.getViews().remove(index);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: элемент будет добавлен, помещенный в контейнер.\n     *\n     * Аргументы:\n     * - Первый аргумент - элемент;\n     * - Второй аргумент - контейнер в который уже добавлен элемент.\n     *\n     * Имя обсервера: itemWillAdd\n     *\n     * @param o - наблюдатель\n     */\n    public addItemWillAddObserver(o: (item: elyView, container: elyView) => void): efRowLayoutView {\n        this.addObserver(\"itemWillAdd\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает элемент на сетке\n     *\n     * @param {number} index\n     * @return {elyView}\n     */\n    public viewAt(index: number): elyView | null {\n        if (this.getViews().hasIndex(index)) return this.getViews().item(index);\n        return null;\n    }\n\n    /**\n     * Возвращает колонку по индексу. Колонка - контейнер содержит элемент. Элемент\n     * можно получить испльзуя метод `{@link efRowLayoutView.viewAt}`\n     *\n     * @param {number} index\n     * @return {elyView}\n     */\n    public columnAt(index: number): elyView | null {\n        if (this.getViews().hasIndex(index)) return this.__containers[index];\n        return null;\n    }\n\n    /**\n     * Выполняет перестроение\n     * @ignore\n     * @private\n     */\n    protected __rebuild(): efRowLayoutView {\n        this.removeViewContent();\n        this.__containers = [];\n        this.getViews().forEach(item => {\n            const container = new elyControl({class: \"ef-col\"});\n            let containerSize = (1 / this.rowLength()) * 100;\n            if (!this.rowItemsStaticSize())\n                containerSize = 100 / (this.rowLength() / (this.rowLength() / this.getViews().length()));\n            container.getStyle().width = containerSize + \"%\";\n            container.addSubView(item);\n            this.__containers.push(container);\n            this.notificate(\"itemWillAdd\", [item, container]);\n            this.getDocument().append(container.getDocument());\n        });\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efRowLayoutViewOptions\n * @property {number} [rowLength = 24]\n * @property {boolean} [rowItemsStaticSize = false]\n * @property {elyView[]} [items]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efGridLayoutView.ts                                                  +\n + Файл изменен: 09.02.2019 16:34:32                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efRowLayoutView} from \"@controls/layout/efRowLayoutView\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Опции {@link efGridLayoutView}\n */\nexport interface efGridLayoutViewOptions extends elyViewOptions {\n    rowsLength?: number;\n    staticGrid?: boolean;\n    items?: elyView[][] | efRowLayoutView[];\n}\n\n/**\n * Элемент отображения динамической сетки\n * @class efGridLayoutView\n * @augments {elyView}\n */\nexport class efGridLayoutView extends elyRebuildableViewProtocol {\n\n    /**\n     * Свойство: количество элементов в строках\n     * @ignore\n     * @protected\n     */\n    protected readonly __rowsLengthProperty: elyObservableProperty<number>\n        = new elyObservableProperty<number>(24);\n\n    /**\n     * Строки\n     * @ignore\n     * @protected\n     */\n    protected readonly __rows: elyObservableArray<efRowLayoutView>\n        = new elyObservableArray<efRowLayoutView>();\n\n    /**\n     * Свойство: использование статистических размеров элементов\n     * @ignore\n     * @protected\n     */\n    protected readonly __staticGridProperty: elyObservableProperty<boolean>\n        = new elyObservableProperty<boolean>(false);\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: efGridLayoutViewOptions = {}) {\n        super(options);\n\n        this.__rowsLengthProperty.change((val) => this.getRows().forEach(item => item.rowLength(val)));\n        this.__staticGridProperty.change(value => this.getRows().forEach(item => item.rowItemsStaticSize(value)));\n        this.__rows.change(() => this.rebuild());\n        this.denyRebuild(true);\n\n        elyGuard.variable<elyView[][] | efRowLayoutView[]>(options.items, () => {\n            if (options.items![0] && options.items![0] instanceof efRowLayoutView)\n                for (const row of options.items! as efRowLayoutView[])\n                    this.getRows().push(row);\n            else\n                for (const items of options.items! as elyView[][])\n                    this.add(...items);\n        });\n        this.rowsLength(24);\n        this.staticGrid(false);\n        elyGuard.variable<number>(options.rowsLength, () => this.rowsLength(options.rowsLength!));\n        elyGuard.variable<number>(options.staticGrid, () => this.staticGrid(options.staticGrid!));\n        this.denyRebuild(false);\n        this.rebuild();\n    }\n\n    /**\n     * Возвращает использование статистических размеров элементов\n     * @returns {boolean}\n     */\n    public staticGrid(): boolean;\n\n    /**\n     * Устанавливает использование статистических размеров элементов\n     * @param {boolean} value - значение\n     * @returns {this}\n     */\n    public staticGrid(value: boolean): efGridLayoutView;\n\n    /**\n     * Возвращает и устанавливает использование статистических размеров элементов\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     *\n     * Внимание! После установки данного значения, значения во всех строках будут изменены!\n     */\n    public staticGrid(value?: boolean): boolean | null | efGridLayoutView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__staticGridProperty);\n    }\n\n    /**\n     * Возвращает количество элементов в строках\n     * @returns {number}\n     */\n    public rowsLength(): number;\n\n    /**\n     * Устанавливает количество элементов в строках\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public rowsLength(value: number): efGridLayoutView;\n\n    /**\n     * Возвращает и устанавливает количество элементов в строках\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     *\n     * Внимание! После установки данного значения, значения во всех строках будут изменены!\n     */\n    public rowsLength(value?: number): number | null | efGridLayoutView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__rowsLengthProperty);\n    }\n\n    /**\n     * Возвращает строки сетки\n     * @return {elyObservableArray<efRowLayoutView>}\n     */\n    public getRows(): elyObservableArray<efRowLayoutView> {\n        return this.__rows;\n    }\n\n    /**\n     * Возвращает строку по индексу\n     * @param {number} index\n     * @return {efRowLayoutView}\n     */\n    public rowAt(index: number): efRowLayoutView | null {\n        if (this.getRows().hasIndex(index)) return this.getRows().item(index);\n        return null;\n    }\n\n    /**\n     * Добавляет элемент[ы] на сетку\n     * @param view\n     */\n    public add(...view: elyView[]): efGridLayoutView {\n        const row = new efRowLayoutView({rowLength: this.rowsLength()});\n        this.getRows().push(row);\n        row.add(...view);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Возвращает индекс строки элемента\n     * @param {elyView} view\n     */\n    public rowIndex(view: elyView): number {\n        let i = 0;\n        for (const row of this.getRows().get()) {\n            if (row.contains(view)) return i;\n            i++;\n        }\n        return -1;\n    }\n\n    /**\n     * Воззвращает координаты элемента на сетке\n     * @param {elyView} view\n     * @return {{ rowIndex: number, colIndex: number }}\n     */\n    public colRowIndex(view: elyView): { rowIndex: number, colIndex: number } {\n        const rowIndex = this.rowIndex(view);\n        if (rowIndex === -1) return {rowIndex: -1, colIndex: -1};\n        const row = this.rowAt(rowIndex);\n        const colIndex = row ? row.indexOf(view) : -1;\n        if (colIndex > -1) return {rowIndex, colIndex};\n        return {rowIndex: -1, colIndex: -1};\n    }\n\n    /**\n     * Перестроение\n     * @ignore\n     * @private\n     */\n    protected __rebuild(): efGridLayoutView {\n        this.removeViewContent();\n        this.getRows().forEach(item => {\n            this.getDocument().append(item.getDocument());\n        });\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efGridLayoutViewOptions\n * @property {number} [rowsLength = 24]\n * @property {boolean} [staticGrid = false]\n * @property {elyView[][] | efRowLayoutView[]} [items]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyGridViewController.ts                                             +\n + Файл изменен: 09.02.2019 18:42:19                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyViewController from \"@controllers/elyViewController\";\nimport {efGridLayoutView} from \"@controls/layout/efGridLayoutView\";\nimport elyView from \"@core/controls/elyView\";\n\n/**\n * Контроллер с сеткой в основании\n * @class elyGridViewController\n * @augments {elyViewController}\n */\nexport default class elyGridViewController extends elyViewController {\n\n    /**\n     * Элемент отображения\n     * @type {efGridLayoutView|elyView}\n     */\n    public readonly view: efGridLayoutView & elyView = new efGridLayoutView();\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super();\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: Size.ts                                                              +\n + Файл изменен: 08.02.2019 01:19:15                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Размеры ely.flat.application\n * @class Size\n * @augments {elyEnum<string>}\n */\nexport default class Size extends elyEnum<string> {\n\n    /**\n     * Стандартный размер\n     * @return elySize\n     */\n    public static readonly default = new Size(\"normal\");\n\n    /**\n     * Основной размер, используемый в ely.flat\n     */\n    public static readonly normal = new Size(\"regular\");\n\n    /**\n     * Размер во весь блок\n     */\n    public static readonly fill = new Size(\"fill\");\n\n    /**\n     * Маленький размер\n     */\n    public static readonly small = new Size(\"small\");\n\n    /**\n     * Очень маленький размер\n     */\n    public static readonly xsmall = new Size(\"xsmall\");\n\n    /**\n     * Большой размер\n     */\n    public static readonly large = new Size(\"large\");\n\n    /**\n     * Очень большой размер\n     */\n    public static readonly xlarge = new Size(\"xlarge\");\n\n    /**\n     * Огромный размер\n     */\n    public static readonly xxlarge = new Size(\"xxlarge\");\n\n    /**\n     * Свой размер\n     * @param value\n     */\n    public static custom(value: string | number): Size {\n        if (typeof value === \"number\") value = value.toString() + \"px\";\n        return new Size(value, true);\n    }\n\n    /**\n     * Возвращает размер по его названию\n     * @param name\n     */\n    public static byName(name: string): Size {\n        return new Size(name);\n    }\n\n    /**\n     * Список\n     */\n    public static rawList() {\n        return {\n            default: Size.default.value,\n            fill: Size.fill.value,\n            large: Size.large.value,\n            normal: Size.normal.value,\n            small: Size.small.value,\n            xlarge: Size.xlarge.value,\n            xsmall: Size.xsmall.value,\n            xxlarge: Size.xxlarge.value,\n        };\n    }\n\n    /**\n     * Кастомный размер\n     * @ignore\n     */\n    public custom: boolean;\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     * @param custom\n     */\n    protected constructor(val: string, custom: boolean = false) {\n        super(val);\n        this.custom = custom;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: Weight.ts                                                            +\n + Файл изменен: 08.02.2019 02:06:22                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Толщина ely.flat.application\n * @class Weight\n * @augments {elyEnum<number>}\n */\nexport default class Weight extends elyEnum<string> {\n\n    /**\n     * Стандартная толщина ely.flat.application\n     * @type {Weight}\n     */\n    public static readonly default = new Weight(\"regular\");\n\n    /**\n     * Толщина, используемая общими стандартами\n     * @type {Weight}\n     */\n    public static readonly normal = new Weight(\"standard\");\n\n    /**\n     * Высокая толщина\n     * @type {Weight}\n     */\n    public static readonly fat = new Weight(\"fat\");\n\n    /**\n     * Толщина меньше стандартной\n     * @type {Weight}\n     */\n    public static readonly light = new Weight(\"light\");\n\n    /**\n     * Предельно низкая толщина\n     * @type {Weight}\n     */\n    public static readonly thin = new Weight(\"thin\");\n\n    /**\n     * Свой размер\n     * @param value\n     * @return {Weight}\n     */\n    public static custom(value: number): Weight {\n        return new Weight(value, true);\n    }\n\n    /**\n     * Возвращает размер по названию\n     * @param {String} value\n     * @return {Weight}\n     */\n    public static byName(value: string): Weight {\n        return new Weight(value);\n    }\n\n    /**\n     * Список\n     */\n    public static rawList() {\n        return {\n            default: Weight.default.value,\n            fat: Weight.fat.value,\n            light: Weight.light.value,\n            normal: Weight.normal.value,\n            thin: Weight.thin.value,\n        };\n    }\n\n    /**\n     * Флаг кастомного значения\n     */\n    public custom: boolean;\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     * @param custom\n     */\n    protected constructor(val: string | number, custom: boolean = false) {\n        super(String(val));\n        this.custom = custom;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elySimplePageViewController.ts                                       +\n + Файл изменен: 30.11.2018 01:52:55                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyGridViewController from \"@controllers/elyGridViewController\";\nimport elyControl from \"@controls/action/elyControl\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport Size from \"@enums/Size\";\nimport Weight from \"@enums/Weight\";\n\n/**\n * Контроллер с шаблоном макета приложения\n * @class elySimplePageViewController\n * @augments {elyGridViewController}\n */\nexport default class elySimplePageViewController extends elyGridViewController {\n\n    /**\n     * Основной заголовок\n     * @type {elyTextView}\n     */\n    public readonly titleView: efTextView = new efTextView({class: \"--title\"});\n\n    /**\n     * Описание страницы\n     * @type {elyTextView}\n     */\n    public readonly descriptionView: efTextView = new efTextView({class: \"--description\"});\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super();\n        this.view.addClass(\"ef-simple-content\");\n\n        const headerView = new elyControl({class: \"--content-header\"});\n\n        this.titleView.textSize(Size.xlarge).textCenter(true);\n        this.descriptionView.textCenter(true).textWeight(Weight.thin);\n\n        headerView.addSubView(this.titleView);\n        headerView.addSubView(this.descriptionView);\n        this.view.add(headerView);\n    }\n\n    /**\n     * Устанавливает или возвращает заголовок\n     * @param {string} [value]\n     * @return {this|string}\n     */\n    public title(value?: string): elySimplePageViewController | string {\n        if (value === undefined) return this.titleView.text();\n        this.titleView.text(value);\n        return this;\n    }\n\n    /**\n     * Устанавливает или возвращает описание контента\n     * @param {string} [value]\n     * @return {this|string}\n     */\n    public description(value?: string): elySimplePageViewController | string {\n        if (value === undefined) return this.descriptionView.text();\n        this.descriptionView.text(value);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elyScreenController.ts                                               +\n + Файл изменен: 30.11.2018 00:19:28                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efApplication from \"@app/app/efApplication\";\nimport elySimplePageViewController from \"@controllers/elySimplePageViewController\";\nimport elyViewController from \"@controllers/elyViewController\";\nimport elyControl from \"@controls/action/elyControl\";\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\nclass __elyScreenIndexViewController extends elySimplePageViewController {\n\n    /**\n     * После загрущки\n     *\n     * + В данном методе рекомендуется выполнять отрисовку, а также программную логику\n     *   контроллера элемента отображения.\n     */\n    public viewDidLoad() {\n        super.viewDidLoad();\n\n        this.title(\"ely.Flat *{* Application *}*\");\n        this.description(\"Приложение разработано на основе ely.flat framework\");\n    }\n}\n\n/**\n * Контроллер экрана\n * @class elyScreenController\n * @augments elyObservable\n */\nexport default class elyScreenController extends elyObservable {\n\n    /**\n     * Стандартный контроллер экрана\n     */\n    public static readonly default: elyScreenController = new elyScreenController();\n\n    /**\n     * Контроллер\n     */\n    public controller: elyObservableProperty<elyViewController> = new elyObservableProperty<elyViewController>();\n\n    /**\n     * Элемент отображения\n     */\n    public readonly view: elyControl = new elyControl({class: \"ef-screen\"});\n\n    /**\n     * Элементы контента\n     */\n    protected readonly items: { [id: string]: { controller: elyViewController, canOverwrite: boolean } } = {};\n\n    /**\n     * Конструктор\n     */\n    protected constructor() {\n        super();\n        this.present(new __elyScreenIndexViewController());\n        this.elyScreenControllerDidInit();\n    }\n\n    /**\n     * Делегат завершения инициилизации контроллера\n     */\n    public elyScreenControllerDidInit(): void {\n        this.notificate(\"didInit\");\n    }\n\n    /**\n     * Отображает элемент\n     * @param controller\n     * @param completion\n     */\n    public present(controller: elyViewController | string, completion?: () => void): void {\n        if (typeof controller === \"string\") {\n            if (this.items.hasOwnProperty(controller))\n                this.present(this.items[controller].controller, completion);\n        } else {\n            this.view.fadeOut(() => {\n                this.controller.set(controller);\n                if (elyViewController.__thisControllers.indexOf(controller.constructor.name) === -1) {\n                    elyViewController.__thisControllers.push(controller.constructor.name);\n                    controller.viewDidLoad();\n                }\n                controller.viewWillAppear(this);\n                this.view.removeViewContent();\n                this.view.addSubView(controller.view);\n                this.view.addSubView(efApplication.default.footerView);\n                this.view.fadeIn(() => {\n                    controller.viewDidAppear();\n                    if (completion) completion();\n                });\n\n            });\n        }\n    }\n\n    /**\n     * Добавляет контроллер в навигацию\n     * @param name\n     * @param controller\n     * @param canOverwrite\n     */\n    public addControllerName(name: string, controller: elyViewController, canOverwrite: boolean = false): void {\n        if (this.items.hasOwnProperty(name)) {\n            if (!this.items[name].canOverwrite) return;\n            this.items[name].controller = controller;\n            this.items[name].canOverwrite = canOverwrite;\n        }\n        this.items[name] = {controller, canOverwrite};\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efListView.ts                                                        +\n + Файл изменен: 07.02.2019 23:53:41                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\n\n/**\n * Опции {@link efListView}\n */\nexport interface efListViewOptions extends elyViewOptions {\n    items?: elyView[];\n}\n\n/**\n * Списко элементов\n * @class efListView\n * @augments {elyRebuildableViewProtocol}\n */\nexport class efListView extends elyRebuildableViewProtocol {\n\n    /**\n     * Элементы списка\n     * @protected\n     * @ignore\n     */\n    protected readonly __items: elyObservableArray<elyView>;\n\n    /**\n     * Конструктор\n     * @param {efListViewOptions} options\n     */\n    public constructor(options: efListViewOptions = {}) {\n        super({tag: \"ul\", ...options});\n        this.__items = new elyObservableArray<elyView>();\n        this.__items.change(() => this.__rebuild());\n        (options.items || []).forEach(value => this.addView(value));\n    }\n\n    /**\n     * Возвращает элементы списка\n     */\n    public getItems(): elyObservableArray<elyView> {\n        return this.__items;\n    }\n\n    /**\n     * Добавляет элемент отображения\n     * @param view\n     */\n    public addView(view: elyView): efListView {\n        this.__items.push(view);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: элемент будет добавлен.\n     *\n     * Наблюдатель принимает два параметра: view и container.\n     *\n     * Элементы в efListView хранятся в контейнерах. Поэтому\n     * при добавлении слушатель получает два elyView элемента.\n     * Благодаря этому слушателю, Вы можете кастомизировать контейнер.\n     *\n     * Имя обсервера: itemWillAdd\n     *\n     * @param o - наблюдатель\n     */\n    public addItemWillAddObserver(o: (view: elyView, container: elyView) => void): efListView {\n        this.addObserver(\"itemWillAdd\", o);\n        return this;\n    }\n\n    /**\n     * Выполняет перестроение элемента\n     *\n     * Метод для переопределения реализации престроения\n     * @private\n     * @ignore\n     */\n    protected __rebuild(): elyRebuildableViewProtocol | any {\n        this.removeViewContent();\n        this.getItems().forEach(item => {\n            const view = new elyControl({tag: \"li\", class: \"--item\"});\n            view.addSubView(item);\n            this.notificate(\"itemWillAdd\", [item, view]);\n            this.getDocument().append(view.getDocument());\n        });\n        return this;\n    }\n}\n\n/**\n * @typedef {Object} efListViewOptions\n * @property {elyView[]} [items]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efNavigationView.ts                                                  +\n + Файл изменен: 07.02.2019 23:43:35                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efListView} from \"@controls/list/efListView\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Опции {@link efNavigationView}\n */\nexport interface efNavigationViewOptions extends elyViewOptions {\n\n    /**\n     * Горизонтальное расположение меню\n     */\n    horizontal: boolean;\n\n    /**\n     * Фиксированное расположение\n     */\n    fixed: boolean;\n}\n\n/**\n * Элемент отображения - панель навигации\n * @class efNavigationView\n * @augments elyRebuildableViewProtocol\n */\nexport class efNavigationView extends efListView {\n\n    /**\n     * Элемент отображения заголовка\n     * @protected\n     * @ignore\n     */\n    protected readonly __titleTextView: efTextView = new efTextView({tag: \"li\"});\n\n    /**\n     * Элемент отображения иконки-переключателя\n     * @protected\n     * @ignore\n     */\n    protected readonly __toggleIconView: efIconView = new efIconView({tag: \"li\", iconName: \"navicon\"});\n\n    /**\n     * Конструктор\n     * @param {efNavigationViewOptions} options\n     */\n    public constructor(options: efNavigationViewOptions = {horizontal: true, fixed: false}) {\n        super(options);\n        this.__denyRebuild = false;\n        this.addClass(\"ef-navigation\");\n\n        this.fixed(options.fixed || false);\n        this.horizontal(options.horizontal);\n\n        this.getTitleView().addClass(\"--item\", \"logo\");\n        this.getToggleIconView().addClass(\"--toggle\");\n\n        this.getToggleIconView().addObserver(\"click\", () => {\n            if (this.hasClass(\"--open\")) this.removeClass(\"--open\");\n            else this.addClass(\"--open\");\n        });\n\n        this.rebuild();\n    }\n\n    /**\n     * Возвращает элемент отображения заголовка\n     * @return {efTextView}\n     */\n    public getTitleView(): efTextView {\n        return this.__titleTextView;\n    }\n\n    /**\n     * Возвращает иконку-переключатель\n     */\n    public getToggleIconView(): efIconView {\n        return this.__toggleIconView;\n    }\n\n    /**\n     * Возвращает фиксирование меню\n     * @return {boolean}\n     */\n    public fixed(): boolean;\n\n    /**\n     * Устанавливает фиксирование меню\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public fixed(value: boolean): efNavigationView;\n\n    /**\n     * Возвращает и устанавливает\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public fixed(value?: boolean): boolean | null | efNavigationView {\n        if (value === undefined) return this.hasClass(\"--fixed\");\n        if (value) this.addClass(\"--fixed\");\n        else this.removeClass(\"--fixed\");\n        return this;\n    }\n\n    /**\n     * Возвращает горизонтальное расположение\n     * @return {boolean}\n     */\n    public horizontal(): boolean;\n\n    /**\n     * Устанавливает горизонтальное расположение\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public horizontal(value: boolean): efNavigationView;\n\n    /**\n     * Возвращает и устанавливает горизонтальное расположение\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public horizontal(value?: boolean): boolean | null | efNavigationView {\n        if (value === undefined) return this.hasClass(\"--horizontal\");\n        if (value) this.addClass(\"--horizontal\");\n        else this.removeClass(\"--horizontal\");\n        return this;\n    }\n\n    /**\n     * Выполняет перестроение элемента\n     *\n     * Метод для переопределения реализации престроения\n     * @private\n     * @ignore\n     */\n    protected __rebuild(): efNavigationView {\n        this.removeViewContent();\n        this.getDocument().append(this.getToggleIconView().getDocument());\n        this.getDocument().append(this.getTitleView().getDocument());\n        this.getItems().forEach(item => {\n            const view = new elyControl({tag: \"li\", class: \"--item\"});\n            view.addSubView(item);\n            this.notificate(\"itemWillAdd\", [item, view]);\n            this.getDocument().append(view.getDocument());\n        });\n\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efNavigationViewOptions\n * @property {boolean} [horizontal = true]\n * @property {boolean} [fixed = false]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: efNotificationView.ts                                              +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efApplication from \"@app/app/efApplication\";\nimport elyControl from \"@controls/action/elyControl\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Опции: {@link efNotificationView}\n */\nexport interface efNotificationViewOptions extends elyViewOptions {\n\n    /**\n     * Заголовок оповещения\n     */\n    title?: string;\n\n    /**\n     * Сообщение\n     */\n    message?: string;\n\n    /**\n     * Содержимое оповещения\n     */\n    content?: string;\n\n    /**\n     * Время задержки до смерти оповещения (милисекунды)\n     * Если принимает значение false, оповещение бессмертно\n     */\n    delay?: number;\n\n    /** Ширина блока оповещения */\n    width?: number;\n\n    /** Время появляения блока оповещения (милисекунды) */\n    fadeTime?: number;\n\n    /** Время перемещения оповещений вверх/вниз */\n    moveTime?: number;\n\n    /** Отступ между оповещениями */\n    notificationsMargin?: number;\n\n    /*\n       ========= Кастомизация стиля =========\n     */\n\n    /** Цвет фона оповещения */\n    backgroundColor?: string;\n\n    /** Цвет отделителя подсказки */\n    sepColor?: string;\n\n    /** Цвет текста заголовка */\n    titleColor?: string;\n\n    /** Цвет текста сообщения */\n    messageColor?: string;\n\n    /** Цвет текста подсказки */\n    contentColor?: string;\n\n    /**\n     * Отступ оповщений от края экрана\n     */\n    marginFromScreenEdge?: number;\n\n    /**\n     * Положение на экране (вертикально/горизонтально)\n     * Символ \"/\" обязательно\n     *\n     * top/left\n     * top/right\n     * bottom/left\n     * bottom/right\n     */\n    displayPosition?: string;\n\n    /** Лимит оповещений на экране */\n    limit?: number;\n\n    /** Использование анимаций */\n    animation?: boolean;\n\n    /** Скорость анимации */\n    animateSpeed?: number;\n\n    /** Время, через которое анимация повторится */\n    animateDuration?: number;\n\n    /** Данные оповещений */\n    notificationsData?: efNotificationView[];\n\n    /**\n     * Флаг закрытия\n     */\n    closable?: boolean;\n}\n\n/**\n * Оповещения\n *\n * elyNotification (TypeScript)\n * version 0.1\n */\nexport class efNotificationView extends elyControl {\n\n    /**\n     * Стандартные параметры\n     */\n    public static defaults: efNotificationViewOptions = {\n        animateDuration: 60000,\n        animateSpeed: 700,\n        animation: false,\n        backgroundColor: \"#FFFFFF\",\n        closable: true,\n        contentColor: \"#595959\",\n        delay: 5000,\n        displayPosition: \"top/right\",\n        fadeTime: 500,\n        limit: 15,\n        marginFromScreenEdge: 0,\n        messageColor: \"#595959\",\n        moveTime: 500,\n        notificationsData: [],\n        notificationsMargin: 10,\n        sepColor: \"#EEEEEE\",\n        titleColor: \"#595959\",\n        width: 400,\n    };\n\n    /**\n     * Закрывает все уведомения, кроме последнего\n     */\n    public static closeAllNotificationsToLast() {\n        if (efNotificationView.defaults.notificationsData!.length > 0) {\n            for (let i = 0; i < efNotificationView.defaults.notificationsData!.length - 1; i++)\n                efNotificationView.defaults.notificationsData![i].dismiss();\n        }\n    }\n\n    /**\n     * Заголовок\n     */\n    public titleView: elyControl;\n\n    /**\n     * Содержимое сообщения\n     */\n    public messageView: elyControl;\n\n    /**\n     * Содержимое контента\n     */\n    public contentView: elyControl;\n\n    /**\n     * Кнопка закрытия\n     */\n    public closeButton: elyView;\n\n    /**\n     * Опции\n     */\n    public options: efNotificationViewOptions;\n\n    public notificationHeight: number = 0;\n\n    /**\n     * Флаг нотифицирования\n     */\n    private _isNotified: boolean = false;\n    private _isClosable: boolean = true;\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    constructor(props: efNotificationViewOptions = efNotificationView.defaults) {\n        super(props);\n        this.options = efNotificationView.defaults;\n        for (const index in props) this.options[index] = props[index];\n        const scsize = window.outerWidth;\n        if (this.options.width! > scsize) this.options.width = scsize - 20;\n        const absoluteWidth = (this.options.width!) - 37;\n\n        // this.identifier(\"notification_\" + Math.floor(Math.random() * (999999 - 1000 + 1) + 1000));\n        this.addClass(\"ely-notification-panel\");\n\n        this.css({\"background-color\": this.options.backgroundColor, \"width\": this.options.width});\n\n        const obj: { [name: string]: string } = {};\n        obj[this.getDisplayPositions()[0]] = 10 + \"px\";\n        obj[this.getDisplayPositions()[1]] = 10 + \"px\";\n        this.css(obj);\n\n        //\n        //  Close button\n        //\n        this.closeButton = new elyControl({tag: \"b\", class: \"ely-notification-close-button\"});\n        this.closeButton.css({color: this.options.titleColor});\n        this.closeButton.getDocument().innerHTML = \"&times;\";\n\n        //\n        //  Title\n        //\n        this.titleView = new elyControl({class: \"ely-notification-title-label\"});\n        this.titleView.css({width: absoluteWidth + \"px\", color: this.options.titleColor});\n        this.titleView.getDocument().innerHTML = this.options.title || \"\";\n\n        //\n        //  Message\n        //\n        this.messageView = new elyControl({class: \"ely-notification-message-label\"});\n        this.messageView.css({width: absoluteWidth + \"px\", color: this.options.messageColor});\n        this.messageView.getDocument().innerHTML = this.options.message || \"\";\n\n        this.contentView = new elyControl({class: \"ely-notification-content\"});\n        this.contentView.css({\n            \"border-top\": \"1px solid \" + this.options.sepColor,\n            \"color\": this.options.contentColor,\n            \"width\": this.options.width + \"px\",\n        });\n        if (this.options.content) this.contentView.addSubView(new elyTextView({text: this.options.content}));\n\n        this.hide();\n        this.closable(this.options.closable);\n    }\n\n    /**\n     * Возвращает позиции оповещения\n     */\n    public getDisplayPositions(): string[] {\n        return this.options.displayPosition!.split(\"/\");\n    }\n\n    /**\n     * Оторбражает оповещение\n     */\n    public present(): efNotificationView {\n        if (this._isNotified) return this;\n\n        //\n        // Set-up\n        //\n        if (this.closable()) this.addSubView(this.closeButton);\n        if (this.options.title || this.titleView.getDocument().innerHTML !== \"\") this.addSubView(this.titleView);\n        this.addSubView(this.messageView);\n        if (this.options.content || this.contentView.getDocument().innerHTML !== \"\") this.addSubView(this.contentView);\n\n        this._isNotified = true;\n\n        efApplication.default.getApplicationDocument().getBody().addSubView(this);\n\n        this.show();\n        this.notificationHeight = this.offSize().height;\n        this.hide();\n\n        const notifications = efNotificationView.defaults.notificationsData!;\n        const margin = efNotificationView.defaults.notificationsMargin! + this.notificationHeight;\n        const displayPositions = this.getDisplayPositions();\n\n        switch (displayPositions[0]) {\n            case \"bottom\":\n                this.css({bottom: \"+=\" + (this.options.marginFromScreenEdge || 0) + \"px\"});\n                break;\n            default:\n                this.css({top: \"+=\" + (this.options.marginFromScreenEdge || 0) + \"px\"});\n                break;\n        }\n\n        this.notificate(\"show\");\n\n        if (notifications.length > 0) { // In case if notifications are on the screen\n            switch (displayPositions[0]) { // Moves all notifications in true direction\n                case \"bottom\":\n                    for (const item of notifications) item.css({bottom: \"+=\" + margin + \"px\"});\n                    break;\n                default:\n                    for (const item of notifications) item.css({top: \"+=\" + margin + \"px\"});\n                    break;\n            }\n        }\n\n        notifications.push(this); // Adds notification to list\n\n        // In case if notifications is too much, clear all to last\n        if (notifications.length > efNotificationView.defaults.limit!)\n            efNotificationView.closeAllNotificationsToLast();\n\n        // Fading and moving the notification\n        if (notifications.length > 0)\n            setTimeout(() => {\n                this.fadeIn();\n            }, this.options.moveTime);\n        else this.fadeIn();\n\n        this.closeButton.addObserver(\"click\", () => {\n            this.dismiss();\n        });\n\n        if (this.isNotified() && this.closable()) setTimeout(() => {\n            this.dismiss();\n        }, this.options.fadeTime! + this.options.delay!);\n\n        return this;\n    }\n\n    /**\n     * Удаляет оповещение с экрана\n     *\n     * @param force - принудительное удаление объкта с экранаx\n     */\n    public dismiss(force: boolean = false) {\n        if (this.closable() || force) {\n            this.notificate(\"close\");\n            this._isNotified = false;\n\n            this.fadeOut();\n            const noties = efNotificationView.defaults.notificationsData!;\n            setTimeout(() => {\n                if (noties.length > 0)\n                    if (this.options.displayPosition!.split(\"/\")[0] === \"top\")\n                        for (let j = noties.indexOf(this); j >= 0; j--)\n                            noties[j].css({\n                                top: \"-=\" + (this.notificationHeight + this.options.notificationsMargin!) + \"px\",\n                            });\n                    else\n                        for (let j = noties.indexOf(this); j >= 0; j--)\n                            noties[j].css({\n                                bottom: \"-=\" + (this.notificationHeight + this.options.notificationsMargin!) + \"px\",\n                            });\n                const cache = [];\n                for (const item of noties)\n                    if (item !== this) cache.push(item);\n                efNotificationView.defaults.notificationsData = cache;\n                try {\n                    this.getDocument().parentNode!.removeChild(this.getDocument());\n                } catch (e) {\n                    // Nothing is done\n                }\n            }, this.options.fadeTime);\n        }\n    }\n\n    /**\n     * Состояние закрывающегося оповещения\n     * @param value\n     */\n    public closable(value?: boolean): boolean | any {\n        if (value === undefined) {\n            return this._isClosable;\n        }\n        this._isClosable = value;\n        return this;\n    }\n\n    /**\n     * Возвращает состояние оповещения\n     */\n    public isNotified(): boolean {\n        return this._isNotified;\n    }\n\n    protected hide() {\n        this.hidden(true);\n    }\n\n    protected show() {\n        this.hidden(false);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efSize.ts                                                            +\n + Файл изменен: 28.12.2018 01:18:31                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Прослушиываемый размер\n */\nexport default class efSize extends elyObservable {\n\n    /**\n     * Возвращает нулевой размер\n     * @return {efSize}\n     */\n    public static zero(): efSize {\n        return new efSize({width: 0, height: 0});\n    }\n\n    /**\n     * Свойство: ширина\n     */\n    public readonly widthProperty: elyObservableProperty<number> = new elyObservableProperty<number>(0);\n\n    /**\n     * Свойство: высота\n     */\n    public readonly heightProperty: elyObservableProperty<number> = new elyObservableProperty<number>(0);\n\n    /**\n     * Конструктор\n     * @param {{width: number, height: number}} props\n     */\n    public constructor(props: { width?: number, height?: number, d?: number } = {width: 0, height: 0}) {\n        super();\n        if (props.d !== undefined) {\n            this.width(props.d || 0);\n            this.height(props.d || 0);\n        } else {\n            this.width(props.width || 0);\n            this.height(props.height || 0);\n        }\n\n        this.widthProperty.change(value => this.notificate(\"changed\", [\"width\", value, this.height()]));\n        this.heightProperty.change(value => this.notificate(\"changed\", [\"height\", this.width(), value]));\n    }\n\n    /**\n     * Возвращает ширина\n     * @returns {number}\n     */\n    public width(): number;\n\n    /**\n     * Устанавливает ширина\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public width(value: number): efSize;\n\n    /**\n     * Возвращает и устанавливает ширина\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public width(value?: number): number | null | efSize {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.widthProperty);\n    }\n\n    /**\n     * Возвращает высота\n     * @returns {number}\n     */\n    public height(): number;\n\n    /**\n     * Устанавливает высота\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public height(value: number): efSize;\n\n    /**\n     * Возвращает и устанавливает высота\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public height(value?: number): number | null | efSize {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.heightProperty);\n    }\n\n    /**\n     * Пропорционально изменяет размер\n     * @param s\n     */\n    public scale(s: number): efSize;\n\n    /**\n     * Изменяет размер\n     *\n     * @param {number} sW   - ширина или общее значение\n     * @param {number} [sH] - высота\n     * @return {this}\n     */\n    public scale(sW: number, sH?: number): efSize {\n        if (sH === undefined) {\n            this.width(this.width() * sW);\n            this.height(this.height() * sW);\n        } else {\n            this.width(this.width() * sW);\n            this.height(this.height() * (sH || 0));\n        }\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: изменение размера\n     *\n     * Имя обсервера: changed\n     *\n     * @param o - наблюдатель\n     */\n    public addChangeObserver(o: (name: string, width: number, height: number) => void): efSize {\n        this.addObserver(\"changed\", o);\n        return this;\n    }\n\n    /**\n     * Преобразует объект в строку\n     * @return {string}\n     */\n    public toString(): string {\n        return `efSize{w: ${this.width()}, h: ${this.height()}}`;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyDeviceDetector.ts                                                 +\n + Файл изменен: 31.01.2019 00:49:47                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservable from \"@core/observable/elyObservable\";\nimport efSize from \"@cnv/objs/efSize\";\n\n/**\n * Детектор устройств и системы\n */\nexport default class elyDeviceDetector extends elyObservable {\n\n    /**\n     * Стандартный детектор\n     */\n    public static default: elyDeviceDetector = new elyDeviceDetector();\n\n    /**\n     * Имена операционных систем\n     * @protected\n     * @ignore\n     */\n    protected static __osNames = [\n        {name: \"Windows Phone\", value: \"Windows Phone\", version: \"OS\"},\n        {name: \"Windows\", value: \"Win\", version: \"NT\"},\n        {name: \"iPhone\", value: \"iPhone\", version: \"OS\"},\n        {name: \"iPad\", value: \"iPad\", version: \"OS\"},\n        {name: \"iPod\", value: \"iPod\", version: \"OS\"},\n        {name: \"Kindle\", value: \"Silk\", version: \"Silk\"},\n        {name: \"Android\", value: \"Android\", version: \"Android\"},\n        {name: \"PlayBook\", value: \"PlayBook\", version: \"OS\"},\n        {name: \"BlackBerry\", value: \"BlackBerry\", version: \"/\"},\n        {name: \"MacOS\", value: \"Mac\", version: \"OS X\"},\n        {name: \"Linux\", value: \"Linux\", version: \"rv\"},\n        {name: \"Palm\", value: \"Palm\", version: \"PalmOS\"},\n    ];\n\n    /**\n     * Браузеры\n     * @protected\n     * @ignore\n     */\n    protected static __browsers = [\n        {name: \"Chrome\", value: \"Chrome\", version: \"Chrome\"},\n        {name: \"Firefox\", value: \"Firefox\", version: \"Firefox\"},\n        {name: \"Safari\", value: \"Safari\", version: \"Version\"},\n        {name: \"Internet Explorer\", value: \"MSIE\", version: \"MSIE\"},\n        {name: \"Opera\", value: \"Opera\", version: \"Opera\"},\n        {name: \"BlackBerry\", value: \"CLDC\", version: \"CLDC\"},\n        {name: \"Mozilla\", value: \"Mozilla\", version: \"Mozilla\"},\n    ];\n\n    /**\n     * Заголовки\n     * @protected\n     * @ignore\n     */\n    protected static __headers = [\n        navigator.platform,\n        navigator.userAgent,\n        navigator.appVersion,\n        navigator.vendor,\n    ];\n\n    /**\n     * Данные\n     * @ignore\n     * @protected\n     */\n    protected __data: { [key: string]: any } = {\n        browser: null,\n        os: null,\n    };\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super();\n    }\n\n    /**\n     * Добавляет наблюдатель: распознавание закончено\n     *\n     * Имя обсервера: detected\n     *\n     * @param o - наблюдатель\n     */\n    public addDetectedObserver(o: () => void): elyDeviceDetector {\n        this.addObserver(\"detected\", o);\n        return this;\n    }\n\n    /**\n     * Выполняет детектинг\n     */\n    public detect(): void {\n        for (const os of elyDeviceDetector.__osNames)\n            if (navigator.userAgent.indexOf(os.value) > -1) {\n                this.__data.os = os.name;\n                break;\n            }\n        for (const browser of elyDeviceDetector.__browsers)\n            if (navigator.userAgent.indexOf(browser.value) > -1) {\n                this.__data.browser = browser.name;\n                break;\n            }\n        this.notificate(\"detected\");\n    }\n\n    /**\n     * Возвращает имя системы\n     * @return {string}\n     */\n    public getOSName(): string {\n        return this.__data.os || \"Undetected\";\n    }\n\n    /**\n     * Возвращает имя браузера\n     * @return {string}\n     */\n    public getBrowserName(): string {\n        return this.__data.browser || \"Undefined\";\n    }\n\n    /**\n     * Возвращает true, если приложение запущено отдельным приложением**\n     * @return {boolean}\n     */\n    public isStandalone(): boolean {\n        // @ts-ignore\n        return window.navigator.standalone || false;\n    }\n\n    /**\n     * Возвращает true, если система iOS\n     * @return {boolean}\n     */\n    public isIOS(): boolean {\n        return /iPad|iPhone|iPod/.test(this.__data.os);\n    }\n\n    /**\n     * Возвращает соотнощение сторон\n     * @return {number}\n     */\n    public getRatio(): number {\n        return window.devicePixelRatio || 1;\n    }\n\n    /**\n     * Возвращает реальный размер жкрана\n     * @return {efSize}\n     */\n    public getScreenSize(): efSize {\n        return new efSize({\n            height: window.screen.height * this.getRatio(),\n            width: window.screen.width * this.getRatio(),\n        });\n    }\n\n    /**\n     * Возвращает true, если устройство - iPhone X\n     * @return {boolean}\n     */\n    public isIPhoneX(): boolean {\n        const size = this.getScreenSize();\n        return this.isIOS() && size.width() === 1125 && size.height() === 2436;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: efApplication.ts                                           +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efAppColorManager from \"@app/app/efAppColorManager\";\nimport {efAppPreloaderView} from \"@app/app/efAppPreloaderView\";\nimport elyFooterView from \"@app/app/view/elyFooterView\";\nimport efAppConfig from \"@app/config/efAppConfig\";\nimport {efAppDevelopConsole} from \"@app/develop/efAppDevelopConsole\";\nimport efAppDocument from \"@app/document/efAppDocument\";\nimport elyScreenController from \"@controllers/elyScreenController\";\nimport elyControl from \"@controls/action/elyControl\";\nimport elyStylesheet from \"@controls/elyStylesheet\";\nimport {efNavigationView} from \"@controls/navigation/efNavigationView\";\nimport {efNotificationView} from \"@controls/notification/efNotificationView\";\nimport {efPreloaderView} from \"@controls/view/efPreloaderView\";\nimport elyDeviceDetector from \"@core/elyDeviceDetector\";\nimport elyOneActionEval from \"@core/elyOneActionEval\";\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyXLogger from \"@core/utils/elyXLogger\";\n\n/**\n * Наблюдатель за завершением загрузки приложения\n * @callback elyApplicationReadyObserver\n * @param next - функиця продолжения\n *\n * В обработчик передается один аргумент next, который обязательно должен быть вызван.\n * В случае необходимости выброса исключения, в него может быть передано значение false.\n *\n *\n *     ely.app.ready( (next) => {\n *\n *         let appTest = true; // Тестирование приложения\n *         next(appTest);\n *\n *     });\n *\n *\n *\n * Обработчик принимает на вход один или два параметра:\n *\n * - `next(true);`\n * - `next(false);`\n * - `next(false, reason: string?);`\n *\n * Параметр reason является отображением сообщения ошибки для пользователя.\n */\n\ntype elyApplicationReadyObserver = (next: elyApplicationNextCompletion) => void;\n\n/**\n * Обработчик завершения подготовки приложения\n */\ntype elyApplicationNextCompletion = (result: boolean, reason?: string) => void;\n\n/**\n * Приложение\n */\nexport default class efApplication extends elyObservable {\n\n    /**\n     * Паттерн синглтон\n     */\n    public static default: efApplication = new efApplication();\n\n    /**\n     * Возвращает стандартный объект приложения\n     * @param closure\n     */\n    public static loadApplication(closure: () => void): void {\n        elyXLogger.default.log(\"Загрузка приложения...\");\n        efAppConfig.default.addLoadedObserver((result, cfg) => {\n            console.log(cfg);\n            if (!result) elyXLogger.default.error(\"Файл конфигурации не найден. \" +\n                \"Будет использована стандратная конфигурация.\");\n            else elyXLogger.default.log(\"Файл конфигурации успешно загружен.\");\n\n            // Распознание текущего устройства\n            elyDeviceDetector.default.addDetectedObserver(() => efApplication.default.init(cfg));\n            elyDeviceDetector.default.detect();\n        });\n        efAppConfig.default.load({file: efAppConfig.appConfigPath});\n    }\n\n    /**\n     * Менеджер цветов\n     */\n    public readonly applicationColorManager: efAppColorManager;\n\n    /**\n     * Строитель макета\n     */\n    public readonly wrapperView: elyControl;\n\n    /**\n     * Контейнер\n     */\n    public readonly containerView: elyControl;\n\n    /**\n     * Контейнер\n     */\n    public readonly footerView: elyFooterView;\n\n    /**\n     * Панель навигации\n     * @protected\n     * @ignore\n     */\n    protected readonly __applicationNavigationView: efNavigationView\n        = new efNavigationView({horizontal: true, fixed: true});\n\n    /**\n     * Документ\n     * @protected\n     * @ignore\n     */\n    protected readonly __applicationDocument: efAppDocument = new efAppDocument();\n\n    /**\n     * Экран загрузки\n     * @protected\n     * @ignore\n     */\n    protected readonly __applicationLoaderView: efPreloaderView;\n\n    /**\n     * Конфигурация\n     * @protected\n     * @ignore\n     */\n    protected __applicationConfig: efAppConfig | undefined;\n\n    /**\n     * Количество сигналов зугрузчиков\n     */\n    protected readySignalsShouldBeReceived: number;\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super();\n        this.__applicationLoaderView = new efAppPreloaderView();\n        this.applicationColorManager = new efAppColorManager({app: this});\n        this.readySignalsShouldBeReceived = 0;\n\n        this.containerView = new elyControl({class: \"ef--container\"});\n        this.wrapperView = new elyControl({class: \"ef--wrapper\"});\n        this.footerView = new elyFooterView();\n\n        this.getApplicationDocument().getBody().addSubView(this.wrapperView);\n        this.containerView.css({margin: \"0 auto\"});\n        this.containerView.css({width: \"100%\"});\n        this.wrapperView.addSubView(this.containerView);\n\n        this.containerView.addSubView(elyScreenController.default.view);\n\n    }\n\n    /**\n     * Возвращает конфигурацию приложения\n     */\n    public getApplicationConfig(): efAppConfig | undefined {\n        return this.__applicationConfig;\n    }\n\n    /**\n     * Добавляет слушатель окончания загрузки приложения\n     * @param observer\n     */\n    public addReadyObserver(observer: elyApplicationReadyObserver): efApplication {\n        this.readySignalsShouldBeReceived++;\n        this.addObserver(\"ready\", observer);\n        return this;\n    }\n\n    /**\n     * Возвращает элемент отображения экрана загрузки приложения\n     * @return {efPreloaderView}\n     */\n    public getApplicationLoaderView(): efPreloaderView {\n        return this.__applicationLoaderView;\n    }\n\n    /**\n     * Возвращает документ приложения\n     * @return {efAppDocument}\n     */\n    public getApplicationDocument(): efAppDocument {\n        return this.__applicationDocument;\n    }\n\n    /**\n     * Возвращает панель навигации\n     * @return {efNavigationView}\n     */\n    public getApplicationNavigationView(): efNavigationView {\n        return this.__applicationNavigationView;\n    }\n\n    /**\n     * Инициилизирует приложение\n     * @param {efAppConfig} config\n     */\n    protected init(config: efAppConfig) {\n        this.__applicationConfig = config;\n        this.applyConfiguration(config);\n\n        this.notificate(\"ready\", [(flag: boolean, message?: string) => {\n            elyXLogger.default.log(`---> Запуск загрузчика ${this.readySignalsShouldBeReceived}`);\n            elyXLogger.default.log(`[~~] Загрузчик передал флаг ${flag ? \"true\" : \"false\"} (${message})`);\n            if (!flag) {\n                this.getApplicationLoaderView().getIconView()\n                    .iconName(\"times\")\n                    .spinning(false);\n                this.getApplicationLoaderView().title(message || \"Загрузка была остановлена...\");\n                throw Error(\"Остановка приложения...\");\n                return;\n            }\n            this.readySignalsShouldBeReceived--;\n            elyXLogger.default.log(\"[OK] Загрузчик обработан. Осталось: \" + this.readySignalsShouldBeReceived);\n            if (this.readySignalsShouldBeReceived === 0) {\n                if (this.getApplicationConfig()!.manifest.useContentController) {\n                    __applyElyOneActions(this);\n                }\n                elyScreenController.default.present(\"index\");\n                this.getApplicationLoaderView().hidden(true);\n            }\n        }]);\n    }\n\n    /**\n     * Применяет конфигурацию\n     * @param config\n     */\n    protected applyConfiguration(config: efAppConfig) {\n        elyXLogger.default.log(\"~~~> Применение конфигурации\");\n\n        //\n        // App\n        //\n        this.getApplicationDocument().getHead().title(config.getAppTitle());\n\n        //\n        // Manifest\n        //\n\n        //\n        //  Template\n        //\n        this.containerView.getStyle().maxWidth = typeof config.template.maxContainerWidth === \"number\" ?\n            config.template.maxContainerWidth + \"px\" : config.template.maxContainerWidth;\n        this.applicationColorManager.applyApplicationColor(config.getAppColor());\n        this.footerView.titleView.text(config.template.footer.title);\n        this.footerView.subtitleView.text(config.template.footer.subtitle);\n\n        //\n        //  Navigation config\n        //\n        if (config.isNavigationBarUsed()) {\n            this.wrapperView.addClass(\"--with-fixed-nav\");\n            this.__applicationDocument.getBody().addSubView(this.getApplicationNavigationView());\n            this.getApplicationNavigationView().getTitleView().text(config.navigationBar.title);\n            if (config.manifest.useContentController)\n                this.getApplicationNavigationView().getTitleView().addObserver(\"click\", () => {\n                    elyScreenController.default.present(config.contentController.defaultContentId);\n                });\n            config.navigationBar.items.forEach(value => {\n                value.item = value.item || \"efLinkTextView\";\n                this.getApplicationNavigationView().addView(elyControl.fromObject(value));\n            });\n            // if (config.navigationBar.imageUrl) {\n            //     this.navigationView.navigationBarImage(config.navigationBar.imageUrl);\n            //     if (config.manifest.useContentController)\n            //         this.navigationView.imageView.addObserver(\"click\", () => {\n            //             elyScreenController.default.present(config.contentController.defaultContentId);\n            //         });\n            // }\n            this.applicationColorManager.applyNavigationBarColor(config.getNavigationBarColor());\n        }\n\n        //\n        // Meta\n        //\n        if (config.manifest.useMeta) {\n            const head = this.getApplicationDocument().getHead();\n            head.setCharset(config.meta.charset)\n                .addMetaValue({\n                    content: config.app.title,\n                    name: \"apple-mobile-web-app-title\",\n                })\n                .addMetaValue({\n                    content: config.meta.appleMobile.statusBarStyle,\n                    name: \"apple-mobile-web-app-status-bar-style\",\n                })\n                .addMetaValue({\n                    content: config.manifest.allowStandaloneMode ? \"yes\" : \"no\",\n                    name: \"apple-mobile-web-app-capable\",\n                }).addMetaValue({\n                content: config.getNavigationBarColorString(),\n                name: \"theme-color\",\n            });\n        }\n        if (config.manifest.useViewPort) this.getApplicationDocument().getHead().addViewPort(config.meta.viewport);\n        if (config.manifest.useApplicationIcon) {\n            this.getApplicationDocument().getHead()\n                .addLink({\n                    href: config.meta.iconPath + \"/apple-touch-icon.png\",\n                    rel: \"apple-touch-icon\",\n                    sizes: \"180x180\",\n                }).addLink({\n                href: config.meta.iconPath + \"/favicon-32x32.png\",\n                rel: \"icon\",\n                sizes: \"32x32\",\n                type: \"image/png\",\n            }).addLink({\n                href: config.meta.iconPath + \"/favicon-16x16.png\",\n                rel: \"icon\",\n                sizes: \"16x16\",\n                type: \"image/png\",\n            }).addLink({\n                href: config.meta.iconPath + \"/favicon.ico\",\n                rel: \"shortcut icon\",\n            }).addLink({\n                color: config.getNavigationBarColorString(),\n                href: config.meta.iconPath + \"/safari-pinned-tab.svg\",\n                rel: \"mask-icon\",\n            });\n        }\n        if (config.manifest.allowStandaloneMode && config.manifest.useIPhoneXStandaloneFix) {\n            if (elyDeviceDetector.default.isIPhoneX() && elyDeviceDetector.default.isStandalone()) {\n                elyStylesheet.global.addClass(\"ef-wrp\", {paddingTop: \"40px\"});\n                this.__applicationDocument.getBody().getStyle().minHeight =\n                    elyDeviceDetector.default.getScreenSize().height() + \"px\";\n                efNotificationView.defaults.marginFromScreenEdge = 40;\n                if (config.manifest.useNavigationBar)\n                    efApplication.default.getApplicationNavigationView().css({\"padding-top\": \"40px\"});\n            }\n        }\n\n        if (config.manifest.useDevelopMode) {\n            efAppDevelopConsole.shared.hidden(true);\n            this.__applicationDocument.getBody().getDocument().append(efAppDevelopConsole.shared.getDocument());\n            window.onkeyup = ev => {\n                if (ev.key === \"~\") efAppDevelopConsole.shared.hidden(!efAppDevelopConsole.shared.hidden());\n            };\n        }\n    }\n}\n\nfunction __applyElyOneActions(app: efApplication) {\n    elyOneActionEval.default.actionsRules.content = (arg) => {\n        switch (arg) {\n            case \"back\":\n                // cc.back();\n                break;\n            case \"*index\":\n                elyScreenController.default.present(\"index\");\n                break;\n            default:\n                elyScreenController.default.present(arg);\n        }\n    };\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyIconView.ts                                                       +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elySize from \"@enums/elySize\";\nimport elyWeight from \"@enums/elyWeight\";\n\n/**\n * Элемент отображения: Иконка\n * @version 1.0\n * @class elyIconView\n */\n@designable(\"iconName\", elyDesignableFieldState.GETSET, \"string\")\n@designable(\"iconSpinning\", elyDesignableFieldState.SET, \"boolean\")\n@designable(\"iconWeight\", elyDesignableFieldState.SET, \"string|number\", elyWeight.rawList())\n@designable(\"iconSize\", elyDesignableFieldState.SET, \"string|number\", elySize.rawList())\nexport default class elyIconView extends elyView {\n\n    /**\n     * Свойство: имя иконки\n     * @ignore\n     */\n    protected readonly iconNameProperty: elyObservableProperty<string>;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    constructor(options: { iconName?: string, iconSize?: number | string, iconSpinning?: boolean }\n        & elyViewOptions = {}) {\n        super({tag: \"span\", ...options});\n        this.addClass(\"fa\");\n\n        this.iconNameProperty = new elyObservableProperty<string>();\n        this.iconNameProperty.change((newValue, oldValue) => {\n            if (oldValue) this.removeClass(`fa-${oldValue}`);\n            this.addClass(`fa-${newValue}`);\n        });\n\n        if (options.iconName) this.iconName(options.iconName);\n        if (options.iconSize) this.iconSize(options.iconSize);\n        if (options.iconSpinning) this.iconSpinning(options.iconSpinning);\n    }\n\n    /**\n     * Возвращает имя иконки\n     */\n    public iconName(): string;\n\n    /**\n     * Устанавливает имя иконки\n     * @param name\n     */\n    public iconName(name: string): elyIconView;\n\n    /**\n     * Устанавливает или возвращает имя иконки\n     * @param name\n     */\n    public iconName(name?: string): string | elyIconView {\n        return elyObservableProperty.simplePropertyAccess(this, name, this.iconNameProperty);\n    }\n\n    /**\n     * Устанавливает размер иконки\n     * @param size\n     *\n     * Используемые константы: {@link elySize}\n     */\n    public iconSize(size: elySize | string | number): elyIconView {\n        if (typeof size === \"number\") size = `${size}px`;\n        if (size instanceof elySize) size = `${size.value}px`;\n        return this.css({\"font-size\": size}) as elyIconView;\n    }\n\n    /**\n     * Устанавливает толщину иконки\n     * @param weight\n     *\n     * Используемые константы: {@link elyWeight}\n     */\n    public iconWeight(weight: elyWeight | number): elyIconView {\n        return this.css({\"font-weight\": weight.toString()}) as elyIconView;\n    }\n\n    /**\n     * Вращение иконки\n     * @param bool\n     */\n    public iconSpinning(bool: boolean = true): elyIconView {\n        if (bool) this.addClass(\"fa-spin\");\n        else this.removeClass(\"fa-spin\");\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elyFileWatcher.ts                                                    +\n + Файл изменен: 23.11.2018 23:19:03                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyIconView from \"@controls/text/elyIconView\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyObservable from \"@core/observable/elyObservable\";\n\n/**\n * Отслеживание изменения файла\n */\nexport default class elyFileWatcher extends elyObservable {\n\n    /**\n     * Путь до файла\n     */\n    public filePath: string;\n\n    /**\n     * Последний размер файла\n     */\n    public lastFileSize: number = -1;\n\n    /**\n     * Стартовое значение на первой итерации\n     */\n    public startValue: number | null = null;\n\n    /**\n     * Поток\n     */\n    protected thread: any | null = null;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    constructor(options: { filePath: string }) {\n        super();\n        this.filePath = options.filePath;\n\n        const view = new elyControl();\n        view.getStyle().backgroundColor = \"rgb(110, 136, 73)\";\n        view.getStyle().textAlign = \"center\";\n        view.getStyle().position = \"fixed\";\n        view.getStyle().bottom = \"0\";\n        view.getStyle().left = \"0\";\n        view.getStyle().right = \"0\";\n        view.getStyle().zIndex = \"1000\";\n        view.getStyle().padding = \"15px\";\n        const iconView = new elyIconView({iconName: \"refresh\"});\n        iconView.iconSpinning(true);\n        iconView.getStyle().marginLeft = \"15px\";\n        const textView = new elyTextView({text: \"Develop file watching\"});\n        textView.getStyle().display = \"inline-block\";\n        view.addSubView(textView);\n        view.addSubView(iconView);\n        document.body.append(view.getDocument());\n        this.addListener((size) => {\n            textView.text(`Develop file watching. Size: *${size}* bytes`);\n        });\n    }\n\n    /**\n     * Добавляет слушатель изменения файла\n     * @param observer\n     */\n    public addListener(observer: (size: number) => void): elyFileWatcher {\n        this.addObserver(\"changed\", observer);\n        return this;\n    }\n\n    /**\n     * Добавляет слушатель изменения файла по отношению к первоначальной стадии\n     * @param observer\n     */\n    public addUpdateListener(observer: (size: number) => void): elyFileWatcher {\n        this.addObserver(\"updated\", observer);\n        return this;\n    }\n\n    /**\n     * Запускает систему прослушивания\n     */\n    public start(): elyFileWatcher {\n        this.thread = setInterval(() => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", this.filePath, true);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === xhr.DONE) {\n                    const size = Math.round(parseInt(xhr.getResponseHeader(\"Content-Length\") || \"0\", 10)\n                        / (1024) * 100) / 100;\n                    if (this.lastFileSize === -1) this.lastFileSize = size;\n                    if (size !== this.lastFileSize) this.notificate(\"changed\", [size]);\n                    this.lastFileSize = size;\n                    if (this.startValue === null) this.startValue = size;\n                    if (this.startValue !== size) this.notificate(\"updated\", [size]);\n                }\n            };\n            xhr.send();\n        }, 1000);\n        return this;\n    }\n\n    public stop(): elyFileWatcher {\n        if (this.thread) clearInterval(this.thread);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efCanvas.ts                                                          +\n + Файл изменен: 28.12.2018 01:10:10                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efCanvasLayer from \"@cnv/efCanvasLayer\";\nimport efSize from \"@cnv/objs/efSize\";\nimport elyView from \"@core/controls/elyView\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\n\n/**\n * Холст\n */\nexport default class efCanvas extends elyView {\n\n    /**\n     * Размер холста\n     */\n    public readonly size: efSize = new efSize();\n\n    /**\n     * Слои\n     */\n    public readonly layers: elyObservableArray<efCanvasLayer> = new elyObservableArray<efCanvasLayer>();\n\n    /**\n     * Конструктор\n     * @param {{size: efSize, layers?: efCanvasLayer[]}} props\n     */\n    public constructor(props: { size: efSize, layers?: efCanvasLayer[] }) {\n        super();\n        this.addClass(\"ef-cnv\");\n\n        this.size.heightProperty.change(value =>\n            this.forEachLayer(layer => {\n                layer.getDocument().height = value;\n                layer.getStyle().height = value + \"px\";\n                layer.size.height(value);\n            }));\n\n        this.size.widthProperty.change(value =>\n            this.forEachLayer(layer => {\n                layer.getDocument().width = value;\n                layer.getStyle().width = value + \"px\";\n                layer.size.width(value);\n            }));\n\n        this.size.width(props.size.width());\n        this.size.height(props.size.height());\n\n        this.layers.change(() => {\n            this.removeViewContent();\n            this.layers.get().forEach((layer, i) => {\n                this.getDocument().append(layer.getDocument());\n                layer.getStyle().zIndex = String(i + 1);\n            });\n\n            this.size.width(this.size.width());\n            this.size.height(this.size.height());\n        });\n    }\n\n    /**\n     * Цикл по слоям\n     * @param cb\n     */\n    public forEachLayer(cb: (layer: efCanvasLayer, index: number) => void): efCanvas {\n        this.layers.get().forEach((value, index) => {\n            cb(value, index);\n        });\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efContextElement.ts                                                  +\n + Файл изменен: 04.01.2019 21:55:41                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport ef2DRect from \"@math/ef2DRect\";\n\n/**\n * Элемент контекста `ef.cnv`\n */\nexport default class efContextElement {\n\n    /**\n     * Угол поворота\n     */\n    public angle?: number;\n\n    /**\n     * Прямоугольник\n     */\n    public rect: ef2DRect;\n\n    /**\n     * Фильтр\n     */\n    public filter?: string;\n\n    /**\n     * Конструктор\n     * @param {{ rect: ef2DRect, angle?: number, filter?: string }} props - параметры\n     */\n    public constructor(props: { rect: ef2DRect, angle?: number, filter?: string }) {\n        this.rect = props.rect;\n        this.angle = props.angle || undefined;\n        this.filter = props.filter || undefined;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efContextImage.ts                                                    +\n + Файл изменен: 04.01.2019 22:07:06                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efContextElement from \"@cnv/context/efContextElement\";\nimport ef2DRect from \"@math/ef2DRect\";\n\n/**\n * Изображение `ef.cnv`\n */\nexport default class efContextImage extends efContextElement {\n\n    /**\n     * Изображение\n     */\n    public image: CanvasImageSource;\n\n    /**\n     * Картинка в картинке\n     * @type {ef2DRect}\n     */\n    public subImage?: ef2DRect;\n\n    /**\n     * Конструктор\n     * @param {{ rect: ef2DRect, image: CanvasImageSource, subImage?:\n     * ef2DRect, angle?: number, filter?: string}} props - параметры\n     */\n    public constructor(props: {\n        rect: ef2DRect,\n        image: CanvasImageSource,\n        angle?: number,\n        filter?: string,\n        subImage?: ef2DRect,\n    }) {\n        super(props);\n        this.image = props.image;\n        this.subImage = props.subImage || undefined;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efContextRect.ts                                                     +\n + Файл изменен: 04.01.2019 21:53:18                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efContextElement from \"@cnv/context/efContextElement\";\nimport elyColor from \"@core/elyColor\";\nimport ef2DRect from \"@math/ef2DRect\";\n\n/**\n * Прямоугольник `ef.cnv`\n */\nexport default class efContextRect extends efContextElement {\n\n    /**\n     * Цвет заливки\n     * @type {elyColor?}\n     */\n    public fillColor?: elyColor;\n\n    /**\n     * Цвет заливки обводки\n     * @type {elyColor?}\n     */\n    public strokeColor?: elyColor;\n\n    /**\n     * Толщина линии обводки\n     * @type {number}\n     */\n    public strokeWidth: number = 1;\n\n    /**\n     * Конструктор\n     * @param {{rect: ef2DRect, fillColor?: elyColor,\n     * strokeColor?: elyColor, strokeWidth?: number, angle?: number}} props - параметры\n     */\n    public constructor(props: {\n        rect: ef2DRect,\n        fillColor?: elyColor,\n        strokeColor?: elyColor,\n        strokeWidth?: number,\n        angle?: number,\n    }) {\n        super(props);\n        this.strokeColor = props.strokeColor || undefined;\n        this.fillColor = props.fillColor || undefined;\n        this.strokeWidth = props.strokeWidth === undefined ? 1 : props.strokeWidth;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyAxis                                                              +\n + Файл изменен: 28.12.2018 01:03:22                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Перечисление направлений в измерении\n */\nexport default class elyAxis {\n    /**\n     * Направление X\n     */\n    public static readonly x = \"x\";\n\n    /**\n     * Направление Y\n     */\n    public static readonly y = \"y\";\n\n    /**\n     * Направление Z\n     */\n    public static readonly z = \"z\";\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: ef2DVector.ts                                                        +\n + Файл изменен: 06.01.2019 05:03:43                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservable from \"@core/observable/elyObservable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyAxis from \"@enums/elyAxis\";\nimport ef2DVectorValues from \"@math/ef2DVectorValues\";\n\n/**\n * Прослушиваемый вектор.\n *\n * Используйте метод {@link ef2DVector::addChangeObserver} для прослушивания изменений вектора.\n * @class ef2DVector\n * @augments {elyObservable}\n */\nexport default class ef2DVector extends elyObservable {\n\n    /**\n     * Нулевой вектор\n     * @return {ef2DVector}\n     */\n    public static zero(): ef2DVector {\n        return new ef2DVector();\n    }\n\n    /**\n     * Свойство: ось x\n     */\n    public readonly xProperty: elyObservableProperty<number> = new elyObservableProperty<number>(0);\n    /**\n     * Свойство: ось y\n     */\n    public readonly yProperty: elyObservableProperty<number> = new elyObservableProperty<number>(0);\n\n    /**\n     * Конструктор\n     * @param props\n     */\n    public constructor(props: { x?: number, y?: number, values?: ef2DVectorValues } = {x: 0, y: 0}) {\n        super();\n        if (props.values) {\n            this.x(props.values.x);\n            this.y(props.values.y);\n        } else {\n            this.x(props.x || 0);\n            this.y(props.y || 0);\n        }\n        this.xProperty.change(value =>\n            this.notificate(\"changed\", [elyAxis.x, value, this.y()]));\n        this.yProperty.change(value =>\n            this.notificate(\"changed\", [elyAxis.y, this.x(), value]));\n    }\n\n    /**\n     * Возвращает ось x\n     * @returns {number}\n     */\n    public x(): number;\n\n    /**\n     * Устанавливает ось x\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public x(value: number): ef2DVector;\n\n    /**\n     * Возвращает и устанавливает ось x\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public x(value?: number): number | null | ef2DVector {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.xProperty);\n    }\n\n    /**\n     * Возвращает ось y\n     * @returns {number}\n     */\n    public y(): number;\n\n    /**\n     * Устанавливает ось y\n     * @param {number} value - значение\n     * @returns {this}\n     */\n    public y(value: number): ef2DVector;\n\n    /**\n     * Возвращает и устанавливает ось y\n     * @param {number} [value] - значение\n     * @returns {number|this|null}\n     */\n    public y(value?: number): number | null | ef2DVector {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.yProperty);\n    }\n\n    /**\n     * Добавляет наблюдатель: изменение координат\n     *\n     * Имя обсервера: changed\n     *\n     * @param o - наблюдатель\n     *\n     *\n     *     vc.addChangeObserver( (dir, nX, nY) => {\n     *        if( dir === elyAxis.x){\n     *          // Изменился X\n     *        } else {\n     *          // Изменился Y\n     *        }\n     *     });\n     *\n     *\n     */\n    public addChangeObserver(o: (dir: string, nX: number, nY: number) => void): ef2DVector {\n        this.addObserver(\"changed\", o);\n        return this;\n    }\n\n    /**\n     * Преобразует объект в строку\n     * @return {string}\n     */\n    public toString(): string {\n        return `ef2DVector{x: ${this.x()}, y: ${this.y()}}`;\n    }\n\n    /**\n     * Возвращает true, если векторы идентичны\n     * @param vector\n     */\n    public equals(vector: ef2DVector): boolean {\n        return this.x() === vector.x() && this.y() === vector.y();\n    }\n\n    /**\n     * Возвращает константные значения вектора\n     */\n    public getValues(): ef2DVectorValues {\n        return new ef2DVectorValues({point: this});\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: ef2DVectorValues.ts                                                  +\n + Файл изменен: 04.01.2019 22:39:06                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport ef2DVector from \"@math/ef2DVector\";\n\n/**\n * Векторные константные значения\n * @class ef2DVectorValues\n */\nexport default class ef2DVectorValues {\n\n    /**\n     * Создает и возвращает нулевой вектор\n     * @return {ef2DVectorValues}\n     */\n    public static zero(): ef2DVectorValues {\n        return new ef2DVectorValues({x: 0, y: 0});\n    }\n\n    /**\n     * Значение по оси X\n     * @readonly\n     * @type {number}\n     */\n    public readonly x: number;\n\n    /**\n     * Значение по оси Y\n     * @readonly\n     * @type {number}\n     */\n    public readonly y: number;\n\n    /**\n     * Конструктор\n     * @param {{ point?: ef2DVector, x?: number, y?: number }} props - параметры\n     */\n    public constructor(props: { point?: ef2DVector, x?: number, y?: number }) {\n        if (props.point) {\n            this.x = props.point.x();\n            this.y = props.point.y();\n        } else {\n            this.x = props.x || 0;\n            this.y = props.y || 0;\n        }\n    }\n\n    /**\n     * Создает вектор из значений\n     * @return {ef2DVector}\n     */\n    public getVector(): ef2DVector {\n        return new ef2DVector({values: this});\n    }\n\n    /**\n     * Возвращает true, если векторные значения идентичны\n     * @param {ef2DVectorValues} vector - вектор сравнения\n     */\n    public equals(vector: ef2DVectorValues): boolean {\n        return this.x === vector.x && this.y === vector.y;\n    }\n\n    /**\n     * Преобразует объект в строку\n     */\n    public toString(): string {\n        return `{x: ${this.x}, y: ${this.y}}`;\n    }\n\n    /**\n     * Возвращает новые значения, умноженные на x,y или на xy\n     * @param {{ x?: number, y?: number, xy?: number }} props\n     * @return {ef2DVectorValues}\n     */\n    public getMultiplied(props: { x?: number, y?: number, xy?: number }): ef2DVectorValues {\n        if (props.x && props.y) return new ef2DVectorValues({x: this.x * props.x, y: this.y * props.y});\n        if (props.xy) return new ef2DVectorValues({x: this.x * props.xy, y: this.y * props.xy});\n        return new ef2DVectorValues({x: this.x, y: this.y});\n    }\n\n    /**\n     * Возвращает новые значения, сумированные с x,y или с xy\n     * @param {{ x?: number, y?: number, xy?: number }} props\n     * @return {ef2DVectorValues}\n     */\n    public getAdd(props: { x?: number, y?: number, xy?: number }): ef2DVectorValues {\n        if (props.x && props.y) return new ef2DVectorValues({x: this.x + props.x, y: this.y + props.y});\n        if (props.xy) return new ef2DVectorValues({x: this.x + props.xy, y: this.y + props.xy});\n        return new ef2DVectorValues({x: this.x, y: this.y});\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: ef2DRect.ts                                                          +\n + Файл изменен: 06.01.2019 05:09:28                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efSize from \"@cnv/objs/efSize\";\nimport ef2DVectorValues from \"@math/ef2DVectorValues\";\n\n/**\n * Прямоугольник\n */\nexport default class ef2DRect {\n\n    /**\n     * Размер прямоугольника\n     * @type {efSize}\n     * @readonly\n     */\n    public readonly size: efSize;\n\n    /**\n     * Положение прямоугольника\n     * @type {ef2DVectorValues}\n     * @readonly\n     */\n    public readonly position: ef2DVectorValues;\n\n    /**\n     * Конструктор\n     * @param {{ position: ef2DVectorValues, size: efSize }} props\n     */\n    public constructor(props: { position: ef2DVectorValues, size: efSize }) {\n        this.size = props.size;\n        this.position = props.position;\n    }\n\n    /**\n     * Возвращает вторую точку прямоугольника\n     * @return {ef2DVectorValues}\n     */\n    public getSecondPosition(): ef2DVectorValues {\n        return new ef2DVectorValues({\n            x: this.position.x + this.size.width(),\n            y: this.position.y + this.size.height(),\n        });\n    }\n\n    /**\n     * Возвращает центральную позицию прямоугольника\n     * @return {ef2DVectorValues}\n     */\n    public getCenterPosition(): ef2DVectorValues {\n        return new ef2DVectorValues({\n            x: this.position.x + (this.size.width() / 2),\n            y: this.position.y + (this.size.height() / 2),\n        });\n    }\n\n    /**\n     * Возвращает true, если точка находится в квадрате\n     * @param {ef2DVectorValues} point\n     * @return {boolean}\n     */\n    public isPointInRect(point: ef2DVectorValues): boolean {\n        const x = point.x;\n        const y = point.y;\n        const pos = this.position;\n\n        return y >= pos.y && y < pos.y + this.size.height()\n            && x >= pos.x && x < pos.x + this.size.width();\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efContextText.ts                                                     +\n + Файл изменен: 04.01.2019 22:16:14                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efContextElement from \"@cnv/context/efContextElement\";\nimport efSize from \"@cnv/objs/efSize\";\nimport elyColor from \"@core/elyColor\";\nimport ef2DRect from \"@math/ef2DRect\";\nimport ef2DVectorValues from \"@math/ef2DVectorValues\";\n\n/**\n * Текст `ef.cnv`\n */\nexport default class efContextText extends efContextElement {\n\n    /**\n     * Текст\n     */\n    public text: string;\n\n    /**\n     * Шрифт\n     */\n    public font: { size: number, fontName: string } = {size: 14, fontName: \"Arial\"};\n\n    /**\n     * Цвет заливки текста\n     */\n    public fillColor?: elyColor;\n\n    /**\n     * Цвет обводки текста\n     */\n    public strokeColor?: elyColor;\n\n    /**\n     * Толщина линии обводки текста\n     */\n    public strokeWidth?: number = 1;\n\n    /**\n     * Вырванивание по центру\n     */\n    public alignCenter?: boolean = false;\n\n    /**\n     * Максимальная ширина\n     */\n    public maxWidth?: number;\n\n    /**\n     * Расстояние между линиями\n     */\n    public lineSpacing: number = 5;\n\n    /**\n     * Конструктор\n     * @param {{ text: string, vector: ef2DVectorValues, font?: { size: number, fontName: string },\n     * fillColor?: elyColor, strokeColor?: elyColor, strokeWidth?: number, alignCenter?: number, maxWidth?: number,\n     * lineSpacing?: number }} props\n     */\n    public constructor(props: {\n        text: string, vector: ef2DVectorValues, font?: { size: number, fontName: string },\n        fillColor?: elyColor, strokeColor?: elyColor, strokeWidth?: number, alignCenter?: boolean, maxWidth?: number,\n        lineSpacing?: number,\n    }) {\n        super({...props, rect: new ef2DRect({position: props.vector, size: efSize.zero()})});\n        this.text = props.text;\n        this.fillColor = props.fillColor || undefined;\n        this.strokeColor = props.strokeColor || undefined;\n        this.strokeWidth = props.strokeWidth === undefined ? 1 : props.strokeWidth;\n        this.alignCenter = props.alignCenter || false;\n        this.maxWidth = props.maxWidth || undefined;\n        this.lineSpacing = props.lineSpacing === undefined ? 5 : props.lineSpacing;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efCanvasLayer.ts                                                     +\n + Файл изменен: 28.12.2018 01:10:41                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efContextElement from \"@cnv/context/efContextElement\";\nimport efContextImage from \"@cnv/context/efContextImage\";\nimport efContextRect from \"@cnv/context/efContextRect\";\nimport efContextText from \"@cnv/context/efContextText\";\nimport efSize from \"@cnv/objs/efSize\";\nimport elyView from \"@core/controls/elyView\";\nimport ef2DVectorValues from \"@math/ef2DVectorValues\";\n\nexport default class efCanvasLayer extends elyView {\n\n    /**\n     * Размеры\n     */\n    public readonly size: efSize = efSize.zero();\n\n    /**\n     * Контекст\n     * @ignore\n     */\n    protected readonly _ctx: CanvasRenderingContext2D;\n\n    /**\n     * Конструктор\n     */\n    public constructor() {\n        super({tag: \"canvas\"});\n        this.addClass(\"ef-cnv-layer\");\n        this._ctx = this.getDocument().getContext(\"2d\")!;\n    }\n\n    /**\n     * Возвращает контекст\n     * @return {CanvasRenderingContext2D}\n     */\n    public getContext(): CanvasRenderingContext2D {\n        return this._ctx;\n    }\n\n    /**\n     * Возвращает DOM объект\n     */\n    public getDocument(): HTMLCanvasElement {\n        return super.getDocument() as HTMLCanvasElement;\n    }\n\n    /**\n     * Отрисовывает объект {@link efContextElement}\n     * @param {efContextElement|efContextRect|efContextImage} e\n     */\n    public draw(e: efContextElement): void {\n        this.getContext().save();\n        if (e.angle) this.rotateCanvas({vector: e.rect.position, size: e.rect.size, angle: e.angle});\n        if (e.filter) this.getContext().filter = e.filter;\n        if (e instanceof efContextRect) {\n            if (e.fillColor) {\n                this.getContext().fillStyle = e.fillColor.getHexString();\n                this.getContext().fillRect(\n                    e.rect.position.x,\n                    e.rect.position.y,\n                    e.rect.size.width(),\n                    e.rect.size.height(),\n                );\n            }\n            if (e.strokeColor) {\n                this.getContext().strokeStyle = e.strokeColor.getHexString();\n                this.getContext().lineWidth = e.strokeWidth;\n                this.getContext().strokeRect(\n                    e.rect.position.x,\n                    e.rect.position.y,\n                    e.rect.size.width(),\n                    e.rect.size.height(),\n                );\n            }\n        } else if (e instanceof efContextImage) {\n            if (e.subImage) {\n                this.getContext().drawImage(\n                    e.image,\n                    e.rect.position.x,\n                    e.rect.position.y,\n                    e.rect.size.width(),\n                    e.rect.size.height(),\n                    e.subImage.position.x,\n                    e.subImage.position.y,\n                    e.subImage.size.width(),\n                    e.subImage.size.height(),\n                );\n            } else {\n                this.getContext().drawImage(\n                    e.image,\n                    e.rect.position.x,\n                    e.rect.position.y,\n                    e.rect.size.width(),\n                    e.rect.size.height(),\n                );\n            }\n        } else if (e instanceof efContextText) {\n            if (e.font) this.getContext().font = `${e.font.size}px ${e.font.fontName}`;\n            if (e.alignCenter) this.getContext().textAlign = \"center\";\n            if (e.strokeWidth) this.getContext().lineWidth = e.strokeWidth;\n            const pieces = e.text.split(\"\\n\");\n            let y = e.font.size;\n            for (const str of pieces) {\n                if (e.fillColor) {\n                    this.getContext().fillStyle = e.fillColor.getHexString();\n                    this.getContext().fillText(str, e.rect.position.x, e.rect.position.y + y, e.maxWidth);\n                }\n                if (e.strokeColor) {\n                    this.getContext().strokeStyle = e.strokeColor.getHexString();\n                    this.getContext().strokeText(str, e.rect.position.x, e.rect.position.y + y, e.maxWidth);\n                }\n                y += (e.font.size + e.lineSpacing);\n            }\n\n        }\n        this.getContext().restore();\n    }\n\n    /**\n     * Поворачивает холст относительно координаты и размера\n     * @param {{ vector: ef2DVectorValues, size: efSize, angle: number }} props - параметры\n     */\n    public rotateCanvas(props: { vector: ef2DVectorValues, size: efSize, angle: number }): void {\n        const pos = props.vector;\n        const size = props.size;\n        const angle = props.angle;\n        this.getContext().translate(pos.x + (size.width() / 2), pos.y + (size.height() / 2));\n        this.getContext().rotate(angle * Math.PI / 180);\n        this.getContext().translate(-(pos.x + (size.width() / 2)), -(pos.y + (size.height() / 2)));\n    }\n\n    /**\n     * Очищает слой\n     */\n    public clear(): efCanvasLayer {\n        const size = this.size;\n        this.getContext().clearRect(0, 0, size.width(), size.height());\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efButton.ts                                                          +\n + Файл изменен: 08.02.2019 02:22:02                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Size from \"@enums/Size\";\nimport Style from \"@enums/Style\";\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n/**\n * Опции для {@link efButton}\n */\nexport interface efButtonOptions extends elyViewOptions {\n    text?: string;\n    buttonStyle?: Style | string;\n    buttonSize?: Size | string;\n    buttonRounded?: boolean;\n    click?: () => void;\n    fill?: boolean;\n}\n\n/**\n * Элемент отображения кнопка\n * @class efButton\n * @augments {efButton}\n */\nexport class efButton extends elyView implements efSerializableProtocol<efButton> {\n    /**\n     * Десериализует объект\n     * @param {string} raw - сериализованный объект\n     * @return {efTextView}\n     */\n    public static deserialize<T>(raw: string): efButton | null {\n        return new efButton(JSON.parse(raw));\n    }\n\n    /**\n     * Свойство: текст на кнопке\n     * @ignore\n     */\n    protected readonly textProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>(\"\");\n\n    /**\n     * Свойство: стиль кнопки\n     * @ignore\n     */\n    protected readonly buttonStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>(Style.primary);\n\n    /**\n     * Свойство: размер кнопки\n     * @ignore\n     */\n    protected readonly buttonSizeProperty: elyObservableProperty<Size>\n        = new elyObservableProperty<Size>(Size.default);\n\n    /**\n     * Конструктор\n     * @param {efButtonOptions} options\n     */\n    public constructor(options: efButtonOptions = {}) {\n        super(options);\n        this.addClass(\"button\");\n\n        this.textProperty.change(value => {\n            this.getDocument().innerHTML = efTextView.filterString(value);\n        });\n        this.text(options.text || \"\");\n        this.buttonSizeProperty.change((value, oldVal) => {\n            this.getStyle().fontSize = null;\n            if (oldVal && !oldVal.custom) this.removeClass(`--${oldVal.value}`);\n            this.addClass(`--${value.value}`);\n        });\n\n        this.buttonStyleProperty.change((value, oldVal) => {\n            if (oldVal) this.removeClass(`--${oldVal.value}`);\n            this.addClass(`--${value.value}`);\n        });\n\n        this.buttonStyle(Style.primary);\n\n        if (elyGuard.isSet(options.buttonSize)) this.buttonSize(options.buttonSize!);\n        if (elyGuard.isSet(options.buttonStyle)) this.buttonStyle(options.buttonStyle!);\n        if (elyGuard.isSet(options.buttonRounded)) this.buttonRounded(options.buttonRounded!);\n        if (elyGuard.isSet(options.click)) this.click(() => {\n            options.click!();\n        });\n        if (options.fill) this.fill();\n    }\n\n    /**\n     * Возвращает размер кнопки\n     * @returns {Size}\n     */\n    public buttonSize(): Size;\n\n    /**\n     * Устанавливает размер кнопки\n     * @param {Size} value - значение\n     * @returns {this}\n     */\n    public buttonSize(value: Size | string): efButton;\n\n    /**\n     * Возвращает и устанавливает размер кнопки\n     * @param {Size} [value] - значение\n     * @returns {Size|this|null}\n     */\n    public buttonSize(value?: Size | string): Size | null | efButton {\n        if (value !== undefined && typeof value === \"string\") value = Size.byName(value);\n        return elyObservableProperty.simplePropertyAccess(this, value, this.buttonSizeProperty);\n    }\n\n    /**\n     * Устанавливает размер кнопки во весь блок.\n     * Алиас выражения `efButton.buttonSize(Size.fill)`.\n     * @return {this}\n     */\n    public fill(): efButton {\n        return this.buttonSize(Size.fill);\n    }\n\n    /**\n     * Возвращает стиль кнопки\n     * @returns {Style}\n     */\n    public buttonStyle(): Style;\n\n    /**\n     * Устанавливает стиль кнопки\n     * @param {Style|string} value - значение\n     * @returns {this}\n     */\n    public buttonStyle(value: Style | string): efButton;\n\n    /**\n     * Возвращает и устанавливает стиль кнопки\n     * @param {Style|string} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public buttonStyle(value?: Style | string): Style | null | efButton {\n        if (value !== undefined && typeof value === \"string\") value = Style.byName(value);\n        return elyObservableProperty.simplePropertyAccess(this, value, this.buttonStyleProperty);\n    }\n\n    /**\n     * Возвращает текст на кнопке\n     * @returns {string}\n     */\n    public text(): string;\n\n    /**\n     * Устанавливает текст на кнопке\n     * @param {string} value - значение\n     * @returns {this}\n     */\n    public text(value: string): efButton;\n\n    /**\n     * Возвращает и устанавливает текст на кнопке\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public text(value?: string): string | null | efButton {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.textProperty);\n    }\n\n    /**\n     * Устанавливает слушатель нажатия или нажимает на кнопку\n     *\n     * @param {Function} [callback = null]\n     * @returns {efButton}\n     */\n    public click(callback?: () => void): efButton {\n        if (callback === undefined) {\n            this.getDocument().click();\n        } else {\n            this.addObserver(\"click\", callback);\n        }\n        return this;\n    }\n\n    /**\n     * Возвращает флаг закругления углов кнопки\n     * @return {boolean}\n     */\n    public buttonRounded(): boolean;\n\n    /**\n     * Устанавливает флаг закругления углов кнопки\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public buttonRounded(value: boolean): efButton;\n\n    /**\n     * Возвращает и устанавливает флаг закругления углов кнопки\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public buttonRounded(value?: boolean): boolean | null | efButton {\n        if (value === undefined) return this.hasClass(\"--rounded\");\n        if (value) this.addClass(\"--rounded\");\n        else this.removeClass(\"--rounded\");\n        return this;\n    }\n\n    /**\n     * Сериализует объект\n     * @return {string}\n     */\n    public serialize(): string {\n        return JSON.stringify({\n            buttonRounded: this.buttonRounded(),\n            buttonSize: this.buttonSize().value,\n            buttonStyle: this.buttonStyle().value,\n            text: this.text(),\n        });\n    }\n}\n\n/**\n * @typedef {Object} efButtonOptions\n * @property {String} [text = \"\"]\n * @property {Size|String} [buttonSize]\n * @property {Style|String} [buttonStyle]\n * @property {boolean} [buttonRounded = false]\n * @property {boolean} [fill = false]\n * @property {function()} [click]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyFieldProtocol.ts                                                  +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyObservableBoolean from \"@core/observable/properties/elyObservableBoolean\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyFieldOptions from \"@options/fields/elyFieldOptions\";\n\n/**\n * Протокол поля ввода данных\n * @class elyFieldProtocol\n * @template T\n * @augments elyView\n * @version 1.2\n *\n * #Лог важных изменений:\n */\nexport default abstract class elyFieldProtocol<T> extends elyView {\n    /**\n     * Переменная изменения значения\n     * @type {elyObservableProperty<boolean>}\n     */\n    public editableProperty: elyObservableBoolean = new elyObservableBoolean(true);\n\n    /**\n     * Значение\n     * @type {elyObservableProperty<{T}>}\n     */\n    public valueProperty: elyObservableProperty<T> = new elyObservableProperty<T>();\n\n    /**\n     * Конструктор\n     */\n    protected constructor(options: elyFieldOptions<T> = {}) {\n        super(options);\n    }\n\n    /**\n     * Возвращает значение\n     * @return {T}\n     */\n    public value(): T;\n\n    /**\n     * Устанавливает значение\n     * @param {T} value - значение\n     * @return {this}\n     */\n    public value(value: T): elyFieldProtocol<T>;\n\n    /**\n     * Возвращает значение поля или устанавливает его\n     * @param {T} [value] - значение\n     * @return {this}\n     */\n    public value(value?: T): elyFieldProtocol<T> | T {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.valueProperty);\n    }\n\n    /**\n     * Вовращает значение доступности поля или устанавливает его\n     * @param {boolean} [flag] - флаг доступности редактирования\n     * @return {elyFieldProtocol|boolean}\n     */\n    public editable(flag?: boolean): elyFieldProtocol<T> | boolean {\n        return elyObservableProperty.simplePropertyAccess(this, flag, this.editableProperty);\n    }\n\n    /**\n     * Сравнивает значения.\n     * Возвращает true, если значения одинаковые.\n     *\n     * @param {T} value - значения для сравнения\n     * @return {boolean}\n     */\n    public compare(value: T): boolean {\n        return this.value() === value;\n    }\n\n    /**\n     * Очищает значение\n     * @return {elyFieldProtocol}\n     */\n    public clearValue(): elyFieldProtocol<T> {\n        return this.value(this.defaultValue());\n    }\n\n    /**\n     * Возвращает true, если объект пустой.\n     * @return {boolean}\n     * @abstract\n     */\n    public abstract isEmpty(): boolean;\n\n    /**\n     * Возвращает станлартное значение\n     * @abstract\n     * @return {T}\n     */\n    public abstract defaultValue(): T;\n\n    /**\n     * Отмечает поле, как поле с ошибкой\n     * @param flag\n     * @return {this}\n     */\n    public error(flag: boolean): elyFieldProtocol<T> | any {\n        // Nothing is done.\n        return this;\n    }\n\n    /**\n     * Возвращает true, если value идентично стандартному значению.\n     *\n     * Такой метод необходим в проверке изменения значения, ведь, когда вызывается метод\n     * elyField.clearValue(), он активирует изменения valueProperty поля.\n     *\n     *\n     *     let field = new ely.textField();\n     *     field.change( (value) => {\n     *        if(field.isValueDefault(value) === false){\n     *            // Теперь мы уверены, что значение было\n     *            // изменено, а не сброшено.\n     *        }\n     *     });\n     *\n     *\n     *\n     * Метод {@link elyFieldProtocol.change} имеет параметр clearanceSafe.\n     * Подробнее смотрите {@link elyFieldProtocol.change}.\n     * @param {T} value\n     * @return {boolean}\n     */\n    public isValueDefault(value: T): boolean {\n        return value === this.defaultValue();\n    }\n\n    /**\n     * Добавляет слушатель изменения значения поля\n     * @param {function(val: T, oldVal: T | null)} o\n     * @param {boolean} clearanceSafe - защита от сброса\n     *\n     * Из примера, указанного в методе {@link elyFieldProtocol.isValueDefault} известно,\n     * что сброс значения активирует слушатель. Утсановите параметр clearanceSafe в true, тогда\n     * добавленный наблюдатель observer будет немного модифицирован\n     * (как описано в {@link elyFieldProtocol.isValueDefault}).\n     */\n    public change(o: (val: T, oldVal?: T) => void, clearanceSafe: boolean = false): elyFieldProtocol<T> {\n        if (!clearanceSafe) this.valueProperty.change(o);\n        else this.valueProperty.change((nv, ov) => {\n            if (this.isValueDefault(nv)) return;\n            o(nv, ov);\n        });\n        return this;\n    }\n\n    /**\n     * Устанавливает строку для преложения ввода\n     * @param {string} [text]\n     * @return {this|string}\n     */\n    public placeholder(text?: string): string | null | elyView {\n        if (text === undefined) return this.attribute(\"placeholder\");\n        return this.attribute(\"placeholder\", text);\n    }\n\n    /**\n     * Проверет валидность введенных данных\n     * @return {boolean}\n     * @abstract\n     */\n    public abstract isValidData(): boolean;\n\n    /**\n     * Применяет стандартные опции протокола\n     * @param options\n     * @protected\n     */\n    protected applyProtocolOptions(options: elyFieldOptions<T> = {}) {\n        this.value((options.value === undefined || options.value === null) ? this.defaultValue() : options.value);\n        if (options.placeholder) this.placeholder(options.placeholder);\n        if (options.editable) this.editable(options.editable);\n        if (options.hint) this.hint(options.hint);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyInput.ts                                                          +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyFieldProtocol from \"@controls/protocols/elyFieldProtocol\";\nimport elyIconView from \"@controls/text/elyIconView\";\nimport TextFieldType from \"@enums/textFieldType\";\nimport elyFieldOptions from \"@options/fields/elyFieldOptions\";\n\n/**\n * Элемент: Элемент ввода текст\n * @version 1.0\n * @class elyInput\n */\nexport default class elyInput extends elyFieldProtocol<string> {\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyFieldOptions<string> & {\n        type?: TextFieldType | string, noObservers?: boolean,\n        fieldIcon?: string,\n    } = {}) {\n        super({tag: options.tag || \"input\", class: \"ef-input\", ...options});\n        this.valueProperty.change((newValue) => this.getDocument().value = newValue);\n        this.getDocument().onchange = () => this.value(this.getDocument().value);\n        this.editableProperty.change((newValue) => this.getDocument().disabled = !newValue);\n        if (options.type) this.attribute(\"type\", options.type.toString());\n        this.applyProtocolOptions(options);\n        this.getDocument().oninput = () => this.notificate(\"input\", [this.getDocument().value]);\n        if (options.fieldIcon) {\n            this.elyViewWillDraw(() => {\n                this.getDocument().before(new elyIconView({\n                    class: \"ef-input-status\",\n                    iconName: options.fieldIcon,\n                }).getDocument());\n            });\n        }\n    }\n\n    /**\n     * Возвращает исходной элемент\n     */\n    public getDocument(): HTMLInputElement {\n        return this.__view as HTMLInputElement;\n    }\n\n    /**\n     * Возвращает значение по умолчанию\n     */\n    public defaultValue(): string {\n        return \"\";\n    }\n\n    /**\n     * Возвращает true, если значение пустое\n     */\n    public isEmpty(): boolean {\n        return this.value() === \"\";\n    }\n\n    /**\n     * Добавляет слушатель изменения поля\n     * @param observer\n     */\n    public addInputObserver(observer: (value: string) => void): elyInput {\n        this.addObserver(\"input\", observer);\n        return this;\n    }\n\n    public isValidData(): boolean {\n        return true;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyStyle.ts                                                          +\n + Файл изменен: 05.12.2018 23:47:11                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport IStyleType from \"@controls/interfaces/IStyleType\";\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Стили ely.flat\n * @class elyStyle\n * @augments {elyEnum}\n */\nexport default class elyStyle extends elyEnum<string> {\n\n    /**\n     * Стандартный стиль\n     *\n     * Элементарный сброс стиля\n     */\n    public static readonly default = new elyStyle(\"default\");\n\n    /**\n     * Главный стиль\n     *\n     * Основной стиль подходит для важных элементов.\n     */\n    public static readonly primary = new elyStyle(\"primary\");\n\n    /**\n     * Информативный стиль\n     *\n     * Основной стиль подходит для отображения информации, которая должна выделяться.\n     */\n    public static readonly info = new elyStyle(\"info\");\n\n    /**\n     * Вторичный стиль\n     *\n     * Стиль подходит для элементов, не требующих основное внимание.\n     */\n    public static readonly secondary = new elyStyle(\"secondary\");\n\n    /**\n     * Стиль предупреждения\n     *\n     * Стиль, особо концентрирующий внимание пользователя.\n     */\n    public static readonly warning = new elyStyle(\"warning\");\n\n    /**\n     * Успешный стиль\n     *\n     * Стиль, говорящий об успешном завершении действия.\n     */\n    public static readonly success = new elyStyle(\"success\");\n\n    /**\n     * Опасный стиль\n     *\n     * Стиль, ярко бросающийся в глаза. Подойдет для отметки ошибок.\n     */\n    public static readonly danger = new elyStyle(\"danger\");\n\n    /**\n     * Заглушенный стиль\n     *\n     * Стиль, говорящий о невозможности использовать элемент.\n     */\n    public static readonly muted = new elyStyle(\"muted\");\n\n    /**\n     * Список\n     */\n    public static rawList(): IStyleType {\n        // tslint:disable-next-line:max-classes-per-file\n        return new class implements IStyleType {\n            public danger: string = elyStyle.danger.value;\n            public default: string = elyStyle.default.value;\n            public info: string = elyStyle.info.value;\n            public muted: string = elyStyle.muted.value;\n            public primary: string = elyStyle.primary.value;\n            public secondary: string = elyStyle.secondary.value;\n            public success: string = elyStyle.success.value;\n            public warning: string = elyStyle.warning.value;\n        };\n    }\n\n    public static list(): any {\n        return {\n            danger: elyStyle.default,\n            default: elyStyle.default,\n            info: elyStyle.info,\n            muted: elyStyle.muted,\n            primary: elyStyle.primary,\n            secondary: elyStyle.secondary,\n            success: elyStyle.success,\n            warning: elyStyle.warning,\n        };\n    }\n\n    /**\n     * Свой стиль\n     * @param name\n     */\n    public static custom(name: string): elyStyle {\n        return new elyStyle(name);\n    }\n\n    /**\n     * Возвраща стиль по имени\n     * @param name\n     */\n    public static byName(name: string): elyStyle {\n        return new elyStyle(name);\n    }\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     */\n    protected constructor(val: string) {\n        super(val);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyProgressView.ts                                                   +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyStyle from \"@enums/elyStyle\";\n\n/**\n * Опции: {@link elyProgressView}\n * @class elyProgressView\n */\ninterface elyProgressViewOptions extends elyViewOptions {\n    displayInfoLevel?: number;\n    max?: number;\n    min?: number;\n    current?: number;\n}\n\n/**\n * Элемент управления: Прогресс бар\n * @version 1.0\n */\n@designable(\"barStyle\", elyDesignableFieldState.GETSET, \"string\", elyStyle.list())\n@designable(\"current\", elyDesignableFieldState.GETSET)\nexport default class elyProgressView extends elyRebuildableViewProtocol {\n\n    /**\n     * Бар\n     */\n    public readonly barView: elyControl;\n\n    /**\n     * Уровень отображения данных\n     */\n    public displayInfoLevel: number = 0;\n\n    /**\n     * Свойство: Максимальное значение\n     * @ignore\n     */\n    protected readonly maxProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: Минимальное значение\n     * @ignore\n     */\n    protected readonly minProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: Текущее значение\n     * @ignore\n     */\n    protected readonly currentProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: стиль полосы бара\n     * @ignore\n     */\n    protected readonly barStyleProperty: elyObservableProperty<elyStyle>;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyProgressViewOptions = {}) {\n        super(options);\n        this.displayInfoLevel = options.displayInfoLevel || 0;\n        this.maxProperty      = new elyObservableProperty<number>();\n        this.minProperty      = new elyObservableProperty<number>();\n        this.currentProperty  = new elyObservableProperty<number>();\n        this.barStyleProperty = new elyObservableProperty<elyStyle>(elyStyle.default);\n\n        this.barStyleProperty.change((newValue, oldValue) => {\n            if (!oldValue) oldValue = elyStyle.default;\n            this.barView.removeClass(`bg-${oldValue.value}`).addClass(`bg-${newValue.value}`);\n        });\n\n        this.currentProperty.change((newValue) => {\n            if (newValue < this.min()) {\n                this.current(this.min());\n                return;\n            } else if (newValue > this.max()) {\n                this.current(this.max());\n                return;\n            }\n            this.rebuild();\n        });\n        this.maxProperty.change((newValue) => {\n            if (newValue < this.min()) {\n                this.max(this.min() as number);\n                return;\n            } else if (newValue < this.current()) {\n                this.current(newValue);\n                return;\n            }\n            this.rebuild();\n        });\n        this.minProperty.change((newValue) => {\n            if (newValue > this.max()) {\n                this.min(this.max());\n                return;\n            } else if (newValue > this.current()) {\n                this.current(this.min());\n            }\n            this.rebuild();\n        });\n\n        this.addClass(\"ef-pb\");\n\n        this.barView = new elyControl();\n        this.barView.addClass(\"bar\");\n        this.getDocument().appendChild(this.barView.getDocument());\n\n        this.denyRebuild(true);\n        this.min(options.min || 0);\n        this.max(options.max || 100);\n        this.denyRebuild(false);\n        this.current(options.current || 0);\n        this.barStyle(elyStyle.primary);\n    }\n\n    /**\n     * Возвращает стиль полосы бара\n     */\n    public barStyle(): elyStyle;\n\n    /**\n     * Устанавливает стиль полосы бара\n     */\n    public barStyle(value: elyStyle | string): elyProgressView;\n\n    /**\n     * Возвращает и устанавливает стиль полосы бара\n     */\n    public barStyle(value?: elyStyle | string): elyStyle | null | elyProgressView {\n        if (typeof value === \"string\") value = elyStyle.byName(value);\n        return elyObservableProperty.simplePropertyAccess(this, value, this.barStyleProperty);\n    }\n\n    /**\n     * Возвращает текущее значение\n     */\n    public current(): number;\n\n    /**\n     * Устанавливает текущее значение\n     * @param value\n     */\n    public current(value: number): elyProgressView;\n\n    /**\n     * Устанавливает текущее значение\n     * @param value\n     */\n    public current(value?: number): number | elyProgressView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.currentProperty);\n    }\n\n    /**\n     * Устанавливает текущее значение как минимальное\n     */\n    public reset(): elyView {\n        this.current(this.min());\n        return this;\n    }\n\n    /**\n     * Возвращает максимальное значение\n     */\n    public max(): number;\n\n    /**\n     * Устанавливает максимальное значение\n     * @param value\n     */\n    public max(value: number): elyProgressView;\n\n    /**\n     * Устанавливает или возвращает максимальное значение\n     * @param value\n     */\n    public max(value?: number): number | elyProgressView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.maxProperty);\n    }\n\n    /**\n     * Возвращает минимальное значение\n     */\n    public min(): number;\n\n    /**\n     * Устанавливает минимальное значение\n     * @param value\n     */\n    public min(value: number): elyProgressView;\n\n    /**\n     * Устанавливает минимальное значение\n     * @param value\n     */\n    public min(value?: number): number | elyProgressView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.minProperty);\n    }\n\n    /**\n     * Вовзаращет процент заполненности\n     * @param {boolean} flex - сглаживание значения процента до\n     * digits значений после запятой\n     *\n     * @param {number} digits - количество значение после запятой\n     */\n    public getPercentage(flex: boolean = false, digits: number = 2) {\n        let pc = (this.current() === 0 || this.current() < this.min()) ?\n            0 : this.current() / this.max();\n        pc *= 100;\n        if (flex) {\n            digits *= 10;\n            pc = Math.round(pc * digits) / digits;\n        }\n        return pc;\n    }\n\n    /**\n     * @ignore\n     * @private\n     */\n    protected __rebuild(): elyProgressView {\n        this.barView.width(this.getPercentage() + \"%\");\n        if (this.displayInfoLevel === 1) {\n            this.hint(this.getPercentage(true) + \"%\");\n        } else if (this.displayInfoLevel === 2) {\n            this.hint(`${this.current()} / ${this.max()} [ ${this.getPercentage(true)}% ]`);\n        }\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efTextViewContainer.ts                                               +\n + Файл изменен: 09.02.2019 16:15:14                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * элемент отображения контейнера с текстом\n * @class efTextViewContainer\n * @augments elyView\n */\nexport class efTextViewContainer extends elyView {\n\n    /**\n     * Элемент отображения текста\n     * @protected\n     * @ignore\n     */\n    protected readonly __textView: efTextView = new efTextView();\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyViewOptions = {}) {\n        super(options);\n        this.getDocument().append(this.getTextView().getDocument());\n    }\n\n    /**\n     * Возвращает элемент отображения текста\n     * @return {efTextView}\n     */\n    public getTextView(): efTextView {\n        return this.__textView;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efPanelView.ts                                                       +\n + Файл изменен: 09.02.2019 16:11:48                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efGridLayoutView} from \"@controls/layout/efGridLayoutView\";\nimport {efTextViewContainer} from \"@controls/text/efTextViewContainer\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\n\n/**\n * Опции {@link efPanelView}\n */\nexport interface efPanelViewOptions extends elyViewOptions {\n    panelTitle?: string;\n    panelActionText?: string;\n    panelHover?: boolean;\n    panelContent?: elyView;\n    panelActionClick?: () => void;\n}\n\n/**\n * Элемент отображения панель\n */\nexport class efPanelView extends elyView {\n\n    /**\n     * Элемен отображения заголовка\n     * @protected\n     * @ignore\n     */\n    protected readonly __headerView: efTextViewContainer = new efTextViewContainer({class: \"--header\"});\n\n    /**\n     * Элемен отображения контента\n     * @protected\n     * @ignore\n     */\n    protected readonly __contentView: efGridLayoutView = new efGridLayoutView({class: \"--content\"});\n\n    /**\n     * Элемен отображения подвала\n     * @protected\n     * @ignore\n     */\n    protected readonly __footerView: efTextViewContainer = new efTextViewContainer({class: \"--footer\"});\n\n    /**\n     * Конструктор\n     * @param {efPanelViewOptions} options\n     */\n    public constructor(options: efPanelViewOptions = {}) {\n        super(options);\n        this.addClass(\"ef-panel\");\n\n        this.panelHover(true);\n        elyGuard.variable<string>(options.panelTitle, (v) => this.panelTitle(v));\n        elyGuard.variable<boolean>(options.panelHover, (v) => this.panelHover(v));\n        elyGuard.variable<string>(options.panelActionText, (v) => this.panelActionText(v));\n        elyGuard.variable<() => void>(options.panelActionClick, (v) => this.panelActionClick(v));\n        elyGuard.variable<elyView>(options.panelContent, (v) => this.getContentView().add(v));\n        this.rebuild();\n    }\n\n    /**\n     * Возвращает элемент отображения заголовка\n     * @return {efTextViewContainer}\n     */\n    public getHeaderView(): efTextViewContainer {\n        return this.__headerView;\n    }\n\n    /**\n     * Возвращает элемент отображения подвала\n     * @return {efTextViewContainer}\n     */\n    public getFooterView(): efTextViewContainer {\n        return this.__footerView;\n    }\n\n    /**\n     * Возвращает элемент отображения контента\n     * @return {efGridLayoutView}\n     */\n    public getContentView(): efGridLayoutView {\n        return this.__contentView;\n    }\n\n    /**\n     * Возвращает флаг изменения палени при наведении на неё\n     * @return {boolean}\n     */\n    public panelHover(): boolean;\n\n    /**\n     * Устанавливает флаг изменения палени при наведении на неё\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public panelHover(value: boolean): efPanelView;\n\n    /**\n     * Возвращает и устанавливает флаг изменения палени при наведении на неё\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public panelHover(value?: boolean): boolean | null | efPanelView {\n        if (value === undefined) return this.hasClass(\"--hover\");\n        if (value) this.addClass(\"--hover\");\n        else this.removeClass(\"--hover\");\n        return this;\n    }\n\n    /**\n     * Возвращает текст активации\n     * @return {string}\n     */\n    public panelActionText(): string;\n\n    /**\n     * Устанавливает текст активации\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public panelActionText(value: string): efPanelView;\n\n    /**\n     * Возвращает и устанавливает текст активации\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public panelActionText(value?: string): string | null | efPanelView {\n        if (value === undefined) return this.getFooterView().getTextView().text();\n        this.getFooterView().getTextView().text(value);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Возвращает текст заголовка панели\n     * @return {string}\n     */\n    public panelTitle(): string;\n\n    /**\n     * Устанавливает текст заголовка панели\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public panelTitle(value: string): efPanelView;\n\n    /**\n     * Возвращает и устанавливает текст заголовка панели\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public panelTitle(value?: string): string | null | efPanelView {\n        if (value === undefined) return this.getHeaderView().getTextView().text();\n        this.getHeaderView().getTextView().text(value);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Выполняет перестроение панели\n     */\n    public rebuild(): efPanelView {\n        this.removeViewContent();\n        if (this.panelTitle() !== \"\")\n            this.getDocument().append(this.getHeaderView().getDocument());\n        this.getDocument().append(this.getContentView().getDocument());\n        if (this.panelActionText() !== \"\")\n            this.getDocument().append(this.getFooterView().getDocument());\n        return this;\n    }\n\n    /**\n     * Добавляет слушатель нажатия на функциональную клавишу\n     * @param {function()} callbackfn\n     */\n    public panelActionClick(callbackfn: () => void): efPanelView {\n        this.getFooterView().addObserver(\"click\", callbackfn);\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efPanelViewOptions - Опции панели\n * @property {string} [panelTitle]\n * @property {string} [panelActionText]\n * @property {boolean} [panelHover = true]\n * @property {elyView} [panelContent]\n * @property {function()} [panelActionClick]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat.application                                               +\n +                                                                            +\n + Файл: elyDataGridView.ts                                                   +\n + Файл изменен: 27.11.2018 22:06:16                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efTextView} from \"@controls/text/efTextView\";\n// import elyTextView from \"@controls/text/elyTextView\";\n// import elyTextViewEditable from \"@controls/text/elyTextViewEditable\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Опции для {@link elyDataGridViewOptions}\n */\nexport interface elyDataGridViewOptions extends elyViewOptions {\n\n    /**\n     * Количество строк\n     */\n    rowsCount?: number;\n\n    /**\n     * Количество столбцов\n     */\n    colsCount?: number;\n\n    /**\n     * Отмечает первую колонку как заголовок\n     */\n    firstColumnIsHeader?: boolean;\n\n    /**\n     * Матрица исходных данных\n     */\n    sourceData?: any[][];\n\n    /**\n     * Заголовки\n     */\n    headers?: Array<string | any>;\n\n    /**\n     * Флаг - таблица вокруг рамки\n     */\n    borderedStyle?: boolean;\n\n    /**\n     * Заголовок таблицы\n     */\n    title?: string | elyView;\n}\n\n/**\n * Делегат элементов\n */\ntype elyDataGridViewItemDelegate = (rowIndex: number, colIndex: number) => any | elyView;\n\n/**\n * Делегат заголовков\n */\ntype elyDataGridViewHeaderDelegate = (colIndex: number) => any | string;\n\n/**\n * Делегат запроса на разрешение редактировании ячейки\n */\ntype elyDataGridViewAllowEditDelegate = (rowIndex: number, colIndex: number) => boolean;\n\n/**\n * Делегат обработки сохранения значения\n */\ntype elyDataGridViewShouldSaveDelegate = (rowIndex: number, colIndex: number, value: string,\n                                          result: (res: boolean) => void) => void;\n\n@designable(\"title\", elyDesignableFieldState.GETSET, \"string\")\n@designable(\"rowsCount\", elyDesignableFieldState.GETSET, \"number\")\n@designable(\"colsCount\", elyDesignableFieldState.GETSET, \"number\")\n/**\n * Элемент отображения: Таблица элементов\n *\n * @author Diego Ling\n */\nexport class elyDataGridView<T> extends elyView {\n\n    /**\n     * Запрещает обновление\n     */\n    public denyUpdate: boolean = false;\n\n    /**\n     * Делегат\n     * @ignore\n     */\n    protected itemDelegateProperty: elyDataGridViewItemDelegate = ((rowIndex, colIndex) => {\n        return (this.sourceData[rowIndex] || [])[colIndex] || \"\";\n    });\n\n    /**\n     * Делегат заголвков\n     * @ignore\n     */\n    protected headersDelegateProperty: elyDataGridViewHeaderDelegate = (colIndex => {\n        return (this.headers || [])[colIndex] || \"\";\n    });\n\n    /**\n     * Свойство: количество строк таблицы\n     * @ignore\n     */\n    protected readonly rowsCountProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: количество колонок в таблице\n     * @ignore\n     */\n    protected readonly colsCountProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: флаг - первая колонка - колонка заголовков\n     * @ignore\n     */\n    protected readonly firstColumnIsHeaderProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Исходные данные\n     * @ignore\n     */\n    protected sourceData: any[][] = [];\n\n    /**\n     *  Заголовки\n     *  @ignore\n     */\n    protected headers: Array<string | any> | null = null;\n\n    /**\n     * Свойство: флаг - рамка вокруг таблицы\n     * @ignore\n     */\n    protected readonly borderedStyleProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Свойство: заголовок таблицы\n     * @ignore\n     */\n    protected readonly titleProperty: elyObservableProperty<string | elyView>;\n\n    /**\n     * Делегат запроса на разрешение редактировании ячейки\n     * @ignore\n     */\n    protected allowEditDelegateProperty: elyDataGridViewAllowEditDelegate = (() => false);\n\n    /**\n     * Делегат обработки сохранения значения\n     * @ignore\n     */\n    protected shouldSaveDelegateProperty: elyDataGridViewShouldSaveDelegate = (() => true);\n\n    /**\n     * Конструктор\n     * @param {elyDataGridViewOptions} props\n     */\n    public constructor(props: elyDataGridViewOptions = {}) {\n        super({...props, tag: \"table\"});\n        this.addClass(\"ef-dgv\");\n\n        this.denyUpdate = true;\n        this.sourceData = props.sourceData || [];\n        this.headers    = props.headers || null;\n\n        this.rowsCountProperty           = new elyObservableProperty<number>(props.rowsCount || 0);\n        this.colsCountProperty           = new elyObservableProperty<number>(props.colsCount || 0);\n        this.firstColumnIsHeaderProperty = new elyObservableProperty<boolean>(props.firstColumnIsHeader || false);\n        this.borderedStyleProperty       = new elyObservableProperty<boolean>(false);\n        this.titleProperty               = new elyObservableProperty<string | elyView>(\"\");\n\n        this.rowsCountProperty.change(() => this.update());\n        this.colsCountProperty.change(() => this.update());\n        this.firstColumnIsHeaderProperty.change(() => this.update());\n        this.titleProperty.change(() => this.update());\n\n        this.borderedStyleProperty.change(value => {\n            if (value) this.addClass(\"bordered\");\n            else this.removeClass(\"bordered\");\n        });\n\n        if (props.title) this.title(props.title);\n        this.borderedStyle(props.borderedStyle || false);\n\n        this.dataGridViewAllowEdit(() => false);\n        this.dataGridShouldSave(() => true);\n\n        if (props.sourceData && (!props.rowsCount && !props.colsCount)) {\n            this.rowsCount(props.sourceData.length || 0);\n            this.colsCount((props.sourceData.length || 0) > 0 ? props.sourceData[0].length : 0);\n        }\n        this.denyUpdate = false;\n        this.update();\n    }\n\n    /**\n     * Возвращает заголовок таблицы\n     */\n    public title(): string;\n\n    /**\n     * Устанавливает заголовок таблицы\n     */\n    public title(value: string | elyView): elyDataGridView<T>;\n\n    /**\n     * Возвращает и устанавливает заголовок таблицы\n     */\n    public title(value?: string | elyView): string | null | elyDataGridView<T> {\n        const val = elyObservableProperty.simplePropertyAccess(this, value, this.titleProperty);\n        return val instanceof elyView ? \"\" : val;\n    }\n\n    /**\n     * Возвращает флаг - рамка вокруг таблицы\n     */\n    public borderedStyle(): boolean;\n\n    /**\n     * Устанавливает флаг - рамка вокруг таблицы\n     */\n    public borderedStyle(value: boolean): elyDataGridView<T>;\n\n    /**\n     * Возвращает и устанавливает флаг - рамка вокруг таблицы\n     */\n    public borderedStyle(value?: boolean): boolean | null | elyDataGridView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.borderedStyleProperty);\n    }\n\n    /**\n     * Устанавливает данные\n     * @param sourceData\n     */\n    public setData(sourceData: any[][]): elyDataGridView<T> {\n        this.sourceData = sourceData;\n        return this.update();\n    }\n\n    /**\n     * Устанавливает заголовки\n     * @param headers\n     */\n    public setHeaders(headers: string[]): elyDataGridView<T> {\n        this.headers = headers;\n        return this.update();\n    }\n\n    /**\n     * Возвращает флаг - первая колонка - колонка заголовков\n     */\n    public firstColumnIsHeader(): boolean;\n\n    /**\n     * Устанавливает флаг - первая колонка - колонка заголовков\n     */\n    public firstColumnIsHeader(value: boolean): elyDataGridView<T>;\n\n    /**\n     * Возвращает и устанавливает флаг - первая колонка - колонка заголовков\n     */\n    public firstColumnIsHeader(value?: boolean): boolean | null | elyDataGridView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.firstColumnIsHeaderProperty);\n    }\n\n    /**\n     * Возвращает количество колонок в таблице\n     */\n    public colsCount(): number;\n\n    /**\n     * Устанавливает количество колонок в таблице\n     */\n    public colsCount(value: number): elyDataGridView<T>;\n\n    /**\n     * Возвращает и устанавливает количество колонок в таблице\n     */\n    public colsCount(value?: number): number | null | elyDataGridView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.colsCountProperty);\n    }\n\n    /**\n     * Возвращает количество строк таблицы\n     */\n    public rowsCount(): number;\n\n    /**\n     * Устанавливает количество строк таблицы\n     */\n    public rowsCount(value: number): elyDataGridView<T>;\n\n    /**\n     * Возвращает и устанавливает количество строк таблицы\n     */\n    public rowsCount(value?: number): number | null | elyDataGridView<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.rowsCountProperty);\n    }\n\n    /**\n     * Устанавливает делегат для установки элементов\n     * @param delegate\n     */\n    public dataGridViewItem(delegate: elyDataGridViewItemDelegate): elyDataGridView<T> {\n        this.itemDelegateProperty = delegate;\n        return this.update();\n    }\n\n    /**\n     * Устанавливает делегат для установки заголовков\n     * @param delegate\n     */\n    public dataGridViewHeader(delegate: elyDataGridViewHeaderDelegate): elyDataGridView<T> {\n        this.headersDelegateProperty = delegate;\n        return this.update();\n    }\n\n    /**\n     * Устанавливает делегат запроса на разрешение редактировании ячейки\n     * @param delegate\n     */\n    public dataGridViewAllowEdit(delegate: elyDataGridViewAllowEditDelegate): elyDataGridView<T> {\n        this.allowEditDelegateProperty = delegate;\n        return this.update();\n    }\n\n    /**\n     * Устанавливает делегат обработки сохранения значения\n     * @param delegate\n     */\n    public dataGridShouldSave(delegate: elyDataGridViewShouldSaveDelegate): elyDataGridView<T> {\n        this.shouldSaveDelegateProperty = delegate;\n        return this.update();\n    }\n\n    /**\n     * Добавляет наблюдатель: отрисовка строки элемента\n     *\n     * Имя обсервера: rowDraw\n     * @param o\n     */\n    public addRowDrawObserver(o: (rowIndex: number, row: elyView) => void): elyDataGridView<T> {\n        this.addObserver(\"rowDraw\", o);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: отрисовка элемента\n     *\n     * Имя обсервера: cellDraw\n     *\n     * @param {function(rowIndex: number, colIndex: number, cell: elyView, view: elyView)} o - наблюдатель\n     */\n    public addCellDrawObserver(o: (rowIndex: number, colIndex: number, cell: elyView, view: elyView) => void):\n        elyDataGridView<T> {\n        this.addObserver(\"cellDraw\", o);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: отрисовка строки заголовков таблицы\n     *\n     * Имя обсервера: headerRowDraw\n     *\n     * @param o - наблюдатель\n     */\n    public addHeaderRowDrawObserver(o: (row: elyView) => void): elyDataGridView<T> {\n        this.addObserver(\"headerRowDraw\", o);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: отрисовка элемента заголовка\n     *\n     * Имя обсервера: headerCellDraw\n     *\n     * @param o - наблюдатель\n     */\n    public addHeaderCellDrawObserver(o: (colIndex: number, cell: elyView, view: elyView) => void): elyDataGridView<T> {\n        this.addObserver(\"headerCellDraw\", o);\n        return this;\n    }\n\n    /**\n     * Обновляет таблицу\n     */\n    public update(): elyDataGridView<T> {\n        if (this.denyUpdate) return this;\n        this.removeViewContent();\n        //\n        // Отрисовка заголовка\n        //\n        if (this.titleProperty.get()) {\n            const cap = new elyControl({tag: \"caption\"});\n            cap.addSubView(elyControl.tryMutateToView(this.titleProperty.get()));\n            this.getDocument().append(cap.getDocument());\n        }\n        //\n        // Отрисовка заголовков таблицы\n        //\n        if (this.headers) {\n            const row = new elyControl({tag: \"tr\"});\n            this.notificate(\"headerRowDraw\", [row]);\n            for (let j = 0; j < this.colsCount(); j++) {\n                const col  = new elyControl({tag: \"th\"});\n                const cell = elyControl.tryMutateToView(this.headersDelegateProperty(j));\n                this.notificate(\"headerCellDraw\", [j, col, cell]);\n                col.addSubView(cell);\n                row.addSubView(col);\n            }\n            this.getDocument().append(row.getDocument());\n        }\n        //\n        //  Отрисовка элементов таблицы\n        //\n        for (let i = 0; i < this.rowsCount(); i++) {\n            const row = new elyControl({tag: \"tr\"});\n            this.notificate(\"rowDraw\", [i, row]);\n            for (let j = 0; j < this.colsCount(); j++) {\n                const col = new elyControl({tag: (j === 0 && this.firstColumnIsHeader()) ? \"th\" : \"td\"});\n                const view = new efTextView({text: String(this.itemDelegateProperty(i, j))});\n                // if (this.allowEditDelegateProperty(i, j)) {\n                //     if (view instanceof elyTextView) {\n                //         view = elyTextView.editable(view);\n                //         (view as elyTextViewEditable).textViewEditableShouldSaveValue((value, res) => {\n                //             this.shouldSaveDelegateProperty(i, j, value, shouldSave => {\n                //                 res(shouldSave);\n                //             });\n                //         });\n                //     }\n                // }\n                this.notificate(\"cellDraw\", [i, j, col, view]);\n                col.addSubView(view);\n\n                row.addSubView(col);\n            }\n            this.getDocument().append(row.getDocument());\n        }\n        return this;\n    }\n}\n\n/**\n * @typedef {Object} elyDataGridViewOptions\n * @property {*[][]} [sourceData]\n * @property {*[]} [headers]\n * @property {boolean} [borderedStyle]\n * @property {string} [title]\n * @property {boolean} [firstColumnIsHeader = false]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyUIExt.ts                                                          +\n + Файл изменен: 08.02.2019 02:41:23                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efButton, efButtonOptions} from \"@controls/action/efButton\";\nimport {efListView, efListViewOptions} from \"@controls/list/efListView\";\nimport {efNotificationView} from \"@controls/notification/efNotificationView\";\nimport {efHeaderTextView, efHeaderTextViewOptions} from \"@controls/text/efHeaderTextView\";\nimport {efIconView, efIconViewOptions} from \"@controls/text/efIconView\";\nimport {efTextView, efTextViewOptions} from \"@controls/text/efTextView\";\n\ndeclare global {\n\n    /**\n     * Расширения элемента String\n     */\n    interface String {\n\n        /**\n         * Преобразует строку в efTextView\n         * @param {efTextViewOptions} options - опции\n         */\n        textView(options?: efTextViewOptions): efTextView;\n\n        /**\n         * Преобразует строку в efHeaderTextView\n         * @param {efHeaderTextViewOptions} options - опции\n         */\n        headerTextView(options?: efHeaderTextViewOptions): efHeaderTextView;\n\n        /**\n         * Преобразует строку в efButton\n         * @param {efButtonOptions} options - опции\n         */\n        button(options?: efButtonOptions): efButton;\n\n        /**\n         * Преобразует строку в efIconView\n         * @param {efIconViewOptions} options - опции\n         */\n        iconView(options?: efIconViewOptions): efIconView;\n    }\n\n    /**\n     * Расширение массива\n     */\n    interface Array<T> {\n        /**\n         * Преобразует массив в список efListView\n         * @param options\n         */\n        listView(options?: efListViewOptions): efListView;\n    }\n\n    interface Window {\n        /**\n         * Создает оповещение\n         * @param {string} text - текст\n         * @param {string?} title - заголовок\n         * @param {string?} content - контент\n         */\n        notifi: (text: string, title?: string, content?: string) => void;\n    }\n}\n\n/**\n * Создает {@link efTextView} элемент из строки\n * @param {efTextViewOptions} options - опции {@link efTextViewOptions}\n */\nString.prototype.textView = function(options: efTextViewOptions = {}) {\n    return new efTextView({text: this as string, ...options});\n};\n\n/**\n * Создает {@link efHeaderTextView} элемент из строки\n * @param {efHeaderTextViewOptions} options - опции {@link efHeaderTextViewOptions}\n */\nString.prototype.headerTextView = function(options: efHeaderTextViewOptions = {headerLevel: 1}) {\n    return new efHeaderTextView({text: this as string, ...options});\n};\n\n/**\n * Создает {@link efButton} из строки\n * @param {efButtonOptions} options - опции {@link efButtonOptions}\n */\nString.prototype.button = function(options?: efButtonOptions) {\n    return new efButton({text: this as string, ...options});\n};\n\n/**\n * Создает {@link efIconView} из строки\n * @param {efIconViewOptions} options - опции {@link efIconViewOptions}\n */\nString.prototype.iconView = function(options?: efIconViewOptions) {\n    return new efIconView({iconName: this as string, ...options});\n};\n\n/**\n * Содает {@link efListView} из массива строк или элементов\n * @param options - опции {@link efListViewOptions}\n * @return {efListView}\n */\nArray.prototype.listView = function(options?: efListViewOptions) {\n    return new efListView({items: this, ...options});\n};\n\n/**\n * Создает оповещение\n * @function\n * @param {string} text - текст оповещения\n * @param {string?} title - заголовок оповещения\n * @param {string?} content - контента\n */\nWindow.prototype.notifi = (text, title, content) => {\n    new efNotificationView({title, message: text, content}).present();\n};\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyGridRowView.ts                                                    +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Элемент отображения: Flex Строка\n */\nexport default class elyGridRowView extends elyView {\n\n    /**\n     * Колонки\n     * @ignore\n     */\n    protected readonly __views: elyView[];\n    protected readonly __columns: elyView[];\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    constructor(options: elyViewOptions = {}) {\n        super({class: \"ef-flex-box\", ...options});\n        this.addClass(\"row\");\n\n        this.__views   = [];\n        this.__columns = [];\n    }\n\n    /**\n     * Добавляет элемент в строку\n     * @param view          - элемент\n     * @param percentage    - процентное значение элемента в строке (0 ... 1)\n     */\n    public add(view: elyView, percentage: string | number | null = null): elyGridRowView {\n        const column = new elyControl({class: \"item\"});\n        if (percentage === null) percentage = 1;\n        if (typeof percentage === \"number\" && percentage > 1) percentage /= 100;\n        if (typeof percentage === \"string\") column.css({flex: `1 1 ${percentage}`});\n        else column.css({flex: `1 1 ${percentage * 100}%`});\n        column.addSubView(view);\n        this.__views.push(view);\n        this.__columns.push(column);\n        if (percentage === null) {\n            this.__columns.forEach((value) => {\n                value.css({flex: `1 1 ${100 / this.__views.length}%`});\n            });\n        }\n        column.superview = this;\n        this.getDocument().append(column.getDocument());\n        return this;\n    }\n\n    /**\n     * Удаляет элемент из строки\n     * @param view\n     */\n    public remove(view: elyView): elyGridRowView {\n        const index    = this.__views.indexOf(view);\n        if (index > -1 && this.__columns[index]) {\n            this.__views.splice(index, 1);\n            view.removeFromSuperview();\n            this.__columns[index].removeFromSuperview();\n            this.__columns.splice(index, 1);\n        }\n        return this;\n    }\n\n    /**\n     * Удаляет содержимое строки\n     */\n    public removeViewContent(): elyGridRowView {\n        super.removeViewContent();\n        this.__views.splice(0, this.__views.length);\n        return this;\n    }\n\n    /**\n     * Возвращает индекс элемента в строке или -1\n     * @param view\n     */\n    public viewIndex(view: elyView): number {\n        return this.__views.indexOf(view);\n    }\n\n    /**\n     * Возвращает колонку по индексу\n     * @param index\n     */\n    public viewAt(index: number): elyView {\n        return this.__views[index];\n    }\n\n    /**\n     * Возвращает количество элементов\n     */\n    public viewsCount(): number {\n        return this.__columns.length;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyGridView                                                  +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyStylesheet from \"@controls/elyStylesheet\";\nimport elyGridRowView from \"@controls/flex/elyGridRowView\";\nimport IPosition from \"@controls/interfaces/IPosition\";\nimport elyView from \"@core/controls/elyView\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyFlexGridViewOptions from \"@options/elyFlexGridViewOptions\";\n\n/**\n * Элемент отображения: Флекс сетка\n * @class elyGridView\n * @augments {elyView}\n */\nexport default class elyGridView extends elyView {\n\n    /**\n     * Процентное соотношение частей\n     * @ignore\n     */\n    protected readonly __flexPercentage: number[][];\n\n    /**\n     * Строки сетки\n     * @ignore\n     */\n    protected readonly __rows: elyGridRowView[];\n\n    /**\n     * Конструктор\n     * @param {elyFlexGridViewOptions} options\n     */\n    public constructor(options: elyFlexGridViewOptions = {}) {\n        super(options);\n        this.__flexPercentage = options.flex || [];\n        this.__rows           = [];\n        this.addClass(this.identifier());\n        this.setItemsMargin(options.margin || {top: 5, bottom: 5, left: 5, right: 5});\n    }\n\n    /**\n     * Устанавливает внитринний отступ элементов сетки\n     * @param {IPosition} margin\n     */\n    public setItemsMargin(margin: IPosition): elyGridView {\n        margin       = {...{top: 0, bottom: 0, left: 0, right: 0}, ...margin};\n        const styles = {};\n        elyUtils.applySrc(margin, [\"top\", \"bottom\", \"left\", \"right\"], styles, \"margin-\", (val) => {\n            return typeof val === \"string\" ? val : val + \"px\";\n        });\n        elyStylesheet.global.addClass(this.identifier() + \" .item\", styles);\n        return this;\n    }\n\n    /**\n     * Возвращает строки\n     * @return {elyGridRowView[]}\n     */\n    public getRows(): elyGridRowView[] {\n        return this.__rows;\n    }\n\n    /**\n     * Удаляет строку\n     * @param {number} index\n     * @return {this}\n     */\n    public removeRow(index: number): elyGridView {\n        this.__rows[index].removeFromSuperview();\n        return this;\n    }\n\n    /**\n     * Возвращает индекс строки, в которой находится элемент\n     * @param {elyView} view\n     * @return {number}\n     */\n    public viewRowIndex(view: elyView): number {\n        let i = 0;\n        for (const row of this.__rows) {\n            if (row.viewIndex(view) > -1) return i;\n            i++;\n        }\n        return -1;\n    }\n\n    /**\n     * Возвращает полный адрес элемента: `{rowIndex: number, viewIndex: number}`\n     * @param {elyView} view\n     * @return {{rowIndex: number, viewIndex: number}}\n     */\n    public viewIndex(view: elyView): { rowIndex: number, viewIndex: number } {\n        for (let rowIndex = 0; rowIndex < this.__rows.length; rowIndex++) {\n            const vi = this.__rows[rowIndex].viewIndex(view);\n            if (vi > -1) return {rowIndex, viewIndex: vi};\n        }\n        return {rowIndex: -1, viewIndex: -1};\n    }\n\n    /**\n     * Возвращает строку по индексу\n     * @param {number} index\n     * @return {elyGridRowView|null}\n     */\n    public rowAt(index: number): elyGridRowView | null {\n        return this.__rows[index];\n    }\n\n    /**\n     * Удаляет элемент\n     * @param {elyView} view\n     * @return {this}\n     */\n    public removeView(view: elyView): elyGridView {\n        const index = this.viewRowIndex(view);\n        this.rowAt(index)!.remove(view);\n        return this;\n    }\n\n    /**\n     * Добавляет строку\n     * @param {...elyView} row\n     * @return {this}\n     */\n    public add(...row: elyView[]): elyGridView {\n        return this.insert(null, ...row);\n    }\n\n    /**\n     * Вставляет строку по индексу\n     *\n     * @param {number} index\n     * @param {...elyView} row\n     * @return {this}\n     */\n    public insert(index: number | null = null, ...row: elyView[]): elyGridView {\n        const rowView  = new elyGridRowView();\n        const rowIndex = this.__rows.length;\n        row.forEach((value, index) => {\n            let flexMap: any = [];\n            if (this.__flexPercentage.length > 0) {\n                if (typeof this.__flexPercentage[0] === \"number\") flexMap = this.__flexPercentage;\n                else flexMap = this.__flexPercentage[rowIndex] || this.__flexPercentage[0];\n            }\n            value.superview = rowView;\n            rowView.add(value, flexMap[index] || null);\n        });\n        if (index !== null) {\n            this.__rows.splice(index, 0, rowView);\n            const indexedRow = this.rowAt(index);\n            if (indexedRow) {\n                indexedRow.getDocument().before(rowView.getDocument());\n            } else {\n                this.getDocument().append(rowView.getDocument());\n            }\n        } else {\n            this.__rows.push(rowView);\n            this.getDocument().append(rowView.getDocument());\n        }\n        rowView.superview = this;\n\n        return this;\n    }\n\n    /**\n     * Удаляет содержимое сетки\n     * @return {this}\n     */\n    public removeViewContent(): elyGridView {\n        super.removeViewContent();\n        this.__rows.splice(0, this.__rows.length);\n        return this;\n    }\n\n    /**\n     * Возвращает количество строк\n     * @return {number}\n     */\n    public rowsCount(): number {\n        return this.__rows.length;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyStaticGridView.ts                                                 +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyStaticGridViewOptions from \"@options/elyStaticGridViewOptions\";\nimport IPosition from \"@controls/interfaces/IPosition\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyStylesheet from \"@controls/elyStylesheet\";\n\n/**\n * Позиция на сетке\n */\ninterface elyStaticGridViewLocation {\n\n    /**\n     * Строка\n     */\n    row: number;\n\n    /**\n     * Столбец\n     */\n    col: number;\n\n    /**\n     * Индекс\n     */\n    index: number;\n}\n\n/**\n * Элемент отображения: статичная сетка\n *\n * Обсерверы:\n * - col (colView, location, view)\n * @class elyStaticGridView\n * @augments elyRebuildableViewProtocol\n */\n@designable(\"rowsCount\", elyDesignableFieldState.GETSET, \"number\")\n@designable(\"colsCount\", elyDesignableFieldState.GETSET, \"number\")\n@designable(\"flexMapValues\", elyDesignableFieldState.GETSET, \"[string]\")\nexport default class elyStaticGridView extends elyRebuildableViewProtocol {\n\n    [contentView: string]: any;\n\n    /**\n     * Возвращает позицию элемента\n     * @param index\n     * @param rowsCount\n     * @param colsCount\n     */\n    public static indexIn(index: number, rowsCount: number, colsCount: number): elyStaticGridViewLocation {\n        if (index > -1) {\n            const rowIndex = Math.floor(index / rowsCount);\n            const colIndex = index - (rowIndex * colsCount);\n            return {row: rowIndex, col: colIndex, index};\n        }\n        return {row: -1, col: -1, index: -1};\n    }\n\n    /**\n     * Свойство: количество строк\n     * @ignore\n     */\n    public readonly rowsCountProperty: elyObservableProperty<number>;\n\n    /**\n     * Свойство: количество колонок в строке\n     * @ignore\n     */\n    public readonly colsCountProperty: elyObservableProperty<number>;\n\n    /**\n     * Элементы\n     */\n    protected readonly views: elyObservableArray<elyView>;\n\n    /**\n     * Флекс карта\n     * @ignore\n     */\n    protected readonly flexMapProperty: string[] = [];\n\n    /**\n     * Конструктор\n     * @param {{rowsCount?: number, colsCount?: number, flexMap?: *, flexMapValues?: *}} options\n     */\n    public constructor(options: elyStaticGridViewOptions = {}) {\n        super(options);\n        this.denyRebuild(true);\n\n        this.flexContentView = new elyControl();\n        this.getDocument().append(this.flexContentView.getDocument());\n\n        this.views = new elyObservableArray<elyView>();\n        this.views.change(() => this.rebuild());\n\n        this.rowsCountProperty = new elyObservableProperty<number>(3);\n        this.rowsCountProperty.change(() => this.rebuild());\n\n        this.colsCountProperty = new elyObservableProperty<number>(3);\n        this.colsCountProperty.change(() => this.rebuild());\n\n        this.rowsCount(options.rowsCount || 3);\n        this.colsCount(options.colsCount || 3);\n\n        this.addClass(this.identifier());\n\n        if (options.flexMapValues) this.flexMap(...options.flexMapValues);\n        if (options.flexMap) this.flexMap(...options.flexMap);\n        this.setItemsMargin(options.margin || {top: 5, bottom: 5, left: 5, right: 5});\n\n        this.denyRebuild(false);\n        this.rebuild();\n    }\n\n    /**\n     * Устанавливает внитринний отступ элементов сетки\n     * @param margin\n     */\n    public setItemsMargin(margin: IPosition): elyStaticGridView {\n        margin = {...{top: 0, bottom: 0, left: 0, right: 0}, ...margin};\n        const styles = {};\n        elyUtils.applySrc(margin, [\"top\", \"bottom\", \"left\", \"right\"], styles, \"margin-\", (val) => {\n            return typeof val === \"string\" ? val : val + \"px\";\n        });\n        elyStylesheet.global.addClass(this.identifier() + \" .item\", styles);\n        return this;\n    }\n\n    /**\n     * Возвращает количество flexMap значений\n     */\n    public flexMapValuesCount(): number {\n        return this.colsCount();\n    }\n\n    /**\n     * Устанавливает или возвращает элементы flexMap\n     * @param index\n     * @param value\n     */\n    public flexMapValues(index?: number, value?: any): string | elyStaticGridView | string[] {\n        if (index === undefined && value === undefined) return this.flexMapProperty;\n        if (index !== undefined && index !== null) {\n            if (value === undefined) return this.flexMapProperty[index] || \"auto\";\n            if (typeof value === \"string\") {\n                value = value.trim();\n                if (/-?([0-9.])(px|%|rem)/.test(value)) {\n                    this.flexMapProperty[index] = value;\n                } else {\n                    this.flexMapProperty[index] = value + \"%\";\n                }\n            } else if (typeof value === \"number\") {\n                this.flexMapProperty[index] = `${value}%`;\n            } else {\n                this.flexMapProperty[index] = \"auto\";\n            }\n            this.rebuild();\n        }\n        return this;\n    }\n\n    /**\n     * Устанавливает флекс карту\n     * @param data\n     */\n    public flexMap(...data: any[]): elyStaticGridView;\n\n    /**\n     * Удаляет флекс карту\n     */\n    public flexMap(): string[];\n\n    /**\n     * Устанавливает флекс карту\n     * @param data\n     */\n    public flexMap(...data: any[]): string[] | elyStaticGridView {\n        if (data !== undefined && data && data.length > 0) {\n            data.forEach((value, index) => {\n                if (typeof value === \"string\") {\n                    value = value.trim();\n                    if (/-?([0-9.])(px|%|rem)/.test(value)) {\n                        this.flexMapProperty[index] = value;\n                    } else {\n                        this.flexMapProperty[index] = value + \"%\";\n                    }\n                } else if (typeof value === \"number\") {\n                    this.flexMapProperty[index] = `${value}%`;\n                } else {\n                    this.flexMapProperty[index] = \"auto\";\n                }\n            });\n            this.rebuild();\n            return this;\n        }\n        return this.flexMapProperty;\n    }\n\n    /**\n     * Возвращает количество строк\n     */\n    public rowsCount(): number;\n\n    /**\n     * Устанавливает количество строк\n     */\n    public rowsCount(value: number): elyStaticGridView;\n\n    /**\n     * Возвращает и устанавливает количество строк\n     */\n    public rowsCount(value?: number): number | null | elyStaticGridView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.rowsCountProperty);\n    }\n\n    /**\n     * Возвращает количество колонок в строке\n     */\n    public colsCount(): number;\n\n    /**\n     * Устанавливает количество колонок в строке\n     */\n    public colsCount(value: number): elyStaticGridView;\n\n    /**\n     * Возвращает и устанавливает количество колонок в строке\n     */\n    public colsCount(value?: number): number | null | elyStaticGridView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.colsCountProperty);\n    }\n\n    /**\n     * Добавляет элементы\n     * @param views\n     */\n    public add(...views: elyView[]): void {\n        views.forEach(value => this.views.push(value));\n    }\n\n    /**\n     * Возвращает позицию элемента\n     * @param view\n     */\n    public viewLocation(view: elyView): elyStaticGridViewLocation {\n        const index = this.views.indexOf(view);\n        return elyStaticGridView.indexIn(index, this.rowsCount(), this.colsCount());\n    }\n\n    protected __rebuild(): elyRebuildableViewProtocol {\n        this.removeViewContent();\n        for (let i = 0; i < this.rowsCount(); i++) {\n            const rowView = new elyControl();\n            rowView.addClass(\"ef-flex-box\", \"row\");\n            for (let j = 0; j < this.colsCount(); j++) {\n                const index = i * (this.colsCount()) + j;\n                const colView = new elyControl({class: \"item\"});\n                const flexSize = this.flexMapProperty[j] || `${100 / this.colsCount()}%`;\n                colView.getStyle().flex = `1 1 ${flexSize}`;\n                this[`contentView${index}`] = colView;\n                const view = this.views.item(index);\n                if (view) {\n                    colView.addSubView(this.views.item(index));\n                }\n                rowView.addSubView(colView);\n                this.notificate(\"col\", [colView, {col: j, row: i, index} as elyStaticGridViewLocation,\n                    view]);\n            }\n            this.getDocument().append(rowView.getDocument());\n        }\n        this.notificate(\"rebuild\", []);\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efSwitchField.ts                                                     +\n + Файл изменен: 09.02.2019 15:38:01                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efField, efFieldOptions} from \"@controls/input/efField\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Style from \"@enums/Style\";\n\n/**\n * Опции {@link efSwitchField}\n */\nexport interface efSwitchFieldOptions extends efFieldOptions<boolean> {\n    title?: string | elyView;\n    leftLabel?: string | elyView;\n    rightLabel?: string | elyView;\n    switchStyle?: string | Style;\n}\n\n/**\n * Поле ввода переключатель\n * @class efSwitchField\n * @augments {efField<boolean>}\n */\nexport class efSwitchField extends efField<boolean> {\n\n    /**\n     * Левый лейбл\n     * @type {elyObservableProperty<elyView>}\n     * @protected\n     * @ignore\n     */\n    protected readonly __leftLabel: elyObservableProperty<elyView> = new elyObservableProperty<elyView>();\n\n    /**\n     * Правый лейбл\n     * @type {elyObservableProperty<elyView>}\n     * @protected\n     * @ignore\n     */\n    protected readonly __rightLabel: elyObservableProperty<elyView> = new elyObservableProperty<elyView>();\n\n    /**\n     * Элемент переключателя\n     * @protected\n     * @ignore\n     */\n    protected __core: elyControl = new elyControl({class: \"--core\", tag: \"span\"});\n\n    /**\n     * Свойство: стиль переключателя\n     * @ignore\n     */\n    protected readonly switchStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>(null);\n\n    /**\n     * Конструктор\n     * @param {efSwitchFieldOptions} options\n     */\n    public constructor(options: efSwitchFieldOptions = {}) {\n        super({tag: \"label\", ...options});\n        this.addClass(\"ef-switch\");\n        this.getDocument().append(this.getToggleView().getDocument());\n        this.getAccessory().type = \"checkbox\";\n        this.getAccessory().onchange = () => this.value(this.getAccessory().checked);\n\n        this.__leftLabel.change(() => this.rebuild());\n        this.__rightLabel.change(() => this.rebuild());\n\n        this.switchStyleProperty.change((value, oldVal) => {\n            if (oldVal) this.removeClass(`--${oldVal}`);\n            this.addClass(`--${value}`);\n        });\n\n        this.valueProperty.change(value => this.getAccessory().checked = value);\n\n        elyGuard.variable(options.leftLabel, () => this.setLeftLabel(options.leftLabel!));\n        elyGuard.variable(options.rightLabel, () => this.setRightLabel(options.rightLabel!));\n        elyGuard.variable(options.title, () => this.setLeftLabel(options.title!));\n        elyGuard.variable(options.value, () => this.value(options.value!));\n        elyGuard.variable(options.switchStyle, () => this.switchStyle(options.switchStyle!));\n    }\n\n    /**\n     * Очищает значение\n     * @return {this}\n     */\n    public clearValue(): efSwitchField {\n        this.value(false);\n        return this;\n    }\n\n    /**\n     * Устанавливает лейбл слева\n     * @param {string|elyView} view\n     * @return {this}\n     */\n    public setLeftLabel(view: elyView | string): efSwitchField {\n        if (typeof view === \"string\") view = new efTextView({text: view});\n        this.__leftLabel.set(view);\n        return this;\n    }\n\n    /**\n     * Устанавливает лейбл справа\n     * @param {string|elyView} view\n     * @return {this}\n     */\n    public setRightLabel(view: elyView | string): efSwitchField {\n        if (typeof view === \"string\") view = new efTextView({text: view});\n        this.__rightLabel.set(view);\n        return this;\n    }\n\n    /**\n     * Возвращает левый лейбл\n     * @return {elyView|null}\n     */\n    public getLeftLabel(): elyView | null {\n        return this.__leftLabel.get();\n    }\n\n    /**\n     * Возвращает правый лейбл\n     * @return {elyView|null}\n     */\n    public getRightLabel(): elyView | null {\n        return this.__rightLabel.get();\n    }\n\n    /**\n     * Возвращает элемент переключателя\n     * @return {elyView}\n     */\n    public getToggleView(): elyView {\n        return this.__core;\n    }\n\n    /**\n     * Выполняет перестроение элемента\n     * @return {this}\n     */\n    public rebuild(): efSwitchField {\n        this.removeViewContent();\n        this.getDocument().append(this.getAccessory());\n        if (!this.__leftLabel.isNull()) this.getDocument().append(this.__leftLabel.get()!.getDocument());\n        this.getDocument().append(this.getToggleView().getDocument());\n        if (!this.__rightLabel.isNull()) this.getDocument().append(this.__rightLabel.get()!.getDocument());\n        return this;\n    }\n\n    /**\n     * Возвращает стиль переключателя\n     * @returns {Style}\n     */\n    public switchStyle(): Style;\n\n    /**\n     * Устанавливает стиль переключателя\n     * @param {Style|string} value - значение\n     * @returns {this}\n     */\n    public switchStyle(value: Style | string): efSwitchField;\n\n    /**\n     * Возвращает и устанавливает стиль переключателя\n     * @param {Style|string} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public switchStyle(value?: Style | string): Style | null | efSwitchField {\n        if (typeof value === \"string\") value = Style.byName(value);\n        return elyObservableProperty.simplePropertyAccess(this, value, this.switchStyleProperty);\n    }\n}\n\n/**\n * @typedef {Object} efSwitchFieldOptions\n * @property {string|elyView} [title]\n * @property {string|elyView} [leftLabel]\n * @property {string|elyView} [rightLabel]\n * @property {string|Style} [switchStyle]\n * @property {boolean} [value]\n * @property {boolean} [editable = true]\n * @property {string} [placeholder = \"\"]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efContainerView.ts                                                   +\n + Файл изменен: 09.02.2019 19:10:18                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\n\n/**\n * Элемент отображения контейнер с элементом\n * @class efContainerView\n * @template T\n * @augments elyView\n */\nexport class efContainerView<T extends elyView> extends elyView {\n\n    /**\n     * Элемент отображения\n     * @protected\n     * @ignore\n     */\n    protected readonly __theView: T | any;\n\n    /**\n     * Конструктор\n     * @param {T} view\n     * @param options\n     */\n    public constructor(view: T, options: elyViewOptions = {}) {\n        super(options);\n\n        /**\n         * Элемент отображения\n         * @protected\n         * @ignore\n         */\n        this.__theView = view;\n        this.getDocument().append(view.getDocument());\n    }\n\n    /**\n     * Возвращает содержимое контейнера\n     * @return {T}\n     */\n    public getView(): T {\n        return this.__theView;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efTextField.ts                                                       +\n + Файл изменен: 09.02.2019 19:08:52                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efField, efFieldOptions} from \"@controls/input/efField\";\nimport {efContainerView} from \"@controls/layout/efContainerView\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyGuard from \"@core/elyGuard\";\nimport TextFieldType from \"@enums/textFieldType\";\n\n/**\n * Опции {@link efTextField}\n */\nexport interface efTextFieldOptions extends efFieldOptions<string> {\n    fieldType?: TextFieldType | string;\n    rightIconName?: string;\n    leftIconName?: string;\n}\n\n/**\n * Поле ввода текста\n * @class efTextField\n * @augments {elyView}\n */\nexport class efTextField extends efField<string> {\n\n    /**\n     * Правая иконка\n     * @protected\n     * @ignore\n     */\n    protected __rightIconContainerView: efContainerView<efIconView> | null = null;\n\n    /**\n     * Левая иконка\n     * @protected\n     * @ignore\n     */\n    protected __leftIconContainerView: efContainerView<efIconView> | null = null;\n\n    /**\n     * Конструктор\n     * @param {efTextFieldOptions} options\n     */\n    public constructor(options: efTextFieldOptions = {}) {\n        super(options);\n        this.addClass(\"ef-input\");\n        this.getAccessory().onchange = () => {\n            this.value(this.getAccessory().value);\n        };\n\n        this.getAccessory().oninput = (e) => {\n            this.notificate(\"input\", [this.getAccessory().value, e]);\n        };\n\n        this.valueProperty.change((value, oldVal) => {\n            this.getAccessory().value = value;\n        });\n\n        elyGuard.variable(options.value, () => this.value(options.value!));\n        elyGuard.variable(options.fieldType, () => this.fieldType(options.fieldType!));\n        elyGuard.variable<string>(options.rightIconName, (v) => this.setRightIcon(v));\n        elyGuard.variable<string>(options.leftIconName, (v) => this.setLeftIcon(v));\n    }\n\n    /**\n     * Возвращает тип поля текста\n     * @return {TextFieldType}\n     */\n    public fieldType(): TextFieldType;\n\n    /**\n     * Устанавливает тип поля текста\n     * @param {TextFieldType | string} value - значение\n     * @return {this}\n     */\n    public fieldType(value: TextFieldType | string): efTextField;\n\n    /**\n     * Возвращает и устанавливает тип поля текста\n     * @param {TextFieldType | string} [value] - значение\n     * @returns {TextFieldType|this|null}\n     */\n    public fieldType(value?: TextFieldType | string): TextFieldType | null | efTextField {\n        if (value === undefined) return TextFieldType.byName(this.getAccessory().type);\n        if (typeof value === \"string\") value = TextFieldType.byName(value);\n        this.getAccessory().type = value.value;\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: ввод текста\n     *\n     * Имя обсервера: input\n     *\n     * @param {function(value: string, e: Event)} o - наблюдатель\n     */\n    public addInputObserver(o: (value: string, e: Event) => void): efTextField {\n        this.addObserver(\"input\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает отображение правой иконки\n     * @return {efContainerView<efIconView>}\n     */\n    public getRightIconView(): efContainerView<efIconView> | null {\n        return this.__rightIconContainerView;\n    }\n\n    /**\n     * Возвращает отображение левой иконки\n     * @return {efContainerView<efIconView>}\n     */\n    public getLeftIconView(): efContainerView<efIconView> | null {\n        return this.__leftIconContainerView;\n    }\n\n    /**\n     * Устанавливает левую иконку\n     * @param {string} name\n     * @return {this}\n     */\n    public setLeftIcon(name: string): efTextField {\n        this.__leftIconContainerView = new efContainerView<efIconView>(new efIconView({iconName: name}));\n        this.__leftIconContainerView.addClass(\"ef-input-prefix\");\n        return this.__rebuild();\n    }\n\n    /**\n     * Устанавливает правую иконку\n     * @param {string} name\n     * @return {this}\n     */\n    public setRightIcon(name: string): efTextField {\n        this.__rightIconContainerView = new efContainerView<efIconView>(new efIconView({iconName: name}));\n        this.__rightIconContainerView.addClass(\"ef-input-suffix\");\n        return this.__rebuild();\n    }\n\n    /**\n     * Удаляет левую иконку\n     * @return {this}\n     */\n    public removeLeftIcon(): efTextField {\n        this.removeClass(\"with-prefix\");\n        this.__leftIconContainerView = null;\n        return this.__rebuild();\n    }\n\n    /**\n     * Удаляет левую иконку\n     * @return {this}\n     */\n    public removeRightIcon(): efTextField {\n        this.removeClass(\"with-suffix\");\n        this.__rightIconContainerView = null;\n        return this.__rebuild();\n    }\n\n    /**\n     * Возвращает true, если данные валидны\n     * @return {boolean}\n     */\n    public isValid(): boolean {\n        return super.isValid();\n    }\n\n    /**\n     * Возвращает true, если данные пусты\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return super.isEmpty() || this.value()!.trim() === \"\";\n    }\n\n    /**\n     * перестраивает поле ввода\n     * @protected\n     * @ignore\n     */\n    protected __rebuild(): efTextField {\n        this.removeViewContent();\n        this.getDocument().append(this.getAccessory());\n        if (this.getLeftIconView()) {\n            this.addClass(\"with-prefix\");\n            this.getDocument().append(this.getLeftIconView()!.getDocument());\n        }\n        if (this.getRightIconView()) {\n            this.addClass(\"with-suffix\");\n            this.getDocument().append(this.getRightIconView()!.getDocument());\n        }\n        return this;\n    }\n\n}\n\n/**\n * @typedef {Object} efTextFieldOptions\n * @property {TextFieldType|string} [fieldType]\n * @property {string} [value]\n * @property {boolean} [editable = true]\n * @property {string} [placeholder = \"\"]\n * @property {string} [rightIconName = \"\"]\n * @property {string} [leftIconName = \"\"]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyProgressNotificationView.ts                                       +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efNotificationViewOptions, efNotificationView} from \"@controls/notification/efNotificationView\";\nimport elyIconView from \"@controls/text/elyIconView\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elySize from \"@enums/elySize\";\n\n/**\n * Опции\n */\ninterface elyProgressNotificationOptions extends efNotificationViewOptions {\n    /**\n     * Отображаемые сообщения\n     */\n    strings?: string[];\n\n    /**\n     * Заголовок процесса\n     */\n    progressTitle?: string;\n}\n\n/**\n * Шаблон прогресса\n */\nexport default class elyProgressNotificationView extends efNotificationView {\n\n    /**\n     * Коэффициент времени, необходимы для переключения строки\n     */\n    public static STRINGS_TIME: number = 3000;\n\n    /**\n     * Заголовок\n     */\n    public readonly progressTitleView: elyTextView;\n\n    /**\n     * Текст\n     */\n    public readonly textView: elyTextView;\n\n    /**\n     * Иконка\n     */\n    public readonly iconView: elyIconView;\n\n    /**\n     * Индексация строки\n     * @ignore\n     */\n    private __currentStringIndex: number = 1;\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    constructor(options: elyProgressNotificationOptions = {}) {\n        super(options);\n\n        if (!options.strings || options.strings.length === 0)\n            options.strings = [\"Пожалуйста, полождите...\"];\n\n        this.iconView          = new elyIconView({iconName: \"refresh\", iconSize: 60, iconSpinning: true});\n        this.progressTitleView = new elyTextView({\n            text: options.progressTitle || \"Загрузка...\", textSize: elySize.middle,\n        });\n        this.textView          = new elyTextView({text: options.strings[0]});\n\n        const timer = setInterval(() => {\n            if (this.__currentStringIndex === options.strings!.length) {\n                clearInterval(timer);\n                return;\n            }\n            this.textView.fadeOut(() => {\n                this.textView.text(options.strings![this.__currentStringIndex]);\n                this.textView.fadeIn();\n                this.__currentStringIndex++;\n            });\n        }, elyProgressNotificationView.STRINGS_TIME * this.__currentStringIndex);\n\n        this.closable(false);\n        this.contentView.getStyle().textAlign = \"center\";\n        this.contentView.addSubView(this.iconView);\n        this.contentView.addSubView(this.progressTitleView);\n        this.contentView.addSubView(this.textView);\n    }\n\n    /**\n     * Устанавливает заголовок загрузки\n     * @param text\n     */\n    public progressTitle(text: string): elyProgressNotificationView {\n        this.progressTitleView.text(text);\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efLinkTextView.ts                                                    +\n + Файл изменен: 08.02.2019 00:48:47                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efTextView, efTextViewOptions} from \"@controls/text/efTextView\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport efSerializableProtocol from \"@protocols/efSerializableProtocol\";\n\n/**\n * Опции {@link efTextView}\n */\nexport interface efLinkTextViewOptions extends efTextViewOptions {\n    url: string;\n}\n\n/**\n * Текст с ссылкой\n * @class efLinkTextView\n * @augments {efTextView}\n */\nexport class efLinkTextView extends efTextView implements efSerializableProtocol<efLinkTextView> {\n    /**\n     * Десериализует объект\n     * @param {string} raw - сериализованный объект\n     * @return {efLinkTextView}\n     */\n    public static deserialize<T>(raw: string): efLinkTextView | null {\n        return new efLinkTextView(JSON.parse(raw));\n    }\n\n    /**\n     * Свойство: адрес ссылки\n     * @type {elyObservableProperty<string>}\n     */\n    public readonly urlProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>(\"#\").change(value => {\n        this.attribute(\"href\", value);\n    });\n\n    /**\n     * Конструктор\n     * @param {efLinkTextViewOptions} options\n     */\n    public constructor(options: efLinkTextViewOptions = {url: \"#\"}) {\n        super(options);\n        this.url(options.url);\n    }\n\n    /**\n     * Возвращает адрес ссылки\n     * @returns {string}\n     */\n    public url(): string;\n\n    /**\n     * Устанавливает адрес ссылки\n     * @param {string} value - значение\n     * @returns {this}\n     */\n    public url(value: string): efLinkTextView;\n\n    /**\n     * Возвращает и устанавливает адрес ссылки\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public url(value?: string): string | null | efLinkTextView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.urlProperty);\n    }\n\n    /**\n     * Сериализует объект\n     * @return {string}\n     */\n    public serialize(): string {\n        return JSON.stringify({\n            text: this.text(),\n            textCenter: this.textCenter(),\n            textSize: this.textSize().value,\n            textStyle: this.textStyle().value,\n            textWeight: this.textWeight().value,\n            url: this.url(),\n        });\n    }\n}\n\n/**\n * @typedef {efTextViewOptions} efLinkTextViewOptions\n * @property {string} [url = \"#\"]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: efImageView.ts                                                       +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\n\n/**\n * Опции {@link efImageView}\n */\nexport interface efImageViewOptions extends elyViewOptions {\n    url?: string;\n}\n\n/**\n * Элемент отображения: Изображение\n * @version 1.0\n *\n * Events:\n * - loaded: Изображение загружено\n */\nexport class efImageView extends elyView {\n\n    /**\n     * Свойство: ссылка на изображение\n     * @ignore\n     * @protected\n     */\n    protected readonly __urlProperty: elyObservableProperty<string>\n        = new elyObservableProperty<string>().change((newValue) => this.getDocument().src = newValue);\n\n    /**\n     * Конструтор\n     * @param {efImageViewOptions} options - опции\n     */\n    public constructor(options: efImageViewOptions = {}) {\n        super({tag: \"img\", ...options});\n        this.getDocument().onload = (e: any) => this.notificate(\"loaded\", [e]);\n        if (options.url) this.url(options.url);\n    }\n\n    /**\n     * Возвращает свойство: ссылка на изображение\n     * @return {elyObservableProperty<string>}\n     */\n    public getUrlProperty(): elyObservableProperty<string> {\n        return this.__urlProperty;\n    }\n\n    /**\n     * Возвращает ссылка на изображение\n     * @returns {string}\n     */\n    public url(): string;\n\n    /**\n     * Устанавливает ссылка на изображение\n     * @param {string} value - значение\n     * @returns {this}\n     */\n    public url(value: string): efImageView;\n\n    /**\n     * Возвращает и устанавливает ссылка на изображение\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public url(value?: string): string | null | efImageView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__urlProperty);\n    }\n\n    /**\n     * Добавляет наблюдатель: изображение загружено\n     *\n     * Имя обсервера: loaded\n     *\n     * @param o - наблюдатель\n     */\n    public addLoadedObserver(o: () => void): efImageView {\n        this.addObserver(\"loaded\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает корневой элемент\n     */\n    public getDocument(): HTMLImageElement {\n        return this.__view as HTMLImageElement;\n    }\n}\n\n/**\n * @typedef {Object} efImageViewOptions\n * @property {string} [url]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: efModalView.ts                                                       +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efApplication from \"@app/app/efApplication\";\nimport elyControl from \"@controls/action/elyControl\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport {efTextViewContainer} from \"@controls/text/efTextViewContainer\";\nimport elyView from \"@core/controls/elyView\";\nimport elyViewOptions from \"@core/controls/elyViewOptions\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport Style from \"@enums/Style\";\n\n/**\n * Опции {@link efModalView}\n */\nexport interface efModalViewOptions extends elyViewOptions {\n\n    /**\n     * Заголовок модального окна\n     */\n    title?: string;\n\n    /**\n     * Содержимое\n     */\n    content?: elyView;\n\n    /**\n     * Возможность скрытия\n     */\n    closable?: boolean;\n\n    /**\n     * Стиль модального окна\n     */\n    modalStyle?: Style;\n}\n\n/**w\n * Элемент отображения: Модальное окно\n * @version 1.0\n * @class efModalView\n * @augments {elyView}\n */\nexport class efModalView extends elyView {\n\n    /**\n     * Текущее окно\n     * @type {efModalView|null}\n     */\n    public static currentModal: efModalView | null = null;\n\n    /**\n     * Очередь из объектов\n     * @protected\n     * @type {efModalView[]}\n     */\n    protected static queue: efModalView[] = [];\n\n    /**\n     * Открывает следующее модальное окно из стэка\n     * @protected\n     * @static\n     */\n    protected static next(): void {\n        if (efModalView.queue.length > 0 && efModalView.currentModal === null) {\n            efModalView.currentModal = efModalView.queue.pop()!;\n            efApplication.default.getApplicationDocument().getBody().addSubView(efModalView.currentModal);\n            efModalView.currentModal.fadeIn();\n        }\n    }\n\n    /**\n     * Элемент модального окна\n     * @readonly\n     * @type {elyControl}\n     */\n    protected readonly __containerView: elyControl\n        = new elyControl({class: \"ef-modal-container\"});\n\n    /**\n     * Кнопка закрытия\n     * @type {efIconView}\n     * @readonly\n     */\n    protected readonly __closeButtonView: efIconView\n        = new efIconView({iconName: \"close\", class: \"close\"});\n\n    /**\n     * Элемент заголовка\n     * @readonly\n     * @type {efTextViewContainer}\n     */\n    protected readonly __titleTextContainerView: efTextViewContainer\n        = new efTextViewContainer({class: \"title\"});\n\n    /**\n     * Элемент контента\n     * @type {elyView}\n     * @readonly\n     * @protected\n     */\n    protected readonly __modalContentView: elyView\n        = new elyControl({class: \"content\"});\n\n    /**\n     * Свойство: стиль модального окна\n     * @ignore\n     * @protected\n     */\n    protected readonly __modalStyleProperty: elyObservableProperty<Style>\n        = new elyObservableProperty<Style>(Style.primary).change((value, oldVal) => {\n        if (oldVal) this.getTitleTextContainerView().removeClass(`bg-${oldVal.value}`);\n        this.getTitleTextContainerView().addClass(`bg-${value.value}`);\n    });\n\n    /**\n     * Свойство: флаг возможности закрытия окна\n     * @ignore\n     * @protected\n     */\n    protected readonly __modalClosableProperty: elyObservableProperty<boolean>\n        = new elyObservableProperty<boolean>(true).change(value => {\n        this.getCloseButtonView().hidden(!value);\n    });\n\n    /**\n     * Свойство: элемент - содержимое модального окна\n     * @ignore\n     * @protected\n     */\n    protected readonly __modalContentProperty: elyObservableProperty<elyView>\n        = new elyObservableProperty<elyView>(elyControl.empty()).change((newValue) => {\n        this.getContentView().removeViewContent();\n        this.getContentView().getDocument().append(newValue.getDocument());\n    });\n\n    /**\n     * Конструктор\n     * @param {efModalViewOptions} options - опции\n     */\n    public constructor(options: efModalViewOptions = {}) {\n        super(options);\n        this.addClass(\"ef-modal\");\n\n        this.getCloseButtonView().addObserver(\"click\", () => this.dismiss());\n\n        this.getTitleTextContainerView().getDocument().append(this.getCloseButtonView().getDocument());\n        this.getContainerView().addSubView(this.getTitleTextContainerView());\n        this.getContainerView().addSubView(this.getContentView());\n        this.getDocument().append(this.getContainerView().getDocument());\n\n        // Set\n        this.title(options.title || \"Modal\");\n        this.content(options.content || elyControl.empty());\n\n        this.modalStyle(Style.byName(\"default\"));\n        this.closable(true);\n\n        elyGuard.variable<boolean>(options.closable, value => this.closable(value));\n        elyGuard.variable<Style>(options.modalStyle, value => this.modalStyle(value));\n    }\n\n    /**\n     * Отображает модальное окно\n     * @return\n     */\n    public present(): void {\n        this.notificate(\"present\", [this]);\n        efModalView.queue.push(this);\n        efModalView.next();\n    }\n\n    /**\n     * Скрывает модальное окно\n     * @param {boolean} [force = false]\n     * @return\n     *\n     * Модальное окно может быть \"незакрываемым\", тогда\n     * удалить его можно только используя параметр `force`.\n     *\n     *\n     *     myModal.dismiss(true); // Force dismiss modal\n     *\n     *\n     */\n    public dismiss(force: boolean = false): void {\n        if (this.closable() || force) {\n            this.notificate(\"dismiss\", [this]);\n            this.fadeOut(() => {\n                efApplication.default.getApplicationDocument().getBody().removeSubView(this);\n                efModalView.currentModal = null;\n                efModalView.next();\n            });\n        }\n    }\n\n    /**\n     * Возвращает элемент отображения заголовка\n     * @return {efTextView}\n     */\n    public getTitleTextContainerView(): efTextViewContainer {\n        return this.__titleTextContainerView;\n    }\n\n    /**\n     * Возвращает элемент отображения содержимого модального окна\n     * @return {elyView}\n     */\n    public getContentView(): elyView {\n        return this.__modalContentView;\n    }\n\n    /**\n     * Возвращает элемент отображения - контейнер модального окна\n     * @return {elyControl}\n     */\n    public getContainerView(): elyControl {\n        return this.__containerView;\n    }\n\n    /**\n     * Возвращает элемент отображения иконки закрытия модального окна\n     * @return {efIconView}\n     */\n    public getCloseButtonView(): efIconView {\n        return this.__closeButtonView;\n    }\n\n    /**\n     * Возвращает заголовок модального окна\n     * @return {string}\n     */\n    public title(): string;\n\n    /**\n     * Устанавливает заголовок модального окна\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public title(value: string): efModalView;\n\n    /**\n     * Возвращает и устанавливает заголовок модального окна\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public title(value?: string): string | null | efModalView {\n        if (value === undefined) return this.getTitleTextContainerView().getTextView().text();\n        this.getTitleTextContainerView().getTextView().text(value);\n        return this;\n    }\n\n    /**\n     * Возвращает свойство: элемент - содержимое модального окна\n     * @return {elyObservableProperty<elyView>}\n     */\n    public getModalContentProperty(): elyObservableProperty<elyView> {\n        return this.__modalContentProperty;\n    }\n\n    /**\n     * Возвращает элемент - содержимое модального окна\n     * @returns {elyView}\n     */\n    public content(): elyView;\n\n    /**\n     * Устанавливает элемент - содержимое модального окна\n     * @param {elyView} value - значение\n     * @returns {this}\n     */\n    public content(value: elyView): efModalView;\n\n    /**\n     * Возвращает и устанавливает элемент - содержимое модального окна\n     * @param {elyView} [value] - значение\n     * @returns {elyView|this|null}\n     */\n    public content(value?: elyView): elyView | null | efModalView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__modalContentProperty);\n    }\n\n    /**\n     * Возвращает свойство: флаг возможности закрытия окна\n     * @return {elyObservableProperty<boolean>}\n     */\n    public getModalClosableProperty(): elyObservableProperty<boolean> {\n        return this.__modalClosableProperty;\n    }\n\n    /**\n     * Возвращает флаг возможности закрытия окна\n     * @returns {boolean}\n     */\n    public closable(): boolean;\n\n    /**\n     * Устанавливает флаг возможности закрытия окна\n     * @param {boolean} value - значение\n     * @returns {this}\n     */\n    public closable(value: boolean): efModalView;\n\n    /**\n     * Возвращает и устанавливает флаг возможности закрытия окна\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public closable(value?: boolean): boolean | null | efModalView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__modalClosableProperty);\n    }\n\n    /**\n     * Возвращает свойство: стиль модального окна\n     * @return {elyObservableProperty<Style>}\n     */\n    public getModalStyleProperty(): elyObservableProperty<Style> {\n        return this.__modalStyleProperty;\n    }\n\n    /**\n     * Возвращает стиль модального окна\n     * @returns {Style}\n     */\n    public modalStyle(): Style;\n\n    /**\n     * Устанавливает стиль модального окна\n     * @param {Style} value - значение\n     * @returns {this}\n     */\n    public modalStyle(value: Style): efModalView;\n\n    /**\n     * Возвращает и устанавливает стиль модального окна\n     * @param {Style} [value] - значение\n     * @returns {Style|this|null}\n     */\n    public modalStyle(value?: Style): Style | null | efModalView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.__modalStyleProperty);\n    }\n}\n\n/**\n * @typedef {Object} efModalViewOptions\n * @property {string} [title]\n * @property {elyView} [content]\n * @property {boolean} [closable = true]\n * @property {Style} [modalStyle]\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efProtocol.ts                                                        +\n + Файл изменен: 08.01.2019 00:55:09                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nexport class efProtocol {\n    // empty\n}\n\n/**\n * Возвращает true, если объект obj подчиняется протоколу protocol\n * @param {*} obj\n * @param protocol\n */\nexport function hasProtocol<T extends efProtocol>(obj: any, protocol: typeof efProtocol): obj is T {\n    for (const name of Object.getOwnPropertyNames(protocol.prototype)) {\n        if (name === \"constructor\") continue;\n        if (obj[name] === undefined) return false;\n    }\n    return true;\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efErrorDisplayProtocolcol.ts                                         +\n + Файл изменен: 08.01.2019 00:50:08                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efProtocol} from \"@protocols/efProtocol\";\n\n/**\n * Протокол объекта, который может быть помечен, как \"объект с ошибкой\"\n * @class efErrorDisplayProtocol\n */\nexport class efErrorDisplayProtocol extends efProtocol {\n    /**\n     * Помечает объект как неисправный\n     * @param {boolean} flag\n     * @return {this}\n     */\n    public error(flag: boolean): efErrorDisplayProtocol {\n        throw Error(`Method isValid is not implemented in class ${this}!`);\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efValidatableProtocol.ts                                             +\n + Файл изменен: 08.01.2019 00:36:49                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efProtocol} from \"@protocols/efProtocol\";\n\n/**\n * Протокол валидации данных\n * @class {efValidatableProtocol}\n */\nexport class efValidatableProtocol extends efProtocol {\n\n    /**\n     * Возвращает true, если данные валидны\n     * @return {boolean}\n     */\n    public isValid(): boolean {\n        throw Error(`Method isValid is not implemented in class ${this}!`);\n    }\n\n    /**\n     * Возвращает true, если данные пусты\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        throw Error(`Method isValid is not implemented in class ${this}!`);\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: efValueProtocol.ts                                                   +\n + Файл изменен: 07.01.2019 23:36:33                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport {efProtocol} from \"@protocols/efProtocol\";\n\n/**\n * Протокол элемента ввода\n * @class efValueProtocol\n * @template T\n */\nexport class efValueProtocol<T> extends efProtocol {\n\n    /**\n     * Свойство: значение поля ввода\n     * @type {elyObservableProperty<T>}\n     */\n    public readonly valueProperty: elyObservableProperty<T> = new elyObservableProperty<T>();\n\n    /**\n     * Возвращает значение поля ввода\n     * @returns {T}\n     */\n    public value(): T | null;\n\n    /**\n     * Устанавливает значение поля ввода\n     * @param {T} value - значение\n     * @returns {this}\n     */\n    public value(value: T | null): efValueProtocol<T>;\n\n    /**\n     * Возвращает и устанавливает значение поля ввода\n     * @param {T|null} [value] - значение\n     * @returns {T|this|null}\n     */\n    public value(value?: T | null): T | null | efValueProtocol<T> {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.valueProperty);\n    }\n\n    /**\n     * Очищает значение\n     * @return {this}\n     */\n    public clearValue(): efValueProtocol<T> {\n        this.value(null);\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyFormView.ts                                                       +\n + Файл изменен: 06.01.2019 20:14:49                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport {efButton} from \"@controls/action/efButton\";\nimport elyGridView from \"@controls/flex/elyGridView\";\nimport elyFieldProtocol from \"@controls/protocols/elyFieldProtocol\";\nimport elyView from \"@core/controls/elyView\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyObservableDictionary from \"@core/observable/properties/elyObservableDictionary\";\nimport elyFlexGridViewOptions from \"@options/elyFlexGridViewOptions\";\nimport {efErrorDisplayProtocol} from \"@protocols/efErrorDisplayProtocol\";\nimport {hasProtocol} from \"@protocols/efProtocol\";\nimport {efValidatableProtocol} from \"@protocols/efValidatableProtocol\";\nimport {efValueProtocol} from \"@protocols/efValueProtocol\";\n\n/**\n * Опции\n * @type {elyFlexGridViewOptions}\n */\nexport interface elyFromViewOptions extends elyFlexGridViewOptions {\n    checkEmpty?: boolean;\n    checkValidation?: boolean;\n    detectSubmitButton?: boolean;\n}\n\n/**\n * Форма\n * @class elyFormView\n * @augments {elyGridView}\n */\nexport class elyFormView extends elyView {\n\n    /**\n     * Элементы формы\n     * @type {elyObservableDictionary<elyView>}\n     */\n    public readonly accessories: elyObservableDictionary<elyView> = new elyObservableDictionary<elyView>();\n\n    /**\n     * Свойство: флаг проверки полей на пустоту\n     * @ignore\n     * @protected\n     */\n    protected __checkEmpty: boolean = true;\n\n    /**\n     * Сетка\n     * @protected\n     * @readonly\n     * @type {elyGridView}\n     */\n    protected readonly __gridView: elyGridView;\n\n    /**\n     * Свойство: флаг автоматического определения кнопки submit\n     * @ignore\n     * @protected\n     */\n    protected __detectSubmitButton: boolean = true;\n\n    /**\n     * Форма в процессе\n     * @type {boolean}\n     * @protected\n     */\n    protected __inProgress: boolean = false;\n\n    /**\n     * Свойство: флаг проверки валидации\n     * @ignore\n     * @protected\n     */\n    protected __checkValidation: boolean = true;\n\n    /**\n     * Конструктор\n     * @param {elyFlexGridViewOptions} props - параметры\n     */\n    public constructor(props: elyFromViewOptions = {}) {\n        super({});\n        this.__gridView = new elyGridView(props);\n        this.__checkEmpty = props.checkEmpty === undefined ? true : props.checkEmpty;\n        this.__checkValidation = props.checkValidation === undefined ? true : props.checkValidation;\n        this.__detectSubmitButton = props.detectSubmitButton === undefined ? true : props.detectSubmitButton;\n\n        this.addClass(\"ef-form\");\n        this.getDocument().append(this.__gridView.getDocument());\n    }\n\n    /**\n     * Добавляет элементы\n     * @param {*} items\n     */\n    public add(items: { [name: string]: elyView }): elyFormView {\n        elyUtils.forEach(items, (index, value) => {\n            this.accessories.add(index, value);\n            if (index === \"submit\" && value instanceof efButton)\n                value.click(() => this.submit());\n        });\n        this.__gridView.add(...elyUtils.values(items));\n        return this;\n    }\n\n    /**\n     * Подтвержает форму\n     * @param callback\n     */\n    public submit(callback?: (\n        values: { [name: string]: any } | null,\n        error: { name: string, field: efValueProtocol<any>, message: string } | null,\n    ) => void): elyFormView {\n        if (this.__inProgress) return this;\n        this.__inProgress = true;\n        const values: { [name: string]: any } = {};\n        let error = null;\n        this.forEachAccessoryField((name, field) => {\n            let val = null;\n            if (hasProtocol<efValidatableProtocol>(field, efValidatableProtocol)) {\n                if (this.checkEmpty() && field.isEmpty()) {\n                    error = {name, field, message: \"empty\"};\n                    if (hasProtocol<efErrorDisplayProtocol>(field, efErrorDisplayProtocol)) field.error(true);\n                } else if (this.checkValidation() && !field.isValid()) {\n                    error = {name, field, message: \"invalid\"};\n                    if (hasProtocol<efErrorDisplayProtocol>(field, efErrorDisplayProtocol)) field.error(true);\n                } else {\n                    val = field.value();\n                }\n            } else {\n                val = field.value();\n            }\n            values[name] = val;\n        });\n        this.__inProgress = false;\n        this.notificate(\"submit\", [error ? null : values, error]);\n        if (callback) callback(error ? null : values, error);\n        return this;\n    }\n\n    /**\n     * Добавляет наблюдатель: подтверждение формы\n     *\n     * Имя обсервера: submit\n     *\n     * @param {{function(values: *, error: {name: string, field: elyFieldProtocol<*>, message: string})}} o\n     */\n    public addSubmitObserver(o: (\n        values: { [name: string]: any },\n        error: { name: string, field: elyFieldProtocol<any>, message: string } | null,\n    ) => void)\n        : elyFormView {\n        this.addObserver(\"submit\", o);\n        return this;\n    }\n\n    /**\n     * Возвращает флаг автоматического определения кнопки submit\n     * @return {boolean}\n     */\n    public detectSubmitButton(): boolean;\n\n    /**\n     * Устанавливает флаг автоматического определения кнопки submit\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public detectSubmitButton(value: boolean): elyFormView;\n\n    /**\n     * Возвращает и устанавливает флаг автоматического определения кнопки submit\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public detectSubmitButton(value?: boolean): boolean | null | elyFormView {\n        if (value === undefined) return this.__detectSubmitButton;\n        this.__detectSubmitButton = value;\n        return this;\n    }\n\n    /**\n     * Возвращает флаг проверки полей на пустоту\n     * @return {boolean}\n     */\n    public checkEmpty(): boolean;\n\n    /**\n     * Устанавливает флаг проверки полей на пустоту\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public checkEmpty(value: boolean): elyFormView;\n\n    /**\n     * Возвращает и устанавливает флаг проверки полей на пустоту\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public checkEmpty(value?: boolean): boolean | null | elyFormView {\n        if (value === undefined) return this.__checkEmpty;\n        this.__checkEmpty = value;\n        return this;\n    }\n\n    /**\n     * Цикл по всем элементам формы\n     * @param {{function(name: string, view: elyView)}} callback\n     */\n    public forEachAccessory(callback: (name: string, view: elyView) => void) {\n        this.accessories.forEach((key, value) => {\n            callback(key, value);\n        });\n    }\n\n    /**\n     * Цикл по всем полям формы\n     * @param {{function(name: string, field: efValueProtocol<*>)}} callback\n     */\n    public forEachAccessoryField(callback: (name: string, field: efValueProtocol<any>) => void) {\n        this.forEachAccessory((name, view) => {\n            if (hasProtocol<efValueProtocol<any>>(view, efValueProtocol)) {\n                callback(name, view);\n            }\n        });\n    }\n\n    /**\n     * Возвращает флаг проверки валидации\n     * @return {boolean}\n     */\n    public checkValidation(): boolean;\n\n    /**\n     * Устанавливает флаг проверки валидации\n     * @param {boolean} value - значение\n     * @return {this}\n     */\n    public checkValidation(value: boolean): elyFormView;\n\n    /**\n     * Возвращает и устанавливает флаг проверки валидации\n     * @param {boolean} [value] - значение\n     * @returns {boolean|this|null}\n     */\n    public checkValidation(value?: boolean): boolean | null | elyFormView {\n        if (value === undefined) return this.__checkValidation;\n        this.__checkValidation = value;\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyScrollView.ts                                                     +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyScrollViewOptions from \"@options/elyScrollViewOptions\";\n\n/**\n * Элемент с прокруткой\n */\nexport default class elyScrollView extends elyControl {\n\n    /**\n     * Свойство:  скроллинг по вертикали\n     * @ignore\n     */\n    protected readonly scrollVerticalProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Свойство:  скроллинг по горизонтали\n     * @ignore\n     */\n    protected readonly scrollHorizontalProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Свойство: флаг фиксации элементов прокрутки в центре блока\n     * @ignore\n     */\n    protected readonly scrollSnapCenterProperty: elyObservableProperty<boolean>;\n\n    /**\n     * Конструктор\n     * @param option\n     */\n    public constructor(option: elyScrollViewOptions = {}) {\n        super({class: \"ef-scroll-view\"});\n\n        this.scrollHorizontalProperty = new elyObservableProperty<boolean>();\n        this.scrollVerticalProperty   = new elyObservableProperty<boolean>();\n        this.scrollSnapCenterProperty = new elyObservableProperty<boolean>();\n\n        this.scrollHorizontalProperty.change((newValue) => {\n            if (newValue) this.addClass(\"horizontal\");\n            else this.removeClass(\"horizontal\");\n        });\n        this.scrollVerticalProperty.change((newValue) => {\n            if (newValue) this.addClass(\"vertical\");\n            else this.removeClass(\"vertical\");\n        });\n        this.scrollSnapCenterProperty.change((newValue) => {\n            if (newValue) this.addClass(\"mnd-center\");\n            else this.removeClass(\"mnd-center\");\n        });\n\n        this.scrollHorizontal(option.scrollHorizontal || false);\n        this.scrollVertical(option.scrollVertical || false);\n        this.scrollSnapCenter(option.scrollSnapCenter || false);\n    }\n\n    /**\n     * Возвращает скроллинг по вертикали\n     */\n    public scrollVertical(): boolean;\n\n    /**\n     * Устанавливает скроллинг по вертикали\n     */\n    public scrollVertical(value: boolean): elyScrollView;\n\n    /**\n     * Возвращает и устанавливает скроллинг по вертикали\n     */\n    public scrollVertical(value?: boolean): boolean | null | elyScrollView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.scrollVerticalProperty);\n    }\n\n    /**\n     * Возвращает скроллинг по вертикали\n     */\n    public scrollHorizontal(): boolean;\n\n    /**\n     * Устанавливает скроллинг по горизонтали\n     */\n    public scrollHorizontal(value: boolean): elyScrollView;\n\n    /**\n     * Возвращает и устанавливает скроллинг по горизонтали\n     */\n    public scrollHorizontal(value?: boolean): boolean | null | elyScrollView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.scrollHorizontalProperty);\n    }\n\n    /**\n     * Возвращает флаг фиксации элементов прокрутки в центре блока\n     */\n    public scrollSnapCenter(): boolean;\n\n    /**\n     * Устанавливает флаг фиксации элементов прокрутки в центре блока\n     */\n    public scrollSnapCenter(value: boolean): elyScrollView;\n\n    /**\n     * Возвращает и устанавливает флаг фиксации элементов прокрутки в центре блока\n     */\n    public scrollSnapCenter(value?: boolean): boolean | null | elyScrollView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.scrollSnapCenterProperty);\n    }\n\n    /**\n     * Прокручивает объект элементы\n     * @param h\n     * @param v\n     */\n    public scrollBy(h: number, v: number = 0): elyScrollView {\n        this.getDocument().scrollBy({top: h, left: v, behavior: \"smooth\"});\n        return this;\n    }\n\n    /**\n     * Прокручивает объект горизонтально\n     * @param value\n     */\n    public scrollHorizontalBy(value: number): elyScrollView {\n        return this.scrollBy(value, 0);\n    }\n\n    /**\n     * Прокручивает объект вертикально\n     * @param value\n     */\n    public scrollVerticalBy(value: number): elyScrollView {\n        return this.scrollBy(value, 0);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyTableView.ts                                                      +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport elyRebuildableViewProtocol from \"@controls/protocols/elyRebuildableViewProtocol\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyObservableProperty from \"@core/observable/properties/elyObservableProperty\";\nimport elyTableViewOptions from \"@options/elyTableViewOptions\";\n\n/**\n * Элемент отображения: Таблица\n * @version 1.0\n * @deprecated\n */\nexport default class elyTableView extends elyRebuildableViewProtocol {\n\n    /**\n     * Создает строку\n     */\n    public static createTableRowView(): elyControl {\n        return new elyControl({tag: \"tr\"});\n    }\n\n    /**\n     * Создает колонку\n     * @param isHeader\n     */\n    public static createTableColumnView(isHeader: boolean = false): elyControl {\n        return new elyControl({tag: isHeader ? \"th\" : \"td\"});\n    }\n\n    /**\n     * Элемент заголовка таблицы\n     */\n    public readonly titleView: elyTextView;\n\n    /**\n     * Элемент шапки таблицы\n     */\n    public readonly headView: elyControl;\n\n    /**\n     * Элемент тела таблицы\n     */\n    public readonly bodyView: elyControl;\n\n    /**\n     * Свойство заголовка\n     * @ignore\n     */\n    protected readonly titleProperty: elyObservableProperty<string>;\n\n    /**\n     * Заголовочная строка\n     * @ignore\n     */\n    protected headerRow: elyView[];\n\n    /**\n     * Строки таблицы\n     * @ignore\n     */\n    protected rows: elyView[][];\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: elyTableViewOptions = {}) {\n        super({tag: \"table\", ...options});\n\n        this.rows          = [];\n        this.headerRow     = [];\n        this.titleView     = new elyTextView({tag: \"caption\"});\n        this.headView      = new elyControl({tag: \"thead\"});\n        this.bodyView      = new elyControl({tag: \"tbody\"});\n        this.titleProperty = new elyObservableProperty<string>();\n        this.titleProperty.change((newValue) => this.titleView.text(newValue));\n        if (options.title) this.title(options.title);\n\n        this.rebuild();\n    }\n\n    /**\n     * Устанавливает или возвращает заголовок\n     * @param value\n     */\n    public title(value?: string): string | null | elyTableView {\n        return elyObservableProperty.simplePropertyAccess(this, value, this.titleProperty);\n    }\n\n    /**\n     * Добавляет строку\n     * @param columns\n     */\n    public addRow(...columns: elyView[]): elyTableView {\n        this.rows.push(columns);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Добавляет строку и индекс\n     * @param index\n     * @param columns\n     */\n    public addRowIndex(index: number, ...columns: elyView[]): elyTableView {\n        this.rows.splice(index, 0, columns);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Устанавливает заголовочную строку\n     * @param columns\n     */\n    public setHeaderRow(...columns: elyView[]): elyTableView {\n        this.headerRow.splice(0, this.headerRow.length);\n        this.headerRow.splice(0, 0, ...columns);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Добавляет колонку в заголовчную строку\n     * @param column\n     */\n    public addHeaderColumn(column: elyView): elyTableView {\n        this.headerRow.push(column);\n        this.rebuild();\n        return this;\n    }\n\n    /**\n     * Реализация перестроения\n     * @ignore\n     * @private\n     */\n    protected __rebuild(): elyRebuildableViewProtocol {\n        this.removeViewContent();\n        this.getDocument().appendChild(this.titleView.getDocument());\n        this.getDocument().appendChild(this.headView.getDocument());\n        this.headView.removeViewContent();\n        this.getDocument().appendChild(this.bodyView.getDocument());\n        this.bodyView.removeViewContent();\n\n        const rowView = elyTableView.createTableRowView();\n        for (const hview of this.headerRow) {\n            rowView.addSubView(elyTableView.createTableColumnView(true).addSubView(hview));\n        }\n        this.headView.addSubView(rowView);\n\n        for (const row of this.rows) {\n            const rowView = elyTableView.createTableRowView();\n            for (const item of row) {\n                rowView.addSubView(elyTableView.createTableColumnView().addSubView(item));\n            }\n            this.bodyView.addSubView(rowView);\n        }\n\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elySimpleJSONParser.ts                                               +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyXLogger from \"@core/utils/elyXLogger\";\n\n/**\n * Упрощенный парсер JSON без использованию исплюченй\n */\nexport default class elySimpleJSONParser {\n\n    /**\n     * JSON парсер, не выкидывающий исключений. В случае неудачного парсинга\n     * аргумент возвратной функции будет принимать значение null.\n     * Ошибка парсинга JSON будет выведена в консоль с уровнем error (3).\n     *\n     * @param str\n     * @param callback\n     */\n    public static parse(str: string, callback: (obj: any | null) => void): void {\n        try {\n            const val = JSON.parse(str);\n            callback(val);\n        } catch (e) {\n            elyXLogger.default.error(\"JSON Parsing error: \" + e.message);\n            callback(null);\n        }\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyTime.ts                                                           +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/**\n * Разница времени\n */\nexport interface elyTimeDifferences {\n\n    /**\n     * Количество дней\n     */\n    days: number;\n\n    /**\n     * Количство часов\n     */\n    hours: number;\n\n    /**\n     * Количество минут\n     */\n    minutes: number;\n\n    /**\n     * Количество секунд\n     */\n    seconds: number;\n\n    /**\n     * Исходное значение разницы\n     */\n    source: number;\n}\n\n/**\n * Модуль elyFlat для работы со временем\n * @class elyTime\n */\nexport class elyTime {\n\n    /**\n     * Список дней ндели\n     * @type {string[]}\n     *\n     * - \"Понедельник\"\n     * - \"Вторник\"\n     * - \"Среда\"\n     * - \"Четверг\"\n     * - \"Пятница\"\n     * - \"Суббота\"\n     * - \"Воскресение\"\n     */\n    public static weekDaysList: string[] = [\n        \"Понедельник\", \"Вторник\", \"Среда\",\n        \"Четверг\", \"Пятница\", \"Суббота\", \"Воскресение\",\n    ];\n\n    /**\n     * Список коротких названий дней недели\n     * @type {string[]}\n     *\n     * - \"Пн\"\n     * - \"Вт\"\n     * - \"Ср\"\n     * - \"Чт\"\n     * - \"Пт\"\n     * - \"Сб\"\n     * - \"Вс\"\n     */\n    public static weekDaysShortList: string[] = [\n        \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\",\n    ];\n\n    /**\n     * Список названий мясяцев\n     * @type {string[]}\n     */\n    public static monthsList: string[] = [\n        \"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\",\n        \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\",\n    ];\n\n    /**\n     * Список названий коротких названий мясяцев\n     * @type {string[]}\n     */\n    public static monthsShortList: string[] = [\n        \"Янв\", \"Фев\", \"Мрт\", \"Апр\", \"Май\", \"Июн\",\n        \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Ноб\", \"Дек\",\n    ];\n\n    /**\n     * Создает объект времени по дате\n     * @param {number} [day] - день\n     * @param {number} [month] - месяц\n     * @param {number} [year] - год\n     * @param {number} [hour] - час\n     * @param {number} [minute] - минута\n     * @param {number} [second] - секунда\n     *\n     * @return {elyTime}\n     */\n    public static byDate(day: number = 0, month: number = 0, year: number = 0,\n                         hour: number = 0, minute: number = 0, second: number = 0): elyTime {\n        return new elyTime({date: new Date(year, month - 1, day, hour, minute, second)});\n    }\n\n    /**\n     * Возвращает объект текущего времени\n     * @return {elyTime}\n     */\n    public static now(): elyTime {\n        return new elyTime({date: new Date()});\n    }\n\n    /**\n     * Возвращает количество часов со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     *\n     * @return {string}\n     *\n     *\n     *     time.hoursString(5); // 5 часов\n     *     time.hoursString(2); // 2 часа\n     *\n     *\n     */\n    public static hoursString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"часов\",\n            \"час\",\n            \"часа\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Возвращает количество минут со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     *\n     * @return {string}\n     *\n     *\n     *     time.minutesString(5); // 5 минут\n     *     time.minutesString(2); // 2 минуты\n     *\n     *\n     */\n    public static minutesString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"минут\",\n            \"минута\",\n            \"минуты\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Возвращает количество секунд со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     *\n     * @return {string}\n     *\n     *\n     *     time.secondsString(5); // 5 секунд\n     *     time.secondsString(2); // 2 секунды\n     *\n     *\n     */\n    public static secondsString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"секунд\",\n            \"секунда\",\n            \"секунды\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Возвращает количество дней со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     * @return {string}\n     *\n     *\n     *     time.daysString(5); // 5 дней\n     *     time.daysString(2); // 2 дня\n     *\n     *\n     */\n    public static daysString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"дней\",\n            \"день\",\n            \"дня\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Возвращает количество месяцев со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     * @return {string}\n     *\n     *\n     *     time.monthsString(5); // 5 месяцев\n     *     time.monthsString(2); // 2 месяца\n     *\n     *\n     */\n    public static monthsString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"месяцев\",\n            \"месяц\",\n            \"месяца\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Возвращает количество лет со склонением\n     * @param {number} value - значение\n     * @param {boolean} [isUpperFirstChar = false] - делает первую букву\n     * величины закловной\n     * @return {string}\n     *\n     *\n     *     time.yearsString(5); // 5 лет\n     *     time.yearsString(2); // 2 года\n     *\n     *\n     */\n    public static yearsString(value: number, isUpperFirstChar: boolean = false): string {\n        return elyTime.__stringByLastNumber(value, [\n            \"лет\",\n            \"год\",\n            \"года\",\n        ], isUpperFirstChar);\n    }\n\n    /**\n     * Преобразует временной код в части: дни, часы, минуты, секунды.\n     * Такая технология может быть полезна для создания таймеров.\n     *\n     * Использование:\n     * - Сначала необходимо получить разницу веремни, например, используя вычитание;\n     * - Полученное значение может быть трансформировано через этот метод.\n     *\n     * @param {number }timeCode - врменной код\n     * @return {elyTimeDifferences}\n     */\n    public static timeCodeToVars(timeCode: number): elyTimeDifferences {\n        const source = timeCode;\n        timeCode /= 1000;\n        const _days = Math.floor(timeCode / 86400);\n        timeCode -= _days * 86400;\n        const _hours = Math.floor(timeCode / 3600) % 24;\n        timeCode -= _hours * 3600;\n        const _minutes = Math.floor(timeCode / 60) % 60;\n        timeCode -= _minutes * 60;\n        const _seconds = Math.floor(timeCode % 60);\n        return {days: _days, hours: _hours, minutes: _minutes, seconds: _seconds, source};\n    }\n\n    private static __stringByLastNumber(num: number, list: string[], isUpperFirstChar: boolean): string {\n        const str = list[elyTime.__lastNumberChar(num)];\n        return num + \" \" + (isUpperFirstChar ? (str[0].toUpperCase() + str.substr(1)) : str);\n    }\n\n    private static __lastNumberChar(num: number): number {\n        const d100 = num % 100;\n        if (d100 > 10 && d100 < 15) return 0;\n\n        const d10 = num % 10;\n\n        if (d10 === 0 || d10 > 4) return 0;\n        if (d10 === 1) return 1;\n        if (d10 > 1 && d10 < 5) return 2;\n        return 0;\n    }\n\n    /**\n     * Дата\n     */\n    private date: Date;\n\n    /**\n     * Конструткор\n     * @param {{date?: Date}} options - опции\n     */\n    constructor(options: { date: Date } = {date: new Date()}) {\n        this.date = options.date;\n    }\n\n    /**\n     * Возвращает timestamp\n     * @return {number}\n     */\n    public getTime(): number {\n        return this.date.getTime();\n    }\n\n    /**\n     * Возвращает количество дней в месяце для\n     * даты, указанной в elyTime.\n     *\n     * @return {number}\n     */\n    public getDaysInMonth(): number {\n        return 32 - new Date(this.date.getFullYear(), this.date.getMonth(), 32).getDate();\n    }\n\n    /**\n     * Возвращает разницу времени\n     * @param {elyTime} time - время сравнения\n     *\n     * @return {elyTimeDifferences}\n     */\n    public getDifference(time: elyTime): elyTimeDifferences {\n        return elyTime.timeCodeToVars(Math.abs(this.getTime() - time.getTime()));\n    }\n\n    /**\n     * Возвращает разницу времени\n     *\n     * @return {elyTimeDifferences}\n     */\n    public getDifferenceNow(): elyTimeDifferences {\n        return this.getDifference(elyTime.now());\n    }\n\n    /**\n     * Возвращает true, елси текущее время позже, чем время,\n     * указанное в аршументе.\n     * @param {elyTime} time - время сравнения\n     *\n     * @return {boolean}\n     */\n    public isLaterThen(time: elyTime): boolean {\n        return this.getDifference(time).source > 0;\n    }\n\n    /**\n     * Возвращает строку времени\n     * @param {boolean} withTime - если установлено true, в строке будет отображено\n     * время в формате HH:MM:SS\n     *\n     * @return {string}\n     */\n    public getString(withTime: boolean = false): string {\n        const dateString = this.formatZero(this.date.getDate()) + \".\" +\n            this.formatZero(this.date.getMonth() + 1) + \".\" + this.date.getFullYear();\n        if (!withTime) return dateString;\n        const timeString = this.formatZero(this.date.getHours()) + \":\" +\n            this.formatZero(this.date.getMinutes()) + \":\" + this.formatZero(this.date.getSeconds());\n        return `${dateString} ${timeString}`;\n    }\n\n    /**\n     * Возвращает строку времени\n     * @param withSeconds - флаг секунд. Добавляет или убирает SS из формата.\n     *\n     * @return {string}\n     */\n    public getTimeString(withSeconds: boolean = true): string {\n        let ts = this.formatZero(this.date.getHours()) + \":\" +\n            this.formatZero(this.date.getMinutes());\n        if (withSeconds) ts += \":\" + this.formatZero(this.date.getSeconds());\n        return ts;\n    }\n\n    /**\n     * Возвращает дату\n     * @return {{date: number, month: number, year: number}}\n     */\n    public getDate(): { date: number, month: number, year: number } {\n        return {date: this.date.getDate(), month: this.date.getMonth() + 1, year: this.date.getFullYear()};\n    }\n\n    /**\n     * Возвращает время\n     * @return {{hours: number, milliseconds: number, minutes: number, seconds: number}}\n     */\n    public getDateTime(): { hours: number, minutes: number, seconds: number, milliseconds: number } {\n        return {\n            hours: this.date.getHours(),\n            milliseconds: this.date.getMilliseconds(),\n            minutes: this.date.getMinutes(),\n            seconds: this.date.getSeconds(),\n        };\n    }\n\n    /**\n     * Возвращает индекс дня недели\n     * @return {number}\n     */\n    public getWeekDayIndex(): number {\n        switch (this.date.getDay()) {\n            case 0:\n                return 6;\n            case 1:\n                return 0;\n            case 2:\n                return 1;\n            case 3:\n                return 2;\n            case 4:\n                return 3;\n            case 5:\n                return 4;\n            case 6:\n                return 5;\n            default:\n                return 0;\n        }\n    }\n\n    /**\n     * Возвращает название дня недели\n     * @param {boolean} isShort\n     * @return {string}\n     */\n    public getWeekDayName(isShort: boolean = false): string {\n        return isShort ? elyTime.weekDaysShortList[this.getWeekDayIndex()] :\n            elyTime.weekDaysList[this.getWeekDayIndex()];\n    }\n\n    /**\n     * Возвращает строку времени\n     * @return {string}\n     */\n    public toString(): string {\n        return this.getString(true);\n    }\n\n    private formatZero(str: number): string {\n        if (str % 10 === str) {\n            return \"0\" + str;\n        }\n        return String(str);\n    }\n}\n\n/**\n * @typedef {Object} elyTimeDifferences\n * @property {number} days\n * @property {number} hours\n * @property {number} minutes\n * @property {number} seconds\n * @property {number} source\n */\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyPostRequest.ts                                                    +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyLogger from \"@core/elyLogger\";\nimport elyGetRequest from \"@core/web/request/elyGetRequest\";\nimport elyURL from \"@core/web/url/elyURL\";\n\ntype elyPostRequestSendObserver = (response: any, status: number) => void;\n\n/**\n * POST запрос\n */\nexport default class elyPostRequest extends elyGetRequest {\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: { url: elyURL | string } | string) {\n        super(options);\n    }\n\n    /**\n     * Отправляет данные\n     * @param data\n     * @param callback\n     */\n    public send(data: { [p: string]: any } | any, callback?: elyPostRequestSendObserver): void {\n        let fmd = data;\n        if (!(data instanceof FormData)) {\n            fmd = new FormData();\n            for (const index in data) {\n                if (data.hasOwnProperty(index)) {\n                    if (data[index] instanceof Array) {\n                        for (const it of data[index])\n                            fmd.append(index, it);\n                    } else {\n                        fmd.set(index, data[index]);\n                    }\n                }\n            }\n        }\n\n        this.xhr.open(\"POST\", this.url.absoluteString);\n        this.xhr.onreadystatechange = () => {\n            if (this.xhr.readyState === XMLHttpRequest.DONE) {\n                let resp = this.xhr.response;\n                try {\n                    if (this.useJson)\n                        resp = JSON.parse(resp);\n                } catch (e) {\n                    elyLogger.warning(\"Ошибка возникла при обработке JSON в elyGetRequest! \" + this.url.absoluteString);\n                    elyLogger.debugObject(this);\n                    resp = null;\n                }\n                if (callback) callback(resp, this.xhr.status);\n            }\n        };\n        // this.xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        this.xhr.send(fmd);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: color.picker.ts                                                      +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\n/* tslint:disable */\nimport elyGuard from \"@core/elyGuard\";\nimport elyUtils from \"@core/elyUtils\";\nimport {elyColorUtils} from \"@core/elyColorUtils\";\n\n(function (win, doc, NS) {\n\n    var instance = '__instance__',\n        first = 'firstChild',\n        delay = setTimeout;\n\n    function edge(a: any, b: any, c: any) {\n        if (a < b) return b;\n        if (a > c) return c;\n        return a;\n    }\n\n    function num(i: any, j: any) {\n        return parseInt(i, j || 10);\n    }\n\n    function HSV2RGB(a: number[]) {\n        const rgb = elyColorUtils.hsv2rgb({hue: +a[0], saturation: +a[1], value: +a[2]});\n        return [Math.round(rgb.red * 255), Math.round(rgb.green * 255), Math.round(rgb.blue * 255)];\n    }\n\n    function HSV2HEX(a: number[]) {\n        return RGB2HEX(HSV2RGB(a));\n    }\n\n    function RGB2HSV(a: number[]) {\n        const res = elyColorUtils.rgb2hsv({red: +a[0], green: +a[1], blue: +a[2]});\n        return [res.hue, res.saturation, res.value];\n    }\n\n    function RGB2HEX(a: any[]) {\n        return elyColorUtils.rgb2hex({red: +a[0], green: +a[1], blue: +a[2]});\n    }\n\n    // rrggbb or rgb //ok\n    // @ts-ignore\n    function HEX2HSV(s) {\n        return RGB2HSV(HEX2RGB(s));\n    }\n\n    //OK\n    function HEX2RGB(s: any) {\n        if (s.length === 3) {\n            s = s.replace(/./g, '$&$&');\n        }\n        return [num(s[0] + s[1], 16), num(s[2] + s[3], 16), num(s[4] + s[5], 16)];\n    }\n\n    // convert range from `0` to `360` and `0` to `100` in color into range from `0` to `1`\n    function _2HSV_pri(a: any) {\n        return [+a[0] / 360, +a[1] / 100, +a[2] / 100];\n    }\n\n    // convert range from `0` to `1` into `0` to `360` and `0` to `100` in color\n    function _2HSV_pub(a: (any | undefined)[]) {\n        return [Math.round(+a[0] * 360), Math.round(+a[1] * 100), Math.round(+a[2] * 100)];\n    }\n\n    // convert range from `0` to `255` in color into range from `0` to `1`\n    function _2RGB_pri(a: any[]) {\n        return [+a[0] / 255, +a[1] / 255, +a[2] / 255];\n    }\n\n    // *\n    function parse(x: any) {\n        if (typeof x === \"object\") return x;\n        var rgb = /\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i.exec(x),\n            hsv = /\\s*hsv\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)\\s*$/i.exec(x),\n            hex = x[0] === '#' && x.match(/^#([\\da-f]{3}|[\\da-f]{6})$/i);\n        if (hex) {\n            return HEX2HSV(x.slice(1));\n        } else if (hsv) {\n            return _2HSV_pri([+hsv[1], +hsv[2], +hsv[3]]);\n        } else if (rgb) {\n            return RGB2HSV([+rgb[1], +rgb[2], +rgb[3]]);\n        }\n        return [0, 1, 1]; // default is red\n    }\n\n    (function ($) {\n\n        // plugin version\n        // @ts-ignore\n        $.version = '1.4.0';\n\n        // collect all instance(s)\n        // @ts-ignore\n        $[instance] = {};\n\n        // plug to all instance(s)\n        // @ts-ignore\n        $.each = function (fn, t) {\n            return delay(function () {\n                // @ts-ignore\n                var ins = $[instance], i;\n                for (i in ins) {\n                    fn.call(ins[i], i, ins);\n                }\n            }, t === 0 ? 0 : (t || 1)), $;\n        };\n\n        // static method(s)\n        // @ts-ignore\n        $.parse = parse;\n        // @ts-ignore\n        $._HSV2RGB = HSV2RGB;\n        // @ts-ignore\n        $._HSV2HEX = HSV2HEX;\n        // @ts-ignore\n        $._RGB2HSV = RGB2HSV;\n        // @ts-ignore\n        $._HEX2HSV = HEX2HSV;\n        // @ts-ignore\n        $._HEX2RGB = function (a) {\n            return _2RGB_pri(HEX2RGB(a));\n        };\n        // @ts-ignore\n        $.HSV2RGB = function (a) {\n            return HSV2RGB(_2HSV_pri(a));\n        };\n        // @ts-ignore\n        $.HSV2HEX = function (a) {\n            return HSV2HEX(_2HSV_pri(a));\n        };\n        // @ts-ignore\n        $.RGB2HSV = function (a) {\n            return _2HSV_pub(RGB2HSV(a));\n        };\n        // @ts-ignore\n        $.RGB2HEX = RGB2HEX;\n        // @ts-ignore\n        $.HEX2HSV = function (s) {\n            return _2HSV_pub(HEX2HSV(s));\n        };\n        // @ts-ignore\n        $.HEX2RGB = HEX2RGB;\n        // @ts-ignore\n    })(win[NS] = function (source, events, parent) {\n\n        var b = doc.body,\n            h = doc.documentElement,\n            $ = this,\n            // @ts-ignore\n            $$ = win[NS],\n            _ = false,\n            hooks = {},\n            self = doc.createElement('div'),\n            on_down = \"touchstart mousedown\",\n            on_move = \"touchmove mousemove\",\n            on_up = \"touchend mouseup\",\n            on_resize = \"orientationchange resize\";\n\n        // return a new instance if `CP` was called without the `new` operator\n        if (!($ instanceof $$)) {\n            return new $$(source, events);\n        }\n\n        // store color picker instance to `CP.__instance__`\n        $$[instance][source.id || source.name || elyUtils.count($$[instance])] = $;\n\n        // trigger color picker panel on click by default\n        if (!elyGuard.isSet(events) || events === true) {\n            events = on_down;\n        }\n\n        // add event\n        function on(ev: any, el: any, fn: (e: any) => void) {\n            ev = ev.split(/\\s+/);\n            for (var i = 0, ien = ev.length; i < ien; ++i) {\n                el.addEventListener(ev[i], fn, false);\n            }\n        }\n\n        // remove event\n        function off(ev: any, el: any, fn: (e: any) => void) {\n            ev = ev.split(/\\s+/);\n            for (var i = 0, ien = ev.length; i < ien; ++i) {\n                el.removeEventListener(ev[i], fn);\n            }\n        }\n\n        // get mouse/finger coordinate\n        function point(el: any, e: any) {\n            var T = 'touches',\n                X = 'clientX',\n                Y = 'clientY',\n                x = !!e[T] ? e[T][0][X] : e[X],\n                y = !!e[T] ? e[T][0][Y] : e[Y],\n                o = offset(el);\n            return {\n                x: x - o.l,\n                y: y - o.t\n            };\n        }\n\n        // get position\n        function offset(el: any) {\n            var left, top, rect;\n            if (el === win) {\n                // @ts-ignore\n                left = win.pageXOffset || h.scrollLeft;\n                // @ts-ignore\n                top = win.pageYOffset || h.scrollTop;\n            } else {\n                rect = el.getBoundingClientRect();\n                left = rect.left;\n                top = rect.top;\n            }\n            return {\n                l: left,\n                t: top\n            };\n        }\n\n        // get closest parent\n        function closest(a: any, b: any) {\n            while ((a = a.parentElement) && a !== b) ;\n            return a;\n        }\n\n        // prevent default\n        function prevent(e: any) {\n            if (e) e.preventDefault();\n        }\n\n        // get dimension\n        function size(el: any) {\n            return el === win ? {\n                w: win.innerWidth,\n                h: win.innerHeight\n            } : {\n                w: el.offsetWidth,\n                h: el.offsetHeight\n            };\n        }\n\n        // get color data\n        function get_data(a: any) {\n            return _ || (elyGuard.isSet(a) ? a : false);\n        }\n\n        // set color data\n        function set_data(a: any) {\n            _ = a;\n        }\n\n        // add hook\n        function add(ev: any, fn: any, id: any) {\n            if (!elyGuard.isSet(ev)) return hooks;\n            // @ts-ignore\n            if (!elyGuard.isSet(fn)) return hooks[ev];\n            // @ts-ignore\n            if (!elyGuard.isSet(hooks[ev])) hooks[ev] = {};\n            // @ts-ignore\n            if (!elyGuard.isSet(id)) id = elyUtils.count(hooks[ev]);\n            // @ts-ignore\n            return hooks[ev][id] = fn, $;\n        }\n\n        // remove hook\n        function remove(ev: any, id: any) {\n            if (!elyGuard.isSet(ev)) return hooks = {}, $;\n            // @ts-ignore\n            if (!elyGuard.isSet(id)) return hooks[ev] = {}, $;\n            // @ts-ignore\n            return delete hooks[ev][id], $;\n        }\n\n        // trigger hook\n        function trigger(ev: any, a: any[], id: any) {\n            // @ts-ignore\n            if (!elyGuard.isSet(hooks[ev])) return $;\n            if (!elyGuard.isSet(id)) {\n                // @ts-ignore\n                for (var i in hooks[ev]) {\n                    // @ts-ignore\n                    hooks[ev][i].apply($, a);\n                }\n            } else {\n                // @ts-ignore\n                if (elyGuard.isSet(hooks[ev][id])) {\n                    // @ts-ignore\n                    hooks[ev][id].apply($, a);\n                }\n            }\n            return $;\n        }\n\n        // initialize data ...\n        set_data($$.parse(source.getAttribute('data-color') || source.value || [0, 1, 1]));\n\n        // generate color picker pane ...\n        self.className = 'color-picker';\n        self.innerHTML = '<div class=\"color-picker-container\"><span class=\"color-picker-h\"><i></i></span><span class=\"color-picker-sv\"><i></i></span></div>';\n        // @ts-ignore\n        var c = self[first].children,\n            HSV = get_data([0, 1, 1]), // default is red\n            H = c[0],\n            SV = c[1],\n            H_point = H[first],\n            SV_point = SV[first],\n            start_H = 0,\n            start_SV = 0,\n            drag_H = 0,\n            drag_SV = 0,\n            left = 0,\n            top = 0,\n            P_W = 0,\n            P_H = 0,\n            v = HSV2HEX(HSV),\n            // @ts-ignore\n            set;\n\n        // on update ...\n        function trigger_(k: any | number, x: any[]) {\n            if (!k || k === \"h\") {\n                // @ts-ignore\n                trigger(\"change:h\", x);\n            }\n            if (!k || k === \"sv\") {\n                // @ts-ignore\n                trigger(\"change:sv\", x);\n            }\n            // @ts-ignore\n            trigger(\"change\", x);\n        }\n\n        // is visible?\n        function visible() {\n            return self.parentNode;\n        }\n\n        // create\n        function create(first: any, bucket: any) {\n            if (!first) {\n                // @ts-ignore\n                (parent || bucket || b).appendChild(self), $.visible = true;\n            }\n\n            function click(e: any) {\n                const t = e.target,\n                    is_source = t === source || closest(t, source) === source;\n                if (is_source) {\n                    // @ts-ignore\n                    create();\n                } else {\n                    // @ts-ignore\n                    $.exit();\n                }\n                // @ts-ignore\n                trigger(is_source ? \"enter\" : \"exit\", [$]);\n            }\n\n            P_W = size(self).w;\n            P_H = size(self).h;\n            var SV_size = size(SV),\n                SV_point_size = size(SV_point),\n                H_H = size(H).h,\n                SV_W = SV_size.w,\n                SV_H = SV_size.h,\n                H_point_H = size(H_point).h,\n                SV_point_W = SV_point_size.w,\n                SV_point_H = SV_point_size.h;\n            if (first) {\n                self.style.left = self.style.top = '-9999px';\n                if (events !== false) {\n                    on(events, source, click);\n                }\n                // @ts-ignore\n                $.create = function () {\n                    // @ts-ignore\n                    return create(1), trigger(\"create\", [$]), $;\n                };\n                // @ts-ignore\n                $.destroy = function () {\n                    if (events !== false) {\n                        off(events, source, click);\n                    }\n                    // @ts-ignore\n                    $.exit(), set_data(false);\n                    // @ts-ignore\n                    return trigger(\"destroy\", [$]), $;\n                };\n            } else {\n                fit();\n            }\n            set = function () {\n                // @ts-ignore\n                HSV = get_data(HSV), color();\n                H_point.style.top = (H_H - (H_point_H / 2) - (H_H * +HSV[0])) + 'px';\n                SV_point.style.right = (SV_W - (SV_point_W / 2) - (SV_W * +HSV[1])) + 'px';\n                SV_point.style.top = (SV_H - (SV_point_H / 2) - (SV_H * +HSV[2])) + 'px';\n            };\n            // @ts-ignore\n            $.exit = function (e) {\n                if (visible()) {\n                    // @ts-ignore\n                    visible().removeChild(self);\n                    // @ts-ignore\n                    $.visible = false;\n                }\n                off(on_down, H, down_H);\n                off(on_down, SV, down_SV);\n                off(on_move, doc, move);\n                off(on_up, doc, stop);\n                off(on_resize, win, fit);\n                return $;\n            };\n\n            function color(e: any) {\n                var a = HSV2RGB(HSV),\n                    b = HSV2RGB([HSV[0], 1, 1]);\n                SV.style.backgroundColor = 'rgb(' + b.join(',') + ')';\n                set_data(HSV);\n                prevent(e);\n            };\n            set();\n\n            function do_H(e: any) {\n                var y = edge(point(H, e).y, 0, H_H);\n                HSV[0] = (H_H - y) / H_H;\n                H_point.style.top = (y - (H_point_H / 2)) + 'px';\n                color(e);\n            }\n\n            function do_SV(e: any) {\n                var o = point(SV, e),\n                    x = edge(o.x, 0, SV_W),\n                    y = edge(o.y, 0, SV_H);\n                HSV[1] = 1 - ((SV_W - x) / SV_W);\n                HSV[2] = (SV_H - y) / SV_H;\n                SV_point.style.right = (SV_W - x - (SV_point_W / 2)) + 'px';\n                SV_point.style.top = (y - (SV_point_H / 2)) + 'px';\n                color(e);\n            }\n\n            function move(e: any) {\n                if (drag_H) {\n                    do_H(e), v = HSV2HEX(HSV);\n                    if (!start_H) {\n                        // @ts-ignore\n                        trigger(\"drag:h\", [v, $]);\n                        // @ts-ignore\n                        trigger(\"drag\", [v, $]);\n                        trigger_(\"h\", [v, $]);\n                    }\n                }\n                if (drag_SV) {\n                    do_SV(e), v = HSV2HEX(HSV);\n                    if (!start_SV) {\n                        // @ts-ignore\n                        trigger(\"drag:sv\", [v, $]);\n                        // @ts-ignore\n                        trigger(\"drag\", [v, $]);\n                        trigger_(\"sv\", [v, $]);\n                    }\n                }\n                start_H = 0,\n                    start_SV = 0;\n            }\n\n            // @ts-ignore\n            function stop(e) {\n                var t = e.target,\n                    k = drag_H ? \"h\" : \"sv\",\n                    a = [HSV2HEX(HSV), $],\n                    is_source = t === source || closest(t, source) === source,\n                    is_self = t === self || closest(t, self) === self;\n                if (!is_source && !is_self) {\n                    // click outside the source or picker element to exit\n                    // @ts-ignore\n                    if (visible() && events !== false) $.exit(), trigger(\"exit\", [$]), trigger_(0, a);\n                } else {\n                    if (is_self) {\n                        // @ts-ignore\n                        trigger(\"stop:\" + k, a);\n                        // @ts-ignore\n                        trigger(\"stop\", a);\n                        trigger_(k, a);\n                    }\n                }\n                drag_H = 0,\n                    drag_SV = 0;\n            }\n\n            // @ts-ignore\n            function down_H(e) {\n                start_H = 1,\n                    drag_H = 1,\n                    move(e), prevent(e);\n                // @ts-ignore\n                trigger(\"start:h\", [v, $]);\n                // @ts-ignore\n                trigger(\"start\", [v, $]);\n                trigger_(\"h\", [v, $]);\n            }\n\n            // @ts-ignore\n            function down_SV(e) {\n                start_SV = 1,\n                    drag_SV = 1,\n                    move(e), prevent(e);\n                // @ts-ignore\n                trigger(\"start:sv\", [v, $]);\n                // @ts-ignore\n                trigger(\"start\", [v, $]);\n                trigger_(\"sv\", [v, $]);\n            }\n\n            if (!first) {\n                on(on_down, H, down_H);\n                on(on_down, SV, down_SV);\n                on(on_move, doc, move);\n                on(on_up, doc, stop);\n                on(on_resize, win, fit);\n            }\n            // @ts-ignore\n        }\n\n        // @ts-ignore\n        create(1);\n\n        delay(function () {\n            var a = [HSV2HEX(HSV), $];\n            // @ts-ignore\n            trigger(\"create\", a);\n            trigger_(0, a);\n        }, 0);\n\n        // fit to window\n        // @ts-ignore\n        $.fit = function (o) {\n            var w = size(win),\n                y = size(h),\n                screen_w = w.w - y.w, // vertical scroll bar\n                // @ts-ignore\n                screen_h = w.h - h.clientHeight, // horizontal scroll bar\n                ww = offset(win),\n                to = offset(source);\n            left = to.l + ww.l;\n            top = to.t + ww.t + size(source).h; // drop!\n            if (typeof o === \"object\") {\n                elyGuard.isSet(o[0]) && (left = o[0]);\n                elyGuard.isSet(o[1]) && (top = o[1]);\n            } else {\n                var min_x = ww.l,\n                    min_y = ww.t,\n                    max_x = ww.l + w.w - P_W - screen_w,\n                    max_y = ww.t + w.h - P_H - screen_h;\n                left = edge(left, min_x, max_x) >> 0;\n                top = edge(top, min_y, max_y) >> 0;\n            }\n            self.style.left = left + 'px';\n            self.style.top = top + 'px';\n            // @ts-ignore\n            return trigger(\"fit\", [$]), $;\n        };\n\n        // for event listener ID\n        function fit() {\n            // @ts-ignore\n            return $.fit();\n        }\n\n        // set hidden color picker data\n        // @ts-ignore\n        $.set = function (a) {\n            // @ts-ignore\n            if (a === undefined) return get_data();\n            if (typeof a === \"string\") {\n                a = $$.parse(a);\n            }\n            // @ts-ignore\n            return set_data(a), set(), $;\n        };\n\n        // alias for `$.set()`\n        // @ts-ignore\n        $.get = function (a) {\n            return get_data(a);\n        };\n\n        // register to global ...\n        // @ts-ignore\n        $.source = source;\n        // @ts-ignore\n        $.self = self;\n        // @ts-ignore\n        $.visible = false;\n        // @ts-ignore\n        $.on = add;\n        // @ts-ignore\n        $.off = remove;\n        // @ts-ignore\n        $.fire = trigger;\n        // @ts-ignore\n        $.hooks = hooks;\n        // @ts-ignore\n        $.enter = function (bucket) {\n            return create(0, bucket);\n        };\n\n        // return the global object\n        return $;\n\n    });\n\n})(window, document, 'CP');","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Файл: elyColorPickerField.ts                                               +\n + Файл создан: 23.11.2018 23:03:37                                           +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport \"@devMods/elyColorPicker.elymod/color.picker\";\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efField, efFieldOptions} from \"@controls/input/efField\";\nimport elyColor from \"@core/elyColor\";\nimport {designable, elyDesignableFieldState} from \"@core/elyDesignable\";\nimport {efContainerView} from \"@controls/layout/efContainerView\";\nimport {efIconView} from \"@controls/text/efIconView\";\n\n/**\n * @class elyColorPickerField\n * @augments {elyField<string>}\n * Поле выблора цвета\n *\n *\n *     // Создаём объект выбора цвета\n *     let pickerField = new ely.colorPickerField();\n *\n *     pickerField.addChangeValueObserver( oldValue, newValue => {\n *         console.log(\"Выбран цвет: \" + newValue.toString());\n *     });\n *\n *\n */\n@designable(\"value\", elyDesignableFieldState.DENY)\n@designable(\"placeholder\", elyDesignableFieldState.DENY)\nexport default class elyColorPickerField extends efField<elyColor> {\n\n    /**\n     * Элемент выбора\n     * @todo Rewrite color picker element (WOW)\n     */\n    public picker: any;\n\n    /**\n     * Элемент отображения цвета\n     * @type {elyControl}\n     */\n    public colorView: elyControl = new elyControl({class: \"ef-color-pict\"});\n\n    /**\n     * Иконка цвета\n     * @type {elyControl}\n     */\n    public colorThumbnail: elyControl = new elyControl();\n\n    public readonly actionIconView: efContainerView<efIconView> =\n        new efContainerView<efIconView>(new efIconView({iconName: \"edit\"}));\n\n    /**\n     * Конструктор\n     * @param options\n     */\n    public constructor(options: efFieldOptions<elyColor> = {}) {\n        super(options);\n        this.addClass(\"ef-input\");\n        const accessory = this.getAccessory() as HTMLInputElement;\n\n        // this.colorThumbnail.addClass(\"bg-primary\");\n        this.colorView.addSubView(this.colorThumbnail);\n        // this.actionIconView.getDocument().append(this.colorThumbnail.getDocument());\n        // this.colorThumbnail.getDocument().innerHTML = \"&nbsp\";\n        this.valueProperty.set(elyColor.black());\n        this.actionIconView.addClass(\"ef-input-suffix\");\n        this.getDocument().append(this.actionIconView.getDocument());\n        this.addClass(\"with-suffix\");\n\n        this.actionIconView.addObserver(\"click\", () => this.editableProperty.toggle());\n\n        this.valueProperty.change(value => {\n            this.picker.set(value.toString());\n            accessory.value = (value.toString());\n            // this.colorThumbnail.css({\"background-color\": value.getDarkerColor(0.2).toString()});\n            this.getAccessory().style.color = value.getDarkerColor(0.14).toString();\n        });\n\n        this.editableProperty.change((value) => {\n            accessory.disabled = !value;\n            if (value) {\n                this.picker.create();\n                this.picker.enter();\n            } else this.picker.destroy();\n        });\n\n        accessory.oninput = () => {\n            this.picker.set(accessory.value);\n            const ec = new elyColor({hex: accessory.value});\n            accessory.value = ec.toString();\n            // this.colorThumbnail.css({\"background-color\": ec.getDarkerColor(0.2).toString()});\n            this.getAccessory().style.color = ec.getDarkerColor(0.14).toString();\n        };\n\n        // @ts-ignore\n        this.picker = new CP(this.getAccessory());\n\n        this.picker.on(\"exit\", () => {\n            if (this.editable()) {\n                const ec = new elyColor({hex: accessory.value});\n                this.value(ec);\n                this.editable(false);\n            }\n        });\n\n        this.picker.on(\"change\", (color: string) => {\n            if (\"#\" + color === this.value()!.toString()) return;\n            const ec = new elyColor({hex: color});\n            accessory.value = ec.toString();\n            // this.colorThumbnail.css({\"background-color\": ec.getDarkerColor(0.2).toString()});\n            this.getAccessory().style.color = ec.getDarkerColor(0.14).toString();\n        });\n\n        this.placeholder(\"#______\");\n        this.editable(false);\n        this.value(options.value || elyColor.black());\n    }\n\n    /**\n     * Возвращает плейслхолдер для ввода\n     * @return {string}\n     */\n    public placeholder(): string;\n\n    /**\n     * Устанавливает плейслхолдер для ввода\n     * @param {string} value - значение\n     * @return {this}\n     */\n    public placeholder(value: string): elyColorPickerField;\n\n    /**\n     * Возвращает и устанавливает плейслхолдер для ввода\n     * @param {string} [value] - значение\n     * @returns {string|this|null}\n     */\n    public placeholder(value?: string): string | null | elyColorPickerField {\n        if (value === undefined) return (this.getAccessory() as HTMLInputElement).placeholder;\n        (this.getAccessory() as HTMLInputElement).placeholder = value;\n        return this;\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyDirection.ts                                                +\n + Файл изменен: 28.12.2018 01:05:58                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyEnum from \"@enums/elyEnum\";\n\n/**\n * Перечисление направлений\n * @class elyDirection\n * @augments {elyEnum<string>}\n */\nexport default class elyDirection extends elyEnum<string> {\n\n    /**\n     * Наверх\n     */\n    public static readonly up = new elyDirection(\"top\");\n\n    /**\n     * Наверх\n     */\n    public static readonly down = new elyDirection(\"bottom\");\n\n    /**\n     * Наверх\n     */\n    public static readonly top = new elyDirection(\"top\");\n\n    /**\n     * Вниз\n     */\n    public static readonly bottom = new elyDirection(\"bottom\");\n\n    /**\n     * Налево\n     */\n    public static readonly left = new elyDirection(\"left\");\n\n    /**\n     * Направо\n     */\n    public static readonly right = new elyDirection(\"right\");\n\n    /**\n     * Список\n     */\n    public static rawList() {\n        return {\n            bottom: elyDirection.bottom.value,\n            left: elyDirection.left.value,\n            right: elyDirection.right.value,\n            top: elyDirection.top.value,\n        };\n    }\n\n    /**\n     * Список\n     */\n    public static list() {\n        return {\n            bottom: elyDirection.bottom,\n            left: elyDirection.left,\n            right: elyDirection.right,\n            top: elyDirection.top,\n        };\n    }\n\n    /**\n     * Конструктор\n     * @ignore\n     * @param val\n     */\n    protected constructor(val: string) {\n        super(val);\n    }\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: elyDataPickerField.ts                                                +\n + Файл изменен: 08.01.2019 02:54:40                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport elyControl from \"@controls/action/elyControl\";\nimport {efListView} from \"@controls/list/efListView\";\nimport elyIconView from \"@controls/text/elyIconView\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyGuard from \"@core/elyGuard\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyObservableArray from \"@core/observable/properties/elyObservableArray\";\nimport elyObservableDictionary from \"@core/observable/properties/elyObservableDictionary\";\nimport {elyFieldView, elyFieldViewOptions} from \"@fields/elyFieldView\";\n\n/**\n * Опции для {@link elyDataPickerField}\n */\nexport interface elyDataPickerFieldOptions extends elyFieldViewOptions<any> {\n    maxTipsCount?: number;\n    items?: { [title: string]: any } | string[];\n}\n\n/**\n * Поле: Выбор элемента\n * @class elyDataPickerField\n * @augments {elyField<*>}\n *\n */\nexport class elyDataPickerField extends elyFieldView<any> {\n\n    /**\n     * Элементы поля\n     * @type {elyObservableDictionary<*>}\n     * @readonly\n     */\n    public readonly items: elyObservableDictionary<any> = new elyObservableDictionary<any>();\n\n    /**\n     * Элемент отображения подсказок\n     */\n    public readonly tipsView = new elyControl({class: \"ef-tips-view\"});\n\n    /**\n     * Найденные ключи\n     * @type {elyObservableArray<string>}\n     */\n    public readonly searchResultsKeys: elyObservableArray<string> = new elyObservableArray<string>();\n\n    /**\n     * Иконка\n     * @type {elyIconView}\n     */\n    public readonly actionIconView: elyIconView = new elyIconView({class: \"ef-input-status\"});\n\n    /**\n     * Максимальное количество подсказок\n     * @protected\n     * @type {number}\n     */\n    protected __maxTipsCount: number = 5;\n\n    /**\n     * Конструктор\n     * @param {elyDataPickerFieldOptions} props - параметры\n     */\n    public constructor(props: elyDataPickerFieldOptions = {}) {\n        super({accessory: new elyControl({tag: \"input\", class: \"ef-input\"})});\n        this.getDocument().append(this.actionIconView.getDocument());\n\n        const accessory = this.accessoryView.getDocument() as HTMLInputElement;\n\n        /**\n         * Максимальное кол-во подсказок\n         * @protected\n         */\n        this.__maxTipsCount = props.maxTipsCount || 5;\n\n        this.editableProperty.change(value => {\n            accessory.disabled = !value;\n            if (value) {\n                this.actionIconView.iconName(\"close\");\n                accessory.value = \"\";\n                this.accessoryView.makeFirstResponder();\n                this.tipsView.hidden(false);\n                this.find(accessory.value);\n            } else {\n                this.actionIconView.iconName(\"search\");\n                this.tipsView.hidden(true);\n                if (this.searchResultsKeys.length() === 0) {\n                    if (this.value() !== null) {\n                        accessory.value = this.items.keyOf(this.value()) || \"\";\n                    } else {\n                        accessory.value = \"\";\n                    }\n                }\n            }\n        });\n\n        this.searchResultsKeys.change(() => {\n            const list = new efListView();\n            let index = 0;\n            for (const value of this.searchResultsKeys.get()) {\n                const listItem = new elyTextView({text: value});\n                listItem.getDocument().onclick = () => {\n                    this.valueProperty.set(this.items.item(value));\n                };\n                list.addView(listItem);\n                index++;\n                if (index >= this.maxTipsCount()) break;\n            }\n\n            this.tipsView.removeViewContent();\n            this.tipsView.addSubView(list);\n        });\n\n        this.valueProperty.change(value => {\n            accessory.value = this.items.keyOf(value) || \"\";\n            this.editable(false);\n        });\n\n        this.actionIconView.hidden(false);\n        this.editable(false);\n\n        if (props.items) this.addItems(props.items);\n\n        accessory.oninput = (e: any) => {\n            this.find(accessory.value, e.inputType === \"insertText\");\n        };\n        this.getDocument().append(this.tipsView.getDocument());\n\n        this.actionIconView.addObserver(\"click\", () => this.editableProperty.toggle());\n\n        if (elyGuard.isSet(props.placeholder)) accessory.placeholder = props.placeholder!;\n        if (elyGuard.isSet(props.value)) this.value(props.value);\n    }\n\n    /**\n     * Выполняет поиск\n     * @param {string} str\n     * @param {boolean} [completion = false]\n     */\n    public find(str: string, completion: boolean = false): void {\n        this.searchResultsKeys.clear();\n\n        this.items.forEach(title => {\n            if (title.toLowerCase().indexOf(str.toLowerCase()) > -1)\n                this.searchResultsKeys.push(title);\n        });\n        if (this.searchResultsKeys.length() === 1 && completion) {\n            const item = this.items.item(this.searchResultsKeys.item(0));\n            if (item !== null) this.valueProperty.set(item);\n        }\n    }\n\n    /**\n     * Добавляет значение\n     * @param {string} title\n     * @param {*} value\n     * @return {this}\n     */\n    public addItem(title: string, value: any): elyDataPickerField {\n        this.items.add(title, value);\n        return this;\n    }\n\n    /**\n     * Лобавляет значения\n     * @param {* | string[]} items - значения\n     */\n    public addItems(items: { [title: string]: any } | string[]): elyDataPickerField {\n        if (items instanceof Array) {\n            items.forEach((value, index) => {\n                this.addItem(value, index);\n            });\n        } else {\n            elyUtils.forEach(items, (index, value) => this.addItem(index, value));\n        }\n        return this;\n    }\n\n    /**\n     * Возвращает true, если поле пустое\n     * @return {boolean}\n     */\n    public isEmpty(): boolean {\n        return this.valueProperty.isNull();\n    }\n\n    /**\n     * Возвращает максимальное количество результатов\n     * @return {number}\n     */\n    public maxTipsCount(): number;\n\n    /**\n     * Устанавливает максимальное количество результатов\n     * @param value\n     */\n    public maxTipsCount(value: number): elyDataPickerField;\n\n    /**\n     * Максимальное кол-во подсказок\n     * @param {number} [value]\n     * @return {this|number}\n     */\n    public maxTipsCount(value?: number): number | elyDataPickerField {\n        if (value === undefined) return this.__maxTipsCount;\n        this.__maxTipsCount = value;\n        return this;\n    }\n\n}\n","/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n +                                                                            +\n + ,--. o                   |    o                                            +\n + |   |.,---.,---.,---.    |    .,---.,---.                                  +\n + |   |||---'|   ||   |    |    ||   ||   |                                  +\n + `--' ``---'`---|`---'    `---'``   '`---|                                  +\n +            `---'                    `---'                                  +\n +                                                                            +\n + Copyright (C) 2016-2019, Yakov Panov (Yakov Ling)                          +\n + Mail: <diegoling33@gmail.com>                                              +\n +                                                                            +\n + Это программное обеспечение имеет лицензию, как это сказано в файле        +\n + COPYING, который Вы должны были получить в рамках распространения ПО.      +\n +                                                                            +\n + Использование, изменение, копирование, распространение, обмен/продажа      +\n + могут выполняться исключительно в согласии с условиями файла COPYING.      +\n +                                                                            +\n + Проект: ely.flat                                                           +\n +                                                                            +\n + Файл: ely.flat.ts                                                          +\n + Файл изменен: 02.01.2019 14:04:43                                          +\n +                                                                            +\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\n\nimport efApplication from \"@app/app/efApplication\";\nimport elyFileWatcher from \"@app/app/elyFileWatcher\";\nimport {efAppDevelopConsole} from \"@app/develop/efAppDevelopConsole\";\nimport efCanvas from \"@cnv/efCanvas\";\nimport efCanvasLayer from \"@cnv/efCanvasLayer\";\nimport efSize from \"@cnv/objs/efSize\";\nimport elyGridViewController from \"@controllers/elyGridViewController\";\nimport elyScreenController from \"@controllers/elyScreenController\";\nimport elySimplePageViewController from \"@controllers/elySimplePageViewController\";\nimport elyViewController from \"@controllers/elyViewController\";\nimport {efButton} from \"@controls/action/efButton\";\nimport elyControl from \"@controls/action/elyControl\";\nimport elyInput from \"@controls/action/elyInput\";\nimport elyProgressView from \"@controls/action/elyProgressView\";\nimport {efPanelView} from \"@controls/content/efPanelView\";\nimport {elyDataGridView} from \"@controls/data/elyDataGridView\";\nimport elyStylesheet from \"@controls/elyStylesheet\";\nimport \"@controls/elyUIExt\";\nimport elyGridView from \"@controls/flex/elyGridView\";\nimport elyStaticGridView from \"@controls/flex/elyStaticGridView\";\nimport {efField} from \"@controls/input/efField\";\nimport {efSwitchField} from \"@controls/input/efSwitchField\";\nimport {efTextField} from \"@controls/input/efTextField\";\nimport {efGridLayoutView} from \"@controls/layout/efGridLayoutView\";\nimport {efRowLayoutView} from \"@controls/layout/efRowLayoutView\";\nimport {efListView} from \"@controls/list/efListView\";\nimport {efNavigationView} from \"@controls/navigation/efNavigationView\";\nimport {efNotificationView} from \"@controls/notification/efNotificationView\";\nimport elyProgressNotificationView from \"@controls/notification/elyProgressNotificationView\";\nimport {efHeaderTextView} from \"@controls/text/efHeaderTextView\";\nimport {efIconView} from \"@controls/text/efIconView\";\nimport {efLinkTextView} from \"@controls/text/efLinkTextView\";\nimport {efTextView} from \"@controls/text/efTextView\";\nimport elyIconView from \"@controls/text/elyIconView\";\nimport elyTextView from \"@controls/text/elyTextView\";\nimport elyTextViewEditable from \"@controls/text/elyTextViewEditable\";\nimport {efImageView} from \"@controls/view/efImageView\";\nimport {efModalView} from \"@controls/view/efModalView\";\nimport {efPreloaderView} from \"@controls/view/efPreloaderView\";\nimport {elyFormView} from \"@controls/view/elyFormView\";\nimport elyScrollView from \"@controls/view/elyScrollView\";\nimport elyTableView from \"@controls/view/elyTableView\";\nimport elyView from \"@core/controls/elyView\";\nimport elyColor from \"@core/elyColor\";\nimport {elyColorUtils} from \"@core/elyColorUtils\";\nimport elyCookie from \"@core/elyCookie\";\nimport elyDeviceDetector from \"@core/elyDeviceDetector\";\nimport elyGuard from \"@core/elyGuard\";\nimport elySimpleJSONParser from \"@core/elySimpleJSONParser\";\nimport {elyTime} from \"@core/elyTime\";\nimport elyTimer from \"@core/elyTimer\";\nimport elyUtils from \"@core/elyUtils\";\nimport elyXLogger from \"@core/utils/elyXLogger\";\nimport elyGetRequest from \"@core/web/request/elyGetRequest\";\nimport elyPostRequest from \"@core/web/request/elyPostRequest\";\nimport elyURL from \"@core/web/url/elyURL\";\nimport elyColorPickerField from \"@devMods/elyColorPicker.elymod/elyColorPickerField\";\nimport elyAxis from \"@enums/elyAxis\";\nimport elyDirection from \"@enums/elyDirection\";\nimport elySize from \"@enums/elySize\";\nimport elyStyle from \"@enums/elyStyle\";\nimport Size from \"@enums/Size\";\nimport Style from \"@enums/Style\";\nimport TextFieldType from \"@enums/textFieldType\";\nimport Weight from \"@enums/Weight\";\nimport {elyDataPickerField} from \"@fields/elyDataPickerField\";\nimport {elyTextField} from \"@fields/elyTextField\";\nimport ef2DVector from \"@math/ef2DVector\";\nimport ef2DVectorValues from \"@math/ef2DVectorValues\";\n\n/**\n * @interface elyViewOptions\n */\n\n/**\n * @typedef {Object} IPosition\n * @property {number|string} [top]\n * @property {number|string} [right]\n * @property {number|string} [bottom]\n * @property {number|string} [left]\n */\n\n/**\n * @typedef {Object} elyFlexGridViewOptions\n * @property {number[][]} [flex]\n * @property {IPosition} [margin]\n */\n\n/**\n * @typedef {elyFlexGridViewOptions} elyFormViewOptions\n * @property {boolean} [checkEmpty = true] - проверка на пустоту\n * @property {boolean} [detectSubmitButton = true] - автоопределение кнопки submit\n * @property {boolean} [checkValidation = true] - проверка валидации\n */\n\n/**\n * @typedef {Object} elyFieldViewOptions\n * @property {string} [placeholder]\n * @property {boolean} [editable]\n * @property {string} [hint]\n */\n\n/**\n * @typedef {elyFieldViewOptions} elySwitchFieldOptions\n * @property {string} [title]\n * @property {boolean} [value]\n */\n\n/**\n * @typedef {elyFieldOptions} elyDataPickerFieldOptions\n * @property {number} [maxTipsCount]\n * @property {Object|string[]} [items]\n * @property {*} [value]\n */\n\n/**\n * @typedef {elyFieldOptions} elyTextFieldOptions\n * @property {elyFieldType} [fieldType]\n * @property {boolean} [encrypted]\n * @property {string} [fieldIcon]\n * @property {string} [value]\n */\n\n/**\n *\n * @param result\n */\nconst elyOnReady = (result: (next: (result: boolean, reason?: string) => void) => void): void => {\n    efApplication.default.addReadyObserver(result);\n};\n\n/**\n *\n * @param name\n * @param viewController\n * @param canOverwrite\n */\nconst addController = (name: string, viewController: elyViewController, canOverwrite: boolean = true): void => {\n    elyScreenController.default.addControllerName(name, viewController, canOverwrite);\n};\n\n/**\n * Возвращает приложение\n * @return {efApplication}\n */\nconst app = (): efApplication => {\n    return efApplication.default;\n};\n\n/**\n * Возвращает навигацию\n * @return {efNavigationView}\n */\nconst navigation = (): efNavigationView => {\n    return app().getApplicationNavigationView();\n};\n\nconst developMode = (bool: boolean) => {\n    if (bool) {\n        elyOnReady(next => {\n            new elyFileWatcher({filePath: \"js/index.js\"}).start().addUpdateListener(() => {\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            });\n            next(true);\n        });\n    }\n};\n\nwindow.onload = () => {\n    elyXLogger.default.clear = true;\n    efApplication.loadApplication(() => {\n        //\n    });\n};\n\ndeclare global {\n    interface Window {\n        elyflatobjects: any;\n    }\n}\n\nwindow.elyflatobjects = {\n    elyView,\n    elyColor,\n\n    elyControl,\n\n    elyIconView,\n    elyTextViewEditable,\n\n    elyProgressView,\n    elyTextView,\n    elyGridView,\n    elyStaticGridView,\n    efImageView,\n    elyFormView,\n    elyDataGridView,\n    efNotificationView,\n    elyProgressNotificationView,\n\n    efModalView,\n    elyScrollView,\n    elyTableView,\n\n    elyInput,\n    elyTextField,\n    elyDataPickerField,\n    elyColorPickerField,\n\n    efTextView,\n    efLinkTextView,\n    efIconView,\n    efButton,\n\n    efListView,\n\n    efNavigationView,\n\n    efAppDevelopConsole,\n};\n\n// @ts-ignore\nexport {\n    app,\n    navigation,\n    elyOnReady,\n    addController,\n    developMode,\n\n    elyStylesheet,\n    efApplication,\n\n    elyTime,\n    elyDeviceDetector,\n    elyColor,\n    elyGuard,\n    elyTimer,\n    elyCookie,\n\n    elyXLogger,\n    elySimpleJSONParser,\n    elyUtils,\n    elyColorUtils,\n    elyFileWatcher,\n\n    elyURL,\n    elyGetRequest,\n    elyPostRequest,\n\n    elyView,\n\n    elyControl,\n\n    elyIconView,\n    elyTextViewEditable,\n\n    elyProgressView,\n    elyTextView,\n    elyGridView,\n    elyStaticGridView,\n    efImageView,\n    elyFormView,\n    elyDataGridView,\n    efNotificationView,\n    elyProgressNotificationView,\n\n    efModalView,\n    elyScrollView,\n    elyTableView,\n\n    elyInput,\n    elyTextField,\n    elyDataPickerField,\n    elyColorPickerField,\n\n    elyScreenController,\n    elyViewController,\n    elySimplePageViewController,\n    elyGridViewController,\n\n    Style,\n    Size,\n    Weight,\n    TextFieldType,\n\n    elySize,\n    elyStyle,\n    efSize,\n    elyAxis,\n    elyDirection,\n\n    ef2DVector,\n    ef2DVectorValues,\n    efCanvas,\n    efCanvasLayer,\n\n    efTextView,\n    efLinkTextView,\n    efIconView,\n    efHeaderTextView,\n\n    efButton,\n\n    efListView,\n\n    efField,\n    efTextField,\n    efSwitchField,\n\n    efRowLayoutView,\n    efGridLayoutView,\n\n    efPanelView,\n\n    efNavigationView,\n\n    efPreloaderView,\n};\n"],"names":["elyColor","elyControl","elyTextView","elyIconView","elyProgressView","elyStaticGridView","elyColorPickerField"],"mappings":"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"}